{
    "pdf_info": [
        {
            "para_blocks": [
                {
                    "bbox": [
                        63,
                        95,
                        546,
                        113
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                63,
                                95,
                                546,
                                113
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        63,
                                        95,
                                        546,
                                        113
                                    ],
                                    "type": "text",
                                    "content": "Graph of Thoughts: Solving Elaborate Problems with Large Language Models"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        109,
                        118,
                        501,
                        160
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                109,
                                118,
                                501,
                                160
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": "Maciej Besta"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{1*}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Nils Blach"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{1*}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Ales Kubicek"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{1}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Robert Gerstenberger"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{1}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Lukas Gianinazzi"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{1}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Joanna Gajda"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{2}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Tomasz Lehmann"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{2}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Micha≈Ç Podstawski"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{3}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Hubert Niewiadomski"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{2}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Piotr Nczyk"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{2}"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "text",
                                    "content": ", Torsten Hoefler"
                                },
                                {
                                    "bbox": [
                                        109,
                                        118,
                                        501,
                                        160
                                    ],
                                    "type": "inline_equation",
                                    "content": "^{1}"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        179,
                        161,
                        428,
                        182
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                179,
                                161,
                                428,
                                182
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        179,
                                        161,
                                        428,
                                        182
                                    ],
                                    "type": "text",
                                    "content": "<sup>1</sup>ETH Zurich, <sup>2</sup>Cledar, <sup>3</sup>Warsaw University of Technology bestam@inf.ethz.ch, nils.blach@inf.ethz.ch, htor@inf.ethz.ch"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        153,
                        198,
                        192,
                        209
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                153,
                                198,
                                192,
                                209
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        153,
                                        198,
                                        192,
                                        209
                                    ],
                                    "type": "text",
                                    "content": "Abstract"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        61,
                        217,
                        282,
                        407
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                61,
                                217,
                                282,
                                407
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        61,
                                        217,
                                        282,
                                        407
                                    ],
                                    "type": "text",
                                    "content": "We introduce Graph of Thoughts (GoT): a framework that advances prompting capabilities in large language models (LLMs) beyond those offered by paradigms such as Chain-of-Thought or Tree of Thoughts (ToT). The key idea and primary advantage of GoT is the ability to model the information generated by an LLM as an arbitrary graph, where units of information (\"LLM thoughts\") are vertices, and edges correspond to dependencies between these vertices. This approach enables combining arbitrary LLM thoughts into synergistic outcomes, distilling the essence of whole networks of thoughts, or enhancing thoughts using feedback loops. We illustrate that GoT offers advantages over state of the art on different tasks, for example increasing the quality of sorting by "
                                },
                                {
                                    "bbox": [
                                        61,
                                        217,
                                        282,
                                        407
                                    ],
                                    "type": "inline_equation",
                                    "content": "62\\%"
                                },
                                {
                                    "bbox": [
                                        61,
                                        217,
                                        282,
                                        407
                                    ],
                                    "type": "text",
                                    "content": " over ToT, while simultaneously reducing costs by "
                                },
                                {
                                    "bbox": [
                                        61,
                                        217,
                                        282,
                                        407
                                    ],
                                    "type": "inline_equation",
                                    "content": ">31\\%"
                                },
                                {
                                    "bbox": [
                                        61,
                                        217,
                                        282,
                                        407
                                    ],
                                    "type": "text",
                                    "content": ". We ensure that GoT is extensible with new thought transformations and thus can be used to spearhead new prompting schemes. This work brings the LLM reasoning closer to human thinking or brain mechanisms such as recurrence, both of which form complex networks."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        61,
                        417,
                        278,
                        427
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                61,
                                417,
                                278,
                                427
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        61,
                                        417,
                                        278,
                                        427
                                    ],
                                    "type": "text",
                                    "content": "Website & code: https://github.com/spcl/graph-of-thoughts"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        129,
                        439,
                        215,
                        450
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                129,
                                439,
                                215,
                                450
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        129,
                                        439,
                                        215,
                                        450
                                    ],
                                    "type": "text",
                                    "content": "1 Introduction"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        50,
                        454,
                        292,
                        499
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                454,
                                292,
                                499
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        454,
                                        292,
                                        499
                                    ],
                                    "type": "text",
                                    "content": "Large language models (LLMs) are taking over the world of AI. Recent years saw a rapid development of models primarily based on the decoder-only Transformer variant [64], such as GPT [52, 51, 14, 13], PaLM [19], or LLaMA [62]."
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        50,
                        499,
                        292,
                        619
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                499,
                                292,
                                619
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        499,
                                        292,
                                        619
                                    ],
                                    "type": "text",
                                    "content": "Prompt engineering is a resource-efficient approach for solving different LLM tasks. In brief, one includes the task description within the input sent to an LLM. If this description is appropriately formulated, the LLM solves the task using its autoregressive token-based mechanism for generating text. Such prompts may contain example tasks with solutions (few-shot prompting, also referred to as in-context learning (ICL)), or even no example tasks at all (zero-shot prompting). Recent years shown that this mechanism can be used to solve a broad set of tasks that involve mathematical, commonsense, or symbolic reasoning."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        50,
                        619,
                        292,
                        686
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                619,
                                292,
                                686
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        619,
                                        292,
                                        686
                                    ],
                                    "type": "text",
                                    "content": "Chain-of-Thought (CoT) [70] is an approach for prompting, in which one includes the intermediate steps of reasoning within the prompt (intermediate \"thoughts\"), besides the task input/output. CoT was shown to significantly improve the capability of LLMs to solve problems without resorting to any model updates. One major improvement over"
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        315,
                        198,
                        558,
                        308
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                198,
                                558,
                                308
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        198,
                                        558,
                                        308
                                    ],
                                    "type": "text",
                                    "content": "CoT, Self-Consistency with CoT (CoT-SC) [66], is a scheme where multiple CoTs are generated, and then the best one is selected as the outcome. More recently, CoT and CoT-SC were extended with Tree of Thoughts (ToT) [43, 76, 74], which models the LLM reasoning process with a tree. This facilitates using different paths of thoughts, and offers novel capabilities such as backtracking from non-promising outcomes. Unfortunately, the ToT approaches still fundamentally limit the reasoning abilities within a prompt by imposing the rigid tree structure on the thought process."
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        315,
                        308,
                        558,
                        528
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                308,
                                558,
                                528
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        308,
                                        558,
                                        528
                                    ],
                                    "type": "text",
                                    "content": "In this work, we argue that fundamentally more powerful prompting can be achieved by enabling LLM thoughts to form an arbitrary graph structure. This is motivated by numerous phenomena such as human reasoning, brain structure, or algorithmic execution. When working on a novel idea, a human would not only follow a chain of thoughts (as in CoT) or try different separate ones (as in ToT), but would actually form a more complex network of thoughts. For example, one could explore a certain chain of reasoning, backtrack and start a new one, then realize that a certain idea from the previous chain could be combined with the currently explored one, and merge them both into a new solution, taking advantage of their strengths and eliminating their weaknesses. Similarly, brains form complex networks, with graph-like patterns such as recurrence [28]. Executing algorithms also expose networked patterns, often represented by Directed Acyclic Graphs. The corresponding graph-enabled transformations bring a promise of more powerful prompting when applied to LLM thoughts, but they are not naturally expressible with CoT or ToT."
                                }
                            ]
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        315,
                        529,
                        558,
                        660
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                529,
                                558,
                                660
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        529,
                                        558,
                                        660
                                    ],
                                    "type": "text",
                                    "content": "We observe that these (and many other) thought transformations can be naturally enabled when modeling a reasoning process of an LLM as a graph. For this, we propose Graph of Thoughts (GoT), an approach that enhances LLMs' capabilities through networked reasoning (contribution #1). In GoT, an LLM thought is modeled as a vertex, while an edge is a dependency between such thoughts. Using GoT, one can aggregate arbitrary thoughts by constructing vertices that have more than one incoming edge. Overall, the graph abstraction harnessed by GoT seamlessly generalizes CoT and ToT to more complex thought patterns, without resorting to any model updates."
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "bbox": [
                        316,
                        660,
                        558,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                660,
                                558,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        660,
                                        558,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "Yet, putting GoT to practice requires solving several design challenges. For example, what is the best graph structure for different tasks? How to best aggregate thoughts to maximize accuracy and minimize cost? To answer these and"
                                }
                            ]
                        }
                    ],
                    "index": 14
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        14,
                        207,
                        36,
                        558
                    ],
                    "type": "aside_text",
                    "angle": 270,
                    "lines": [
                        {
                            "bbox": [
                                14,
                                207,
                                36,
                                558
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        14,
                                        207,
                                        36,
                                        558
                                    ],
                                    "type": "text",
                                    "content": "arXiv:2308.09687v2 [cs.CL] 21 Aug 2023"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        52,
                        693,
                        124,
                        703
                    ],
                    "type": "page_footnote",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                52,
                                693,
                                124,
                                703
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        52,
                                        693,
                                        124,
                                        703
                                    ],
                                    "type": "text",
                                    "content": "*Equal contribution"
                                }
                            ]
                        }
                    ],
                    "index": 15
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 0
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        50,
                        54,
                        293,
                        197
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                54,
                                293,
                                197
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        293,
                                        197
                                    ],
                                    "type": "text",
                                    "content": "many other questions, we carefully design a modular architecture for implementing GoT (contribution #2), coming with two design highlights. First, we enable a fine-grained control over individual thoughts. This enables us to fully control the ongoing conversation with the LLM, and apply advanced thought transformations, such as combining most promising thoughts from the ongoing reasoning into a new one. Second, we ensure that our architecture can be seamlessly extended with novel thought transformations, patterns of reasoning (i.e., graphs of thoughts), and LLM models. This enables rapid prototyping of novel prompting ideas using GoT, while experimenting with different models such as GPT-3.5, GPT-4, or Llama-2 [63]."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        50,
                        198,
                        293,
                        330
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                198,
                                293,
                                330
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        198,
                                        293,
                                        330
                                    ],
                                    "type": "text",
                                    "content": "We illustrate several use cases for GoT (sorting, keyword counting for summaries, set operations, document merging) and we detail how to implement them using the graph-based paradigm (contribution #3). We evaluate GoT and show its advantages over the state of the art (contribution #4). Overall, we observe that GoT is particularly well-suited for tasks that can be naturally decomposed into smaller subtasks that are solved individually and then merged for a final solution. Here, GoT outperforms other schemes, for example improving upon CoT and ToT by, respectively, "
                                },
                                {
                                    "bbox": [
                                        50,
                                        198,
                                        293,
                                        330
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\approx 70\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        198,
                                        293,
                                        330
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        198,
                                        293,
                                        330
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\approx 62\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        198,
                                        293,
                                        330
                                    ],
                                    "type": "text",
                                    "content": ", in terms of the quality of sorting, while simultaneously reducing costs by "
                                },
                                {
                                    "bbox": [
                                        50,
                                        198,
                                        293,
                                        330
                                    ],
                                    "type": "inline_equation",
                                    "content": ">31\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        198,
                                        293,
                                        330
                                    ],
                                    "type": "text",
                                    "content": " over ToT."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        50,
                        331,
                        293,
                        376
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                331,
                                293,
                                376
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        331,
                                        293,
                                        376
                                    ],
                                    "type": "text",
                                    "content": "We qualitatively compare GoT to other prompting schemes in Table 1. GoT is the only one to enable arbitrary graph-based thought transformations within a prompt, such as aggregation, embracing all previously proposed schemes."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "type": "table",
                    "bbox": [
                        75,
                        388,
                        267,
                        467
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                75,
                                388,
                                267,
                                467
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        75,
                                        388,
                                        267,
                                        467
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                75,
                                                388,
                                                267,
                                                467
                                            ],
                                            "type": "table",
                                            "html": "<table><tr><td>Scheme</td><td>Sc?</td><td>Mc?</td><td>Tr?</td><td>Ag?</td></tr><tr><td>Chain-of-Thought (CoT) [70]</td><td>‚ñ†</td><td>√ó</td><td>√ó</td><td>√ó</td></tr><tr><td>Self-Consistency with CoT [66]</td><td>‚ñ†</td><td>‚ñ†</td><td>√ó</td><td>√ó</td></tr><tr><td>Thought decomposition [74]</td><td>‚ñ†</td><td>‚ñ†</td><td>‚ñ†</td><td>√ó</td></tr><tr><td>Tree-of-Thought (ToT) [43]</td><td>‚ñ†</td><td>‚ñ†</td><td>‚ñ†</td><td>√ó</td></tr><tr><td>Tree of Thoughts (ToT) [76]</td><td>‚ñ†</td><td>‚ñ†</td><td>‚ñ†</td><td>√ó</td></tr><tr><td>Graph of Thoughts (GoT)</td><td>‚ñ†</td><td>‚ñ†</td><td>‚ñ†</td><td>‚ñ†</td></tr></table>",
                                            "image_path": "389c844a6727ed5c7212c5f5f81da6232be15fcdcd7247723598bfd339136dab.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 3,
                            "angle": 0,
                            "type": "table_body"
                        },
                        {
                            "bbox": [
                                50,
                                468,
                                293,
                                578
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        50,
                                        468,
                                        293,
                                        578
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                50,
                                                468,
                                                293,
                                                578
                                            ],
                                            "type": "text",
                                            "content": "Table 1: Comparison of prompting schemes, with respect to the supported transformations of thoughts. \"Sc?\": single chain of thoughts? \"Mc?\": multiple chains of thoughts? \"Tr?\": tree of thoughts? \"Ag?\": arbitrary graph of thoughts? \"\": full support, \"\": partial support, \"\": no support. Note that we do not include a recent scheme called Graph-of-Thought [78] because it is not a prompting scheme. While its name suggests close connections to ToT and CoT, as a fine-tuning scheme, it resorts to model updates, and is thus outside the focus of this work."
                                        }
                                    ]
                                }
                            ],
                            "index": 4,
                            "angle": 0,
                            "type": "table_footnote"
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        50,
                        594,
                        294,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                594,
                                294,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "Finally, we propose a new metric for evaluating a prompting strategy, the volume of a thought (contribution #5). With this metric, we aim to understand better the differences between prompting schemes. For a given thought "
                                },
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "v"
                                },
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ", the volume of "
                                },
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "v"
                                },
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " is the number of LLM thoughts, from which one can reach "
                                },
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "v"
                                },
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " using directed edges. Intuitively, these are all the LLM thoughts that have had the potential to contribute to "
                                },
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "v"
                                },
                                {
                                    "bbox": [
                                        50,
                                        594,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ". We show that GoT, by incorporating thought transformations such as aggregation, enables thoughts to have fundamentally larger volumes than other schemes."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        365,
                        53,
                        511,
                        66
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                365,
                                53,
                                511,
                                66
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        365,
                                        53,
                                        511,
                                        66
                                    ],
                                    "type": "text",
                                    "content": "2 Background & Notation"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        316,
                        69,
                        522,
                        81
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                69,
                                522,
                                81
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        69,
                                        522,
                                        81
                                    ],
                                    "type": "text",
                                    "content": "We first outline background concepts and notation."
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        315,
                        91,
                        538,
                        104
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                91,
                                538,
                                104
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        91,
                                        538,
                                        104
                                    ],
                                    "type": "text",
                                    "content": "2.1 Language Models & In-Context Learning"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        315,
                        107,
                        558,
                        217
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                107,
                                558,
                                217
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        107,
                                        558,
                                        217
                                    ],
                                    "type": "text",
                                    "content": "The conversation with the LLM consists of user messages (prompts) and LLM replies (thoughts). We follow the established notation [76] and we denote a pre-trained language model (LM) with parameters "
                                },
                                {
                                    "bbox": [
                                        315,
                                        107,
                                        558,
                                        217
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\theta"
                                },
                                {
                                    "bbox": [
                                        315,
                                        107,
                                        558,
                                        217
                                    ],
                                    "type": "text",
                                    "content": " as "
                                },
                                {
                                    "bbox": [
                                        315,
                                        107,
                                        558,
                                        217
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{\\theta}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        107,
                                        558,
                                        217
                                    ],
                                    "type": "text",
                                    "content": ". Lowercase letters such as "
                                },
                                {
                                    "bbox": [
                                        315,
                                        107,
                                        558,
                                        217
                                    ],
                                    "type": "inline_equation",
                                    "content": "x, y, z, \\ldots"
                                },
                                {
                                    "bbox": [
                                        315,
                                        107,
                                        558,
                                        217
                                    ],
                                    "type": "text",
                                    "content": " indicate LLM thoughts. We purposefully do not prescribe what is a single \"thought\", and instead make it use-case specific. Hence, a single thought can be a paragraph (e.g., in article summary), a document (e.g., in document generation), a block of code (e.g., in code debugging or optimization), and so on."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        326,
                        218,
                        531,
                        229
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                326,
                                218,
                                531,
                                229
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        326,
                                        218,
                                        531,
                                        229
                                    ],
                                    "type": "text",
                                    "content": "We next describe specific prompting approaches."
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        315,
                        236,
                        558,
                        281
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                236,
                                558,
                                281
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        236,
                                        558,
                                        281
                                    ],
                                    "type": "text",
                                    "content": "Input-Output (IO) The Input-Output (IO) prompting is a straightforward approach, in which we use an LLM to turn an input sequence "
                                },
                                {
                                    "bbox": [
                                        315,
                                        236,
                                        558,
                                        281
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        315,
                                        236,
                                        558,
                                        281
                                    ],
                                    "type": "text",
                                    "content": " into the output "
                                },
                                {
                                    "bbox": [
                                        315,
                                        236,
                                        558,
                                        281
                                    ],
                                    "type": "inline_equation",
                                    "content": "y"
                                },
                                {
                                    "bbox": [
                                        315,
                                        236,
                                        558,
                                        281
                                    ],
                                    "type": "text",
                                    "content": " directly, without any intermediate thoughts."
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        315,
                        287,
                        558,
                        354
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                287,
                                558,
                                354
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        287,
                                        558,
                                        354
                                    ],
                                    "type": "text",
                                    "content": "Chain-of-Thought (CoT) Second, in Chain-of-Thought (CoT), one introduces intermediate thoughts "
                                },
                                {
                                    "bbox": [
                                        315,
                                        287,
                                        558,
                                        354
                                    ],
                                    "type": "inline_equation",
                                    "content": "a_1, a_2, \\ldots"
                                },
                                {
                                    "bbox": [
                                        315,
                                        287,
                                        558,
                                        354
                                    ],
                                    "type": "text",
                                    "content": " between "
                                },
                                {
                                    "bbox": [
                                        315,
                                        287,
                                        558,
                                        354
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        315,
                                        287,
                                        558,
                                        354
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        315,
                                        287,
                                        558,
                                        354
                                    ],
                                    "type": "inline_equation",
                                    "content": "y"
                                },
                                {
                                    "bbox": [
                                        315,
                                        287,
                                        558,
                                        354
                                    ],
                                    "type": "text",
                                    "content": ". This strategy was shown to significantly enhance various LM tasks over the plain IO baseline, such as mathematical puzzles [70] or general mathematical reasoning [24]."
                                }
                            ]
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        315,
                        360,
                        559,
                        460
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                360,
                                559,
                                460
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        360,
                                        559,
                                        460
                                    ],
                                    "type": "text",
                                    "content": "Multiple CoTs Third, one can generalize CoT into multiple CoTs by generating several (independent) "
                                },
                                {
                                    "bbox": [
                                        315,
                                        360,
                                        559,
                                        460
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        360,
                                        559,
                                        460
                                    ],
                                    "type": "text",
                                    "content": " CoTs, and returning the one with the best output (according to some prescribed scoring metric). It was introduced by Wang et al. in the scheme called Self-Consistency with CoT (CoTSC) [66]. This approach enhances CoT because it offers an opportunity to explore different reasoning paths. However, it does not offer \"local exploration\" within a path, such as backtracking."
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "bbox": [
                        315,
                        466,
                        559,
                        620
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                466,
                                559,
                                620
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        466,
                                        559,
                                        620
                                    ],
                                    "type": "text",
                                    "content": "Tree of Thoughts (ToT) Finally, the Tree of Thoughtd (ToT) scheme was introduced independently by Yao [76] and Long [43] (where it is referred to as Tree-of-Thought); it was used implicitly to a certain degree by other schemes such as thought decomposition [74]. It enhances CoT-SC by modeling the process or reasoning as a tree of thoughts. A single tree node represents a partial solution. Based on a given node, the thought generator constructs a given number "
                                },
                                {
                                    "bbox": [
                                        315,
                                        466,
                                        559,
                                        620
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        466,
                                        559,
                                        620
                                    ],
                                    "type": "text",
                                    "content": " of new nodes. Then, the state evaluator generates scores for each such new node. Depending on the use case, the evaluation could be conducted using an LLM itself, or it can harness human scores. Finally, the schedule of extending the tree is dictated by the utilized search algorithm (for example BFS or DFS)."
                                }
                            ]
                        }
                    ],
                    "index": 14
                },
                {
                    "bbox": [
                        372,
                        632,
                        503,
                        643
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                372,
                                632,
                                503,
                                643
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        372,
                                        632,
                                        503,
                                        643
                                    ],
                                    "type": "text",
                                    "content": "3 The GoT Framework"
                                }
                            ]
                        }
                    ],
                    "index": 15
                },
                {
                    "bbox": [
                        315,
                        647,
                        558,
                        670
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                647,
                                558,
                                670
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        647,
                                        558,
                                        670
                                    ],
                                    "type": "text",
                                    "content": "We now detail the GoT framework. We present it in Figure 1, and compare it to other prompting strategies."
                                }
                            ]
                        }
                    ],
                    "index": 16
                },
                {
                    "bbox": [
                        315,
                        670,
                        558,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                670,
                                558,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        670,
                                        558,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "Formally, GoT can be modeled as a tuple "
                                },
                                {
                                    "bbox": [
                                        315,
                                        670,
                                        558,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "(G, \\mathcal{T}, \\mathcal{E}, \\mathcal{R})"
                                },
                                {
                                    "bbox": [
                                        315,
                                        670,
                                        558,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ", where "
                                },
                                {
                                    "bbox": [
                                        315,
                                        670,
                                        558,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "G"
                                },
                                {
                                    "bbox": [
                                        315,
                                        670,
                                        558,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " is the \"LLM reasoning process\" (i.e., all the LLM thoughts within the context, with their relationships), "
                                },
                                {
                                    "bbox": [
                                        315,
                                        670,
                                        558,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{T}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        670,
                                        558,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " are"
                                }
                            ]
                        }
                    ],
                    "index": 17
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 1
        },
        {
            "para_blocks": [
                {
                    "type": "image",
                    "bbox": [
                        51,
                        50,
                        560,
                        233
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                51,
                                50,
                                560,
                                233
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        51,
                                        50,
                                        560,
                                        233
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                51,
                                                50,
                                                560,
                                                233
                                            ],
                                            "type": "image",
                                            "image_path": "924f42d2a041298b0fc5141f9506f086ee562c259058a8f0c317ca9d154c2ff3.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                140,
                                241,
                                468,
                                254
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        140,
                                        241,
                                        468,
                                        254
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                140,
                                                241,
                                                468,
                                                254
                                            ],
                                            "type": "text",
                                            "content": "Figure 1: Comparison of Graph of Thoughts (GoT) to other prompting strategies."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        50,
                        274,
                        293,
                        309
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                274,
                                293,
                                309
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        274,
                                        293,
                                        309
                                    ],
                                    "type": "text",
                                    "content": "the potential thought transformations, "
                                },
                                {
                                    "bbox": [
                                        50,
                                        274,
                                        293,
                                        309
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{E}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        274,
                                        293,
                                        309
                                    ],
                                    "type": "text",
                                    "content": " is an evaluator function used to obtain scores of thoughts, and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        274,
                                        293,
                                        309
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{R}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        274,
                                        293,
                                        309
                                    ],
                                    "type": "text",
                                    "content": " is a ranking function used to select most relevant thoughts."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        51,
                        319,
                        165,
                        331
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                319,
                                165,
                                331
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        319,
                                        165,
                                        331
                                    ],
                                    "type": "text",
                                    "content": "3.1 Reasoning Process"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        50,
                        335,
                        293,
                        456
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                335,
                                293,
                                456
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": "We model the reasoning process as a directed graph "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "G = (V, E)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": "; "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "V"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": " is a set of vertices and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "E \\subseteq V \\times V"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": " is a set of edges. "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "G"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": " is directed and thus the edges are a subset of ordered vertex pairs "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "E \\subseteq V \\times V"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": ". A vertex contains a solution to a problem at-hand (be it an initial, intermediate, or a final one). The concrete form of such a thought depends on a use case; it could be a paragraph (in writing tasks) or a sequence of numbers (in sorting). A directed edge "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "(t_1, t_2)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": " indicates that thought "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "t_2"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": " has been constructed using "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "t_1"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": " as \"direct input\", i.e., by explicitly instructing the LLM to use "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "t_1"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": " for generating "
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "inline_equation",
                                    "content": "t_2"
                                },
                                {
                                    "bbox": [
                                        50,
                                        335,
                                        293,
                                        456
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        50,
                        456,
                        293,
                        544
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                456,
                                293,
                                544
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "text",
                                    "content": "In certain use cases, graph nodes belong to different classes. For example, in writing tasks, some vertices model plans of writing a paragraph, while other vertices model the actual paragraphs of text. In such cases, GoT embraces a heterogeneous graph "
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "inline_equation",
                                    "content": "G = (V, E, c)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "text",
                                    "content": " to model the LLM reasoning, where "
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "inline_equation",
                                    "content": "c"
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "text",
                                    "content": " maps vertices "
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "inline_equation",
                                    "content": "V"
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "text",
                                    "content": " into their respective classes "
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "inline_equation",
                                    "content": "C"
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "text",
                                    "content": " (in the above case, it would be "
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "inline_equation",
                                    "content": "C = \\{ \\text{plan, par} \\}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "text",
                                    "content": "). Hence, any vertex "
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "inline_equation",
                                    "content": "v"
                                },
                                {
                                    "bbox": [
                                        50,
                                        456,
                                        293,
                                        544
                                    ],
                                    "type": "text",
                                    "content": " can model different aspects of reasoning."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        50,
                        544,
                        294,
                        621
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                544,
                                294,
                                621
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        544,
                                        294,
                                        621
                                    ],
                                    "type": "text",
                                    "content": "We associate "
                                },
                                {
                                    "bbox": [
                                        50,
                                        544,
                                        294,
                                        621
                                    ],
                                    "type": "inline_equation",
                                    "content": "G"
                                },
                                {
                                    "bbox": [
                                        50,
                                        544,
                                        294,
                                        621
                                    ],
                                    "type": "text",
                                    "content": " with the LLM reasoning process. To advance this process, one applies thought transformations to "
                                },
                                {
                                    "bbox": [
                                        50,
                                        544,
                                        294,
                                        621
                                    ],
                                    "type": "inline_equation",
                                    "content": "G"
                                },
                                {
                                    "bbox": [
                                        50,
                                        544,
                                        294,
                                        621
                                    ],
                                    "type": "text",
                                    "content": ". An example such transformation is to merge best-scoring (so far) thoughts into a new one. Another example is to loop over a thought, in order to enhance it. Note that these transformations strictly extend the set of transformations available in the CoT, CoT-SC, or ToT."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        51,
                        632,
                        216,
                        645
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                632,
                                216,
                                645
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        632,
                                        216,
                                        645
                                    ],
                                    "type": "text",
                                    "content": "3.2 Transformations of Thoughts"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        50,
                        648,
                        294,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                648,
                                294,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        648,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "GoT enables novel transformations of thoughts thanks to the graph-based model for reasoning. We refer to them as graph-enabled transformations. For example, in writing, one could combine several input articles into one coherent summary. In sorting, one could merge several sorted subar"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "type": "image",
                    "bbox": [
                        317,
                        270,
                        559,
                        426
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                317,
                                270,
                                559,
                                426
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        317,
                                        270,
                                        559,
                                        426
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                317,
                                                270,
                                                559,
                                                426
                                            ],
                                            "type": "image",
                                            "image_path": "313c99a7cbff31924a00440cd2c3eac075781c06b24700434ce4dc734fb21ffe.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 9,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                315,
                                438,
                                559,
                                460
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        315,
                                        438,
                                        559,
                                        460
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                315,
                                                438,
                                                559,
                                                460
                                            ],
                                            "type": "text",
                                            "content": "Figure 2: Examples of aggregation and generation thought transformations."
                                        }
                                    ]
                                }
                            ],
                            "index": 10,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        315,
                        483,
                        558,
                        506
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                483,
                                558,
                                506
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        483,
                                        558,
                                        506
                                    ],
                                    "type": "text",
                                    "content": "rays of numbers into a final sorted array. We illustrate examples of aggregation and generation in Figure 2."
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        315,
                        506,
                        559,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                506,
                                559,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "Formally, each such transformation can be modeled as "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{T}(G,p_{\\theta})"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " where "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "G = (V,E)"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " is the graph reflecting the current state of the reasoning, and "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{\\theta}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " is the used LLM. "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{T}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " modifies "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "G"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " usually by adding new vertices and their incoming edges. We have "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "G^{\\prime} = \\mathcal{T}(G,p_{\\theta}) = (V^{\\prime},E^{\\prime})"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ", where "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "V^{\\prime} = (V\\cup V^{+})\\setminus V^{-}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "E^{\\prime} = (E\\cup E^{+})\\setminus E^{-}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ". "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "V^{+}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "E^{+}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " are new vertices and edges inserted into "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "G"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " to model the new thoughts and their dependencies, respectively. To maximize the expressiveness of GoT - we also enable the user to explicitly remove thoughts, by specifying the corresponding vertices and edges to be removed "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "(V^{-}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "E^{-}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ", respectively). Here, it is the user's responsibility to ensure that the sets "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "V^{+},E^{+},V^{-}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ", and "
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "E^{-}"
                                },
                                {
                                    "bbox": [
                                        315,
                                        506,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " come with consistent transformations (i.e., for example, that the user does not attempt to remove a vertex that does not exist). This enables seamless incorporation of schemes where, in order to save space within the context, one can remove parts of reasoning that do not promise improvements."
                                }
                            ]
                        }
                    ],
                    "index": 12
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 2
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        50,
                        54,
                        294,
                        110
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                54,
                                294,
                                110
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        110
                                    ],
                                    "type": "text",
                                    "content": "The specific form of "
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        110
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{T}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        110
                                    ],
                                    "type": "text",
                                    "content": " and how it impacts "
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        110
                                    ],
                                    "type": "inline_equation",
                                    "content": "G"
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        110
                                    ],
                                    "type": "text",
                                    "content": " depends on a specific transformation. We first detail the primary graph-enabled thought transformations, and then proceed to describe how GoT embraces the transformations from the earlier schemes. Unless stated otherwise, "
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        110
                                    ],
                                    "type": "inline_equation",
                                    "content": "V^{-} = E^{-} = \\emptyset"
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        110
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        50,
                        117,
                        293,
                        251
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                117,
                                293,
                                251
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "text",
                                    "content": "Aggregation Transformations First, with GoT, one can aggregate arbitrary thoughts into new ones, to combine and reinforce the advantages of these thoughts, while eliminating their disadvantages. In the basic form, in which only one new vertex is created, "
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "inline_equation",
                                    "content": "V^{+} = \\{v^{+}\\}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "inline_equation",
                                    "content": "E^{+} = \\{(v_{1},v^{+}),\\dots,(v_{k},v^{+})\\}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "text",
                                    "content": ", where "
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{1},\\dots,v_{k}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "text",
                                    "content": " are the merged "
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "text",
                                    "content": " thoughts. More generally, this enables aggregating reasoning paths, i.e., longer chains of thoughts, beyond just individual thoughts. With the graph model, is it simply achieved by adding outgoing edges from the vertices "
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{1},\\dots,v_{k}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "text",
                                    "content": " modeling final thoughts in several chains, into a single thought "
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "inline_equation",
                                    "content": "v^{+}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        117,
                                        293,
                                        251
                                    ],
                                    "type": "text",
                                    "content": " combining these chains."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        50,
                        255,
                        294,
                        312
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                255,
                                294,
                                312
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        255,
                                        294,
                                        312
                                    ],
                                    "type": "text",
                                    "content": "Refining Transformations Another thought transformation is the refining of a current thought "
                                },
                                {
                                    "bbox": [
                                        50,
                                        255,
                                        294,
                                        312
                                    ],
                                    "type": "inline_equation",
                                    "content": "v"
                                },
                                {
                                    "bbox": [
                                        50,
                                        255,
                                        294,
                                        312
                                    ],
                                    "type": "text",
                                    "content": " by modifying its content: "
                                },
                                {
                                    "bbox": [
                                        50,
                                        255,
                                        294,
                                        312
                                    ],
                                    "type": "inline_equation",
                                    "content": "V^{+} = \\{\\}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        255,
                                        294,
                                        312
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        255,
                                        294,
                                        312
                                    ],
                                    "type": "inline_equation",
                                    "content": "E^{+} = \\{(v,v)\\}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        255,
                                        294,
                                        312
                                    ],
                                    "type": "text",
                                    "content": ". This loop in the graph indicates an iterated thought with the same connections as the original thought."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        50,
                        318,
                        294,
                        376
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                318,
                                294,
                                376
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        318,
                                        294,
                                        376
                                    ],
                                    "type": "text",
                                    "content": "Generation Transformations Finally, one can generate one or more new thoughts based on an existing single thought "
                                },
                                {
                                    "bbox": [
                                        50,
                                        318,
                                        294,
                                        376
                                    ],
                                    "type": "inline_equation",
                                    "content": "v"
                                },
                                {
                                    "bbox": [
                                        50,
                                        318,
                                        294,
                                        376
                                    ],
                                    "type": "text",
                                    "content": ". This class embraces analogous reasoning steps from earlier schemes, such as ToT or CoT-SC. Formally, we have "
                                },
                                {
                                    "bbox": [
                                        50,
                                        318,
                                        294,
                                        376
                                    ],
                                    "type": "inline_equation",
                                    "content": "V^{+} = \\{v_{1}^{+}, \\dots, v_{k}^{+}\\}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        318,
                                        294,
                                        376
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        318,
                                        294,
                                        376
                                    ],
                                    "type": "inline_equation",
                                    "content": "E^{+} = \\{(v, v_{1}^{+}), \\dots, (v, v_{k}^{+})\\}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        318,
                                        294,
                                        376
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        51,
                        384,
                        217,
                        396
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                384,
                                217,
                                396
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        384,
                                        217,
                                        396
                                    ],
                                    "type": "text",
                                    "content": "3.3 Scoring & Ranking Thoughts"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        50,
                        399,
                        293,
                        466
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                399,
                                293,
                                466
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "text",
                                    "content": "Thoughts are scored to understand whether the current solution is good enough. A score is modeled as a general function "
                                },
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{E}(v, G, p_{\\theta})"
                                },
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "text",
                                    "content": ", where "
                                },
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "inline_equation",
                                    "content": "v"
                                },
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "text",
                                    "content": " is a thought to be evaluated. We use the state of the whole reasoning process "
                                },
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "inline_equation",
                                    "content": "(G)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "text",
                                    "content": " in "
                                },
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{E}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        399,
                                        293,
                                        466
                                    ],
                                    "type": "text",
                                    "content": " for maximum generality, because - for example - in some evaluation scenarios, scores may be relative to other thoughts."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        50,
                        466,
                        293,
                        533
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                466,
                                293,
                                533
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "text",
                                    "content": "GoT can also rank thoughts. We model this with a function "
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{R}(G,p_{\\theta},h)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "text",
                                    "content": " where "
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "inline_equation",
                                    "content": "h"
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "text",
                                    "content": " specifies the number of highest-ranking thoughts in "
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "inline_equation",
                                    "content": "G"
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "text",
                                    "content": " to be returned by "
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{R}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "text",
                                    "content": ". While the specific form of "
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{R}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "text",
                                    "content": " depends on a use case, we most often use a simple yet effective strategy where "
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "inline_equation",
                                    "content": "h"
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "text",
                                    "content": " thoughts with highest scores are returned, i.e., "
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "inline_equation",
                                    "content": "v_{1},\\ldots,v_{h} = \\mathcal{R}(G,p_{\\theta},h)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        466,
                                        293,
                                        533
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        50,
                        533,
                        294,
                        578
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                533,
                                294,
                                578
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        533,
                                        294,
                                        578
                                    ],
                                    "type": "text",
                                    "content": "Specific forms of "
                                },
                                {
                                    "bbox": [
                                        50,
                                        533,
                                        294,
                                        578
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{E}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        533,
                                        294,
                                        578
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        533,
                                        294,
                                        578
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathcal{R}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        533,
                                        294,
                                        578
                                    ],
                                    "type": "text",
                                    "content": " depend on a use case. We discuss the details in Section 5. For example, the score (or rank) for sorting corresponds to the count of elements correctly sorted (or incorrectly, when obtaining the error as a score)."
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        68,
                        588,
                        275,
                        602
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                68,
                                588,
                                275,
                                602
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        68,
                                        588,
                                        275,
                                        602
                                    ],
                                    "type": "text",
                                    "content": "4 System Architecture & Extensibility"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        50,
                        605,
                        294,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                605,
                                294,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        605,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "The GoT architecture consists of a set of interacting modules, see Figure 3 (the blue part). These modules are the Prompt (prepares the messages for the LLM), the Parser (extracts information from LLMs' replies), the Scoring module (verifies and scores the LLM replies), and the Controller (coordinates the entire reasoning process, and decides on how to progress it). The Controller contains two further important elements: the Graph of Operations (GoO) and the Graph Reasoning State (GRS). GoO is a static structure that"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        315,
                        55,
                        558,
                        110
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                55,
                                558,
                                110
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        55,
                                        558,
                                        110
                                    ],
                                    "type": "text",
                                    "content": "specifies the graph decomposition of a given task, i.e., it prescribes transformations to be applied to LLM thoughts, together with their order & dependencies. GRS is a dynamic structure that maintains the state of the ongoing LLM reasoning process (the history of its thoughts and their states)."
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        316,
                        119,
                        391,
                        132
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                119,
                                391,
                                132
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        119,
                                        391,
                                        132
                                    ],
                                    "type": "text",
                                    "content": "4.1 Prompt"
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        315,
                        134,
                        558,
                        191
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                134,
                                558,
                                191
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        134,
                                        558,
                                        191
                                    ],
                                    "type": "text",
                                    "content": "The Prompt prepares the prompt to be sent to the LLM. This module is responsible for the specifics of encoding the graph structure within the prompt. The GoT architecture enables the user to implement use-case specific graph encodings by providing full access to the graph structure."
                                }
                            ]
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        316,
                        200,
                        376,
                        211
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                200,
                                376,
                                211
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        200,
                                        376,
                                        211
                                    ],
                                    "type": "text",
                                    "content": "4.2 Parser"
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "bbox": [
                        315,
                        215,
                        558,
                        261
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                215,
                                558,
                                261
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        215,
                                        558,
                                        261
                                    ],
                                    "type": "text",
                                    "content": "The Parser extracts information from LLM's thoughts. For each such thought, the Parser constructs the thought state, which contains this extracted information. The thought state is then used to update GRS accordingly."
                                }
                            ]
                        }
                    ],
                    "index": 14
                },
                {
                    "bbox": [
                        316,
                        269,
                        443,
                        282
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                269,
                                443,
                                282
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        269,
                                        443,
                                        282
                                    ],
                                    "type": "text",
                                    "content": "4.3 Scoring & Validation"
                                }
                            ]
                        }
                    ],
                    "index": 15
                },
                {
                    "bbox": [
                        315,
                        285,
                        558,
                        352
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                285,
                                558,
                                352
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        285,
                                        558,
                                        352
                                    ],
                                    "type": "text",
                                    "content": "Here, we verify whether a given LLM's thought satisfies potential correctness conditions, and then we assign it a score. Depending on how the score is derived, the module may consult the LLM. Moreover, depending on the use case, the score may also be assigned by a human. Finally, use cases such as sorting use simple local scoring functions."
                                }
                            ]
                        }
                    ],
                    "index": 16
                },
                {
                    "bbox": [
                        316,
                        361,
                        394,
                        372
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                361,
                                394,
                                372
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        361,
                                        394,
                                        372
                                    ],
                                    "type": "text",
                                    "content": "4.4 Controller"
                                }
                            ]
                        }
                    ],
                    "index": 17
                },
                {
                    "bbox": [
                        315,
                        376,
                        559,
                        464
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                376,
                                559,
                                464
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        376,
                                        559,
                                        464
                                    ],
                                    "type": "text",
                                    "content": "The Controller implements a specific strategy for selecting thoughts from its GRS structure. It also selects what transformations should be applied to which thoughts, and then passes this information to the Prompter. It also decides whether the whole process should be finalized, or whether the next round of interaction with the LLM should be initiated. In our current design, this is dictated by the execution plan specified in GoO."
                                }
                            ]
                        }
                    ],
                    "index": 18
                },
                {
                    "bbox": [
                        316,
                        474,
                        405,
                        486
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                474,
                                405,
                                486
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        474,
                                        405,
                                        486
                                    ],
                                    "type": "text",
                                    "content": "4.5 GoO & GRS"
                                }
                            ]
                        }
                    ],
                    "index": 19
                },
                {
                    "bbox": [
                        315,
                        489,
                        559,
                        598
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                489,
                                559,
                                598
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        489,
                                        559,
                                        598
                                    ],
                                    "type": "text",
                                    "content": "The user constructs a GoO instance, which prescribes the execution plan of thought operations. GoO is a static structure that is constructed once, before the execution starts. Each operation object knows its predecessor operations and successor operations. Then, during the execution, an instance of GoO maintains the continually updated information about the LLM reasoning process. This includes which operation has been executed so far, the states of all the generated LLM thoughts, their validity and scores, and any other relevant information."
                                }
                            ]
                        }
                    ],
                    "index": 20
                },
                {
                    "bbox": [
                        315,
                        599,
                        559,
                        667
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                599,
                                559,
                                667
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        599,
                                        559,
                                        667
                                    ],
                                    "type": "text",
                                    "content": "The above elements offer extensible APIs, enabling straightforward implementations of different prompting schemes. The APIs are outlines in the green part of Figure 3, and detailed in the documentation. We also provide examples of prompts used by these operations and a corresponding GRS in the red part of Figure 3."
                                }
                            ]
                        }
                    ],
                    "index": 21
                },
                {
                    "bbox": [
                        377,
                        677,
                        499,
                        690
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                377,
                                677,
                                499,
                                690
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        377,
                                        677,
                                        499,
                                        690
                                    ],
                                    "type": "text",
                                    "content": "5 Example Use Cases"
                                }
                            ]
                        }
                    ],
                    "index": 22
                },
                {
                    "bbox": [
                        316,
                        693,
                        491,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                693,
                                491,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        693,
                                        491,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "We now describe several use cases of GoT."
                                }
                            ]
                        }
                    ],
                    "index": 23
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 3
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        54,
                        54,
                        80,
                        63
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                54,
                                54,
                                80,
                                63
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        54,
                                        54,
                                        80,
                                        63
                                    ],
                                    "type": "text",
                                    "content": "Legend"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        56,
                        69,
                        89,
                        76
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                56,
                                69,
                                89,
                                76
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        56,
                                        69,
                                        89,
                                        76
                                    ],
                                    "type": "text",
                                    "content": "Gray block"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        91,
                        70,
                        130,
                        77
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                91,
                                70,
                                130,
                                77
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        70,
                                        130,
                                        77
                                    ],
                                    "type": "text",
                                    "content": "External entity"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        91,
                        79,
                        130,
                        92
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                91,
                                79,
                                130,
                                92
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        91,
                                        79,
                                        130,
                                        92
                                    ],
                                    "type": "text",
                                    "content": "Module of the GoT system"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "type": "image",
                    "bbox": [
                        145,
                        69,
                        159,
                        79
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                145,
                                69,
                                159,
                                79
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        145,
                                        69,
                                        159,
                                        79
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                145,
                                                69,
                                                159,
                                                79
                                            ],
                                            "type": "image",
                                            "image_path": "490b5f435cbe736bbefc377770f2aa440502ff0fc2649d317b5a862d48a72caf.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 4,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        160,
                        70,
                        179,
                        79
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                160,
                                70,
                                179,
                                79
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        160,
                                        70,
                                        179,
                                        79
                                    ],
                                    "type": "text",
                                    "content": "Prompt"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "type": "image",
                    "bbox": [
                        186,
                        69,
                        205,
                        79
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                186,
                                69,
                                205,
                                79
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        186,
                                        69,
                                        205,
                                        79
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                186,
                                                69,
                                                205,
                                                79
                                            ],
                                            "type": "image",
                                            "image_path": "6546c668f528b4360e10f4984a54ed166b097a40787ae5a49464c21b25e2806b.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 6,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        205,
                        70,
                        225,
                        77
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                205,
                                70,
                                225,
                                77
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        205,
                                        70,
                                        225,
                                        77
                                    ],
                                    "type": "text",
                                    "content": "Thought:"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "type": "image",
                    "bbox": [
                        226,
                        70,
                        242,
                        77
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                226,
                                70,
                                242,
                                77
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        226,
                                        70,
                                        242,
                                        77
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                226,
                                                70,
                                                242,
                                                77
                                            ],
                                            "type": "image",
                                            "image_path": "7fbd6a8517226d5421d342f8187a53750ea437d44b28b76d959479dc5a6d76ee.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 8,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        242,
                        70,
                        259,
                        77
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                242,
                                70,
                                259,
                                77
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        242,
                                        70,
                                        259,
                                        77
                                    ],
                                    "type": "text",
                                    "content": "Score"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "type": "image",
                    "bbox": [
                        56,
                        95,
                        69,
                        110
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                56,
                                95,
                                69,
                                110
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        56,
                                        95,
                                        69,
                                        110
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                56,
                                                95,
                                                69,
                                                110
                                            ],
                                            "type": "image",
                                            "image_path": "afaee00d3f87acd697ade6266810182e993490c4da222763e081377209afd56e.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 10,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        69,
                        99,
                        104,
                        106
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                69,
                                99,
                                104,
                                106
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        69,
                                        99,
                                        104,
                                        106
                                    ],
                                    "type": "text",
                                    "content": "Thought state"
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "type": "image",
                    "bbox": [
                        119,
                        95,
                        132,
                        110
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                119,
                                95,
                                132,
                                110
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        119,
                                        95,
                                        132,
                                        110
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                119,
                                                95,
                                                132,
                                                110
                                            ],
                                            "type": "image",
                                            "image_path": "fa391b9a1f384972ccec5440e1f9e263a9b07f78f0c6924db381eaa83c1593b8.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 12,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        133,
                        96,
                        187,
                        108
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                133,
                                96,
                                187,
                                108
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        133,
                                        96,
                                        187,
                                        108
                                    ],
                                    "type": "text",
                                    "content": "Thought state "
                                },
                                {
                                    "bbox": [
                                        133,
                                        96,
                                        187,
                                        108
                                    ],
                                    "type": "inline_equation",
                                    "content": "^+"
                                },
                                {
                                    "bbox": [
                                        133,
                                        96,
                                        187,
                                        108
                                    ],
                                    "type": "text",
                                    "content": " its associated operations"
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "type": "image",
                    "bbox": [
                        204,
                        87,
                        217,
                        110
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                204,
                                87,
                                217,
                                110
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        204,
                                        87,
                                        217,
                                        110
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                204,
                                                87,
                                                217,
                                                110
                                            ],
                                            "type": "image",
                                            "image_path": "90066df8b952baa07ea2bfeea88886414f93d5766eb69f3e1d12730cbcbabfbb.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 14,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 14
                },
                {
                    "bbox": [
                        219,
                        96,
                        260,
                        109
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                219,
                                96,
                                260,
                                109
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        219,
                                        96,
                                        260,
                                        109
                                    ],
                                    "type": "text",
                                    "content": "Thought state thought's score"
                                }
                            ]
                        }
                    ],
                    "index": 15
                },
                {
                    "bbox": [
                        55,
                        118,
                        123,
                        125
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                55,
                                118,
                                123,
                                125
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        55,
                                        118,
                                        123,
                                        125
                                    ],
                                    "type": "text",
                                    "content": "API for Controller"
                                }
                            ]
                        }
                    ],
                    "index": 16
                },
                {
                    "bbox": [
                        55,
                        132,
                        245,
                        160
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                55,
                                132,
                                245,
                                160
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        55,
                                        132,
                                        245,
                                        160
                                    ],
                                    "type": "text",
                                    "content": "- //LLM params: model used, temperature, max tokens, api key, org, ...\n- //LLM cost features: prompt token cost, response token cost, ...\n- //Instances of Prompter + Parser + Graph of Operations,\n- //Any additional input parameters (e.g., numbers to be sorted)."
                                }
                            ]
                        }
                    ],
                    "index": 17
                },
                {
                    "bbox": [
                        55,
                        167,
                        244,
                        177
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                55,
                                167,
                                244,
                                177
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        55,
                                        167,
                                        244,
                                        177
                                    ],
                                    "type": "text",
                                    "content": "Available operations when building GoO (extensible)"
                                }
                            ]
                        }
                    ],
                    "index": 18
                },
                {
                    "bbox": [
                        55,
                        182,
                        248,
                        221
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                55,
                                182,
                                248,
                                221
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        55,
                                        182,
                                        248,
                                        221
                                    ],
                                    "type": "text",
                                    "content": "- Generate, Aggregate, Score, ... //see Prompt API\n- KeepBest(N) //preserves "
                                },
                                {
                                    "bbox": [
                                        55,
                                        182,
                                        248,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "N"
                                },
                                {
                                    "bbox": [
                                        55,
                                        182,
                                        248,
                                        221
                                    ],
                                    "type": "text",
                                    "content": " best scoring thoughts\n- Repeat(k) //Repeat a given operation "
                                },
                                {
                                    "bbox": [
                                        55,
                                        182,
                                        248,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        55,
                                        182,
                                        248,
                                        221
                                    ],
                                    "type": "text",
                                    "content": " times, generating "
                                },
                                {
                                    "bbox": [
                                        55,
                                        182,
                                        248,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        55,
                                        182,
                                        248,
                                        221
                                    ],
                                    "type": "text",
                                    "content": " thoughts.\n//For example, this enables \"Aggregate\" to generate multiple outcomes //of the combination operation. Each such thought is maintained //within the Graph Reasoning State and scored individually."
                                }
                            ]
                        }
                    ],
                    "index": 19
                },
                {
                    "bbox": [
                        56,
                        232,
                        165,
                        241
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                56,
                                232,
                                165,
                                241
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        56,
                                        232,
                                        165,
                                        241
                                    ],
                                    "type": "text",
                                    "content": "API for Prompter (extensible)"
                                }
                            ]
                        }
                    ],
                    "index": 20
                },
                {
                    "bbox": [
                        57,
                        246,
                        257,
                        281
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                57,
                                246,
                                257,
                                281
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "text",
                                    "content": "- Generate(t, k) //generate a prompt for "
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "text",
                                    "content": " new thoughts, using thought "
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "inline_equation",
                                    "content": "t"
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "text",
                                    "content": "\n- ValidateAndImprove(t) //generate a prompt to enhance thought "
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "inline_equation",
                                    "content": "t"
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "text",
                                    "content": "\n- Aggregate(t1, ..., tk) //generate a prompt to combine thoughts "
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "inline_equation",
                                    "content": "t1, \\ldots"
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "text",
                                    "content": "\n- Score(t) //score thought "
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "inline_equation",
                                    "content": "t"
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "text",
                                    "content": "\n- Validate(t) //generate a prompt to validate the correctness of thought "
                                },
                                {
                                    "bbox": [
                                        57,
                                        246,
                                        257,
                                        281
                                    ],
                                    "type": "inline_equation",
                                    "content": "t"
                                }
                            ]
                        }
                    ],
                    "index": 21
                },
                {
                    "bbox": [
                        57,
                        290,
                        154,
                        299
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                57,
                                290,
                                154,
                                299
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        57,
                                        290,
                                        154,
                                        299
                                    ],
                                    "type": "text",
                                    "content": "API for Parser (extensible)"
                                }
                            ]
                        }
                    ],
                    "index": 22
                },
                {
                    "bbox": [
                        56,
                        304,
                        246,
                        334
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                56,
                                304,
                                246,
                                334
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        56,
                                        304,
                                        246,
                                        334
                                    ],
                                    "type": "text",
                                    "content": "ParseGenerate, ParseImprove, ParseScore, ParseAggregate, ParseValidate, ... //Each of the above routines is responsible for parsing an LLM's reply //to a corresponding Prompt routine (e.g., ParseScore parses Score)."
                                }
                            ]
                        }
                    ],
                    "index": 23
                },
                {
                    "bbox": [
                        276,
                        54,
                        351,
                        62
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                276,
                                54,
                                351,
                                62
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        276,
                                        54,
                                        351,
                                        62
                                    ],
                                    "type": "text",
                                    "content": "Architecture overview"
                                }
                            ]
                        }
                    ],
                    "index": 24
                },
                {
                    "type": "image",
                    "bbox": [
                        276,
                        69,
                        427,
                        250
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                276,
                                69,
                                427,
                                250
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        276,
                                        69,
                                        427,
                                        250
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                276,
                                                69,
                                                427,
                                                250
                                            ],
                                            "type": "image",
                                            "image_path": "c269d6f8e8b141c1f0d9e194d8f6ea4c8138a3329adc019d4635394f3cb734ca.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 25,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 25
                },
                {
                    "type": "image",
                    "bbox": [
                        429,
                        70,
                        547,
                        246
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                429,
                                70,
                                547,
                                246
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        429,
                                        70,
                                        547,
                                        246
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                429,
                                                70,
                                                547,
                                                246
                                            ],
                                            "type": "image",
                                            "image_path": "d1f2375c0d03fed353fced118919e986f486fd2eeb8995a9236bf5ed14ba1280.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 26,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 26
                },
                {
                    "bbox": [
                        278,
                        262,
                        477,
                        273
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                278,
                                262,
                                477,
                                273
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        278,
                                        262,
                                        477,
                                        273
                                    ],
                                    "type": "text",
                                    "content": "Specifying the Structure of Graph of Operations (GoO)"
                                }
                            ]
                        }
                    ],
                    "index": 27
                },
                {
                    "bbox": [
                        279,
                        276,
                        414,
                        288
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                279,
                                276,
                                414,
                                288
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        279,
                                        276,
                                        414,
                                        288
                                    ],
                                    "type": "text",
                                    "content": "Graph of Operations enables seamless specification of not only GoT, but also existing schemes such as CoT, CoT-SC, ToT"
                                }
                            ]
                        }
                    ],
                    "index": 28
                },
                {
                    "type": "image",
                    "bbox": [
                        272,
                        291,
                        349,
                        337
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                272,
                                291,
                                349,
                                337
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        272,
                                        291,
                                        349,
                                        337
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                272,
                                                291,
                                                349,
                                                337
                                            ],
                                            "type": "image",
                                            "image_path": "832e4cb069d9cd8ff8d08983a14b30467e81ae711565246d43ef9bc28d0e5645.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 29,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 29
                },
                {
                    "type": "image",
                    "bbox": [
                        369,
                        290,
                        455,
                        335
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                369,
                                290,
                                455,
                                335
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        369,
                                        290,
                                        455,
                                        335
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                369,
                                                290,
                                                455,
                                                335
                                            ],
                                            "type": "image",
                                            "image_path": "72c134bafb211c3c75ab69b25df74974aaae9e9389d4e21eca913f325484b377.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 30,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 30
                },
                {
                    "type": "image",
                    "bbox": [
                        474,
                        289,
                        548,
                        338
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                474,
                                289,
                                548,
                                338
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        474,
                                        289,
                                        548,
                                        338
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                474,
                                                289,
                                                548,
                                                338
                                            ],
                                            "type": "image",
                                            "image_path": "6640820dbeb79a7bf0e16b2f6e685e60e2235273c8c08cc439659919ae6d2f73.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 31,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 31
                },
                {
                    "bbox": [
                        57,
                        347,
                        302,
                        356
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                57,
                                347,
                                302,
                                356
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        57,
                                        347,
                                        302,
                                        356
                                    ],
                                    "type": "text",
                                    "content": "Example prompts and the Graph Reasoning State for the sorting use case"
                                }
                            ]
                        }
                    ],
                    "index": 32
                },
                {
                    "bbox": [
                        375,
                        348,
                        552,
                        355
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                375,
                                348,
                                552,
                                355
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        375,
                                        348,
                                        552,
                                        355
                                    ],
                                    "type": "text",
                                    "content": "(some examples within each prompt are omitted due to space constraints)"
                                }
                            ]
                        }
                    ],
                    "index": 33
                },
                {
                    "bbox": [
                        56,
                        361,
                        124,
                        370
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                56,
                                361,
                                124,
                                370
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        56,
                                        361,
                                        124,
                                        370
                                    ],
                                    "type": "text",
                                    "content": "Initial/system prompt"
                                }
                            ]
                        }
                    ],
                    "index": 34
                },
                {
                    "bbox": [
                        176,
                        363,
                        200,
                        370
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                176,
                                363,
                                200,
                                370
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        176,
                                        363,
                                        200,
                                        370
                                    ],
                                    "type": "text",
                                    "content": "(optional)"
                                }
                            ]
                        }
                    ],
                    "index": 35
                },
                {
                    "type": "image",
                    "bbox": [
                        203,
                        361,
                        214,
                        370
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                203,
                                361,
                                214,
                                370
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        203,
                                        361,
                                        214,
                                        370
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                203,
                                                361,
                                                214,
                                                370
                                            ],
                                            "type": "image",
                                            "image_path": "41735a268e2358ac482443867938b60bf6782d79fbbc417919416af3f4405354.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 36,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 36
                },
                {
                    "bbox": [
                        63,
                        374,
                        211,
                        380
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                63,
                                374,
                                211,
                                380
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        63,
                                        374,
                                        211,
                                        380
                                    ],
                                    "type": "text",
                                    "content": "Hello. I want to sort the following input sequence of numbers: {input}"
                                }
                            ]
                        }
                    ],
                    "index": 37
                },
                {
                    "bbox": [
                        231,
                        372,
                        364,
                        379
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                231,
                                372,
                                364,
                                379
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        231,
                                        372,
                                        364,
                                        379
                                    ],
                                    "type": "text",
                                    "content": "A prompt used by Generate(t, k=1) + Repeat(k=4)"
                                }
                            ]
                        }
                    ],
                    "index": 38
                },
                {
                    "bbox": [
                        222,
                        380,
                        376,
                        393
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                222,
                                380,
                                376,
                                393
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        222,
                                        380,
                                        376,
                                        393
                                    ],
                                    "type": "text",
                                    "content": "<Instruction> Sort the following list of numbers in ascending order. Output only the sorted list of numbers, no additional text. </Instruction>"
                                }
                            ]
                        }
                    ],
                    "index": 39
                },
                {
                    "bbox": [
                        222,
                        397,
                        376,
                        499
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                222,
                                397,
                                376,
                                499
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "text",
                                    "content": "<Example> Input: [3, 7, 0, 2, 8, 1, 2, 2, 2, 4, 7, 8, 5, 5, 3, 9, 4, 3, 5, 6, 4, 4, 5, 2, 0, 9, 3, 3, 9, 2, 1] Output: [0, 0, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9] </Example> The input thought t   \nInput: {input}   \nThis prompt is used by an operation Generate where the branching factor is "
                                },
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathrm{k = 1}"
                                },
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "text",
                                    "content": " , which means, only one thought is generated. However, as we chain it with the operation Repeat with "
                                },
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathrm{k} = 4"
                                },
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "text",
                                    "content": " , the underlying GoT framework ensures that Generate executes 4 times and results in 4 separate thoughts. Note that, from the graph theory perspective, the GRS is identical to that in the operation Generate(t, k=4) The difference between these two is that Generate(t, k=4) gives the user more freedom to choose the thought constructed, while Generate(t, k=1) "
                                },
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "inline_equation",
                                    "content": "^+"
                                },
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "text",
                                    "content": " Repeat "
                                },
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "inline_equation",
                                    "content": "(\\mathrm{k} = 4)"
                                },
                                {
                                    "bbox": [
                                        222,
                                        397,
                                        376,
                                        499
                                    ],
                                    "type": "text",
                                    "content": " is less flexible but more easy to use. Moreover, with Repeat one has 4 context-isolated responses from the LLM for identical prompts, whereas without Repeat there is only one context where all 4 thoughts are generated and must be explicitly handled in a single prompt/session."
                                }
                            ]
                        }
                    ],
                    "index": 40
                },
                {
                    "bbox": [
                        231,
                        502,
                        274,
                        509
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                231,
                                502,
                                274,
                                509
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        231,
                                        502,
                                        274,
                                        509
                                    ],
                                    "type": "text",
                                    "content": "A prompt used by"
                                }
                            ]
                        }
                    ],
                    "index": 41
                },
                {
                    "bbox": [
                        222,
                        509,
                        376,
                        517
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                222,
                                509,
                                376,
                                517
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        222,
                                        509,
                                        376,
                                        517
                                    ],
                                    "type": "text",
                                    "content": "Aggregate(t1,t2) "
                                },
                                {
                                    "bbox": [
                                        222,
                                        509,
                                        376,
                                        517
                                    ],
                                    "type": "inline_equation",
                                    "content": "^+"
                                },
                                {
                                    "bbox": [
                                        222,
                                        509,
                                        376,
                                        517
                                    ],
                                    "type": "text",
                                    "content": " Repeat "
                                },
                                {
                                    "bbox": [
                                        222,
                                        509,
                                        376,
                                        517
                                    ],
                                    "type": "inline_equation",
                                    "content": "(k = 3) +"
                                },
                                {
                                    "bbox": [
                                        222,
                                        509,
                                        376,
                                        517
                                    ],
                                    "type": "text",
                                    "content": " KeepBest "
                                },
                                {
                                    "bbox": [
                                        222,
                                        509,
                                        376,
                                        517
                                    ],
                                    "type": "inline_equation",
                                    "content": "(N = 1)"
                                }
                            ]
                        }
                    ],
                    "index": 42
                },
                {
                    "bbox": [
                        221,
                        518,
                        376,
                        540
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                221,
                                518,
                                376,
                                540
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        221,
                                        518,
                                        376,
                                        540
                                    ],
                                    "type": "text",
                                    "content": "<Instruction> Merge the following 2 sorted lists of length [length1] each into one sorted list of length [length2] using a merge sort style approach. Only output the final merged list without any additional text or thoughts! </Instruction>"
                                }
                            ]
                        }
                    ],
                    "index": 43
                },
                {
                    "bbox": [
                        222,
                        544,
                        376,
                        646
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                222,
                                544,
                                376,
                                646
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        222,
                                        544,
                                        376,
                                        646
                                    ],
                                    "type": "text",
                                    "content": "<Approach> To merge the two lists in a merge-sort style approach, foloow these steps: 1. Compare the first element of both lists. 2. Append the smaller element to the merged list and move to the next element in the list from which the smaller element came. 3. Repeat steps 1 and 2 until one of the lists is empty. 4. Append the remaining elements of the non-empty list to the merged list. </Approach> Merge the following two lists into one sorted list: 1: {input1} 2: {input2} The input thoughts t1, t2 3: {input3} 4: {input4} Merged list: This prompt is used by an operation Aggregate where the aggregation factor is "
                                },
                                {
                                    "bbox": [
                                        222,
                                        544,
                                        376,
                                        646
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathrm{k} = 2"
                                },
                                {
                                    "bbox": [
                                        222,
                                        544,
                                        376,
                                        646
                                    ],
                                    "type": "text",
                                    "content": " (2 input thoughts, t1 and t2, are aggregated). This is repeated by GoT 3 time to maximize quality. Finally, the best result is selected. Note that, in this example, the prompt explicitly requests the merge operation only. All the remaining operations are specified in GoO and are handled by the underlying GoT framework."
                                }
                            ]
                        }
                    ],
                    "index": 44
                },
                {
                    "bbox": [
                        387,
                        368,
                        515,
                        376
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                387,
                                368,
                                515,
                                376
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        387,
                                        368,
                                        515,
                                        376
                                    ],
                                    "type": "text",
                                    "content": "A prompt used by Improve(t) + Repeat (k=4)"
                                }
                            ]
                        }
                    ],
                    "index": 45
                },
                {
                    "bbox": [
                        389,
                        378,
                        553,
                        405
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                389,
                                378,
                                553,
                                405
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        389,
                                        378,
                                        553,
                                        405
                                    ],
                                    "type": "text",
                                    "content": "<Instruction> The following two lists represent an unsorted list of numbers and a sorted variant of that list. The sorted variant is not correct. Fix the sorted variant so that it is correct. Make sure that the output list is sorted in ascending order, has the same number of elements as the input list ([length]), and contains the same elements as the input list. </Instruction>"
                                }
                            ]
                        }
                    ],
                    "index": 46
                },
                {
                    "bbox": [
                        390,
                        410,
                        553,
                        468
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                390,
                                410,
                                553,
                                468
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        390,
                                        410,
                                        553,
                                        468
                                    ],
                                    "type": "text",
                                    "content": "<Approach>   \nTo fix the incorrectly sorted list follow these steps: 1. For each number from 0 to 9, compare the frequency of that number in the incorrectly sorted list to the frequency of that number in the input list. 2. Iterate through the incorrectly sorted list and add or remove numbers as needed to make the frequency of each number in the incorrectly sorted list match the frequency of that number in the input list.   \n</Approach>   \n<Examples>   \nInput: [3, 7, 0, 2, 8, 1, 2, 2, 2, 4, 7, 8, 5, 5, 3, 9]"
                                }
                            ]
                        }
                    ],
                    "index": 47
                },
                {
                    "bbox": [
                        390,
                        468,
                        553,
                        490
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                390,
                                468,
                                553,
                                490
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        390,
                                        468,
                                        553,
                                        490
                                    ],
                                    "type": "text",
                                    "content": "Incorrectly Sorted: [0, 0, 0, 0, 0, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 7, 7, 8, 8, 9, 9, 9, 9] Reason: The incorrectly sorted list contains four extra 0s, two extra 4s and three extra 9s and is missing two 2s. Output: [0, 1, 2, 2, 2, 2, 3, 4, 3, 4, 5, 5, 7, 7, 8, 8, 9]"
                                }
                            ]
                        }
                    ],
                    "index": 48
                },
                {
                    "bbox": [
                        390,
                        492,
                        548,
                        558
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                390,
                                492,
                                548,
                                558
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        390,
                                        492,
                                        548,
                                        558
                                    ],
                                    "type": "text",
                                    "content": "Input: [6,4,5,7,5,6,9,7,6,9,4,6,9,8,1,9,2,4,9,0,7,6,5,6,6,2,8,3,9,5,6,1]  \nIncorrectly Sorted: [0,1,1,2,2,3,4,4,4,4,4,5,5,5,5,6,6,6,6,6,6,7,7,8,8,9,9,9,9,9,9,9]  \nReason: The incorrectly sorted list contains two extra 4s and is missing two 6s and one 9.  \nOutput: [0,1,1,2,2,3,4,4,5,5,5,6,6,6,6,6,6,6,7,7,7,8,8,9,9,9,9,9]  \n</Examples>  \nInput: {input}  \nIncorrectly Sorted: {incorrectly Sorted}"
                                }
                            ]
                        }
                    ],
                    "index": 49
                },
                {
                    "bbox": [
                        392,
                        567,
                        476,
                        612
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                392,
                                567,
                                476,
                                612
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        392,
                                        567,
                                        476,
                                        612
                                    ],
                                    "type": "text",
                                    "content": "This prompt is used by an operation. Improve(), which enhances a given though using information provided in another thought process. The operation is implemented by the user with GoT, it can either generate a number of new thoughts in GRS (the upper graph on the right), or it can generate a new thought in GRS (the lower graph on the right), chaining "
                                },
                                {
                                    "bbox": [
                                        392,
                                        567,
                                        476,
                                        612
                                    ],
                                    "type": "inline_equation",
                                    "content": "k = 4"
                                },
                                {
                                    "bbox": [
                                        392,
                                        567,
                                        476,
                                        612
                                    ],
                                    "type": "text",
                                    "content": " refinement iterative"
                                }
                            ]
                        }
                    ],
                    "index": 50
                },
                {
                    "type": "image",
                    "bbox": [
                        483,
                        540,
                        553,
                        573
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                483,
                                540,
                                553,
                                573
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        483,
                                        540,
                                        553,
                                        573
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                483,
                                                540,
                                                553,
                                                573
                                            ],
                                            "type": "image",
                                            "image_path": "b006d046f1262312768e907479c874ff0190130985d4ef1d2d68392f8ea609c4.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 51,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 51
                },
                {
                    "type": "image",
                    "bbox": [
                        511,
                        580,
                        541,
                        597
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                511,
                                580,
                                541,
                                597
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        511,
                                        580,
                                        541,
                                        597
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                511,
                                                580,
                                                541,
                                                597
                                            ],
                                            "type": "image",
                                            "image_path": "0cf7bb4b4a37485048e2e02abd1a477be3d3ab8bde44e645ec70085e87f8265d.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 52,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 52
                },
                {
                    "type": "image",
                    "bbox": [
                        53,
                        358,
                        211,
                        476
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                53,
                                358,
                                211,
                                476
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        358,
                                        211,
                                        476
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                358,
                                                211,
                                                476
                                            ],
                                            "type": "image",
                                            "image_path": "d9e6d005412840d8026d6cdbbd82a1e83c265683279f1b1f0168885c982d39a5.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 53,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 53
                },
                {
                    "bbox": [
                        59,
                        477,
                        206,
                        535
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                59,
                                477,
                                206,
                                535
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        59,
                                        477,
                                        206,
                                        535
                                    ],
                                    "type": "text",
                                    "content": "<Instruction>Split the following list of 64 numbers into 4 lists of 16 numbers each, the first list should contain the first 16 numbers, the second list the second 16 numbers, the third list the third 16 numbers and the fourth list the fourth 16 numbers. Only output the final 4 lists in the following format without any additional text or thoughts!  \n{  \n    \"List 1\": [3, 4, 3, 5, 7, 8, 1, ...,]  \n    \"List 2\": [2, 9, 2, 4, 7, 1, 5, ...,]  \n    \"List 3\": [6, 9, 8, 1, 9, 2, 4, ...,]  \n    \"List 4\": [9, 0, 7, 6, 5, 6, 6, ...]  \n}></Instruction>"
                                }
                            ]
                        }
                    ],
                    "index": 54
                },
                {
                    "bbox": [
                        60,
                        540,
                        207,
                        635
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                60,
                                540,
                                207,
                                635
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        60,
                                        540,
                                        207,
                                        635
                                    ],
                                    "type": "text",
                                    "content": "<Example>   \nInput: [3,1,9,3,7,5,5,4,8,1,5,3,3,2,3,0,9,7,2,2,4,4,8,5,0, 8,7,3,8,7,0,9,5,1,6,7,6,8,9,0,3,0,6,3,4,8,0,6,9,8,4,1, 2,9,0,4,8,8,9,8,9,8,5,9]   \nOutput:   \n{ \"List 1\":[3,1,9,3,7,5,5,4,8,1,5,3,3,2,3,0], \"List 2\":[9,7,2,2,4,4,8,5,0,8,7,3,3,8,7,0], \"List 3\":[9,5,1,6,7,6,8,9,0,3,0,6,3,4,8,0], \"List 4\":[6,9,8,4,1,2,9,0,4,8,8,9,9,8,5,9]   \n}   \n</Example> The input thought t   \nInput: {input}   \nThis prompt is used by an operation Generate where the branching factor "
                                },
                                {
                                    "bbox": [
                                        60,
                                        540,
                                        207,
                                        635
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathrm{k} = 4"
                                },
                                {
                                    "bbox": [
                                        60,
                                        540,
                                        207,
                                        635
                                    ],
                                    "type": "text",
                                    "content": " . Four new thoughts are constructed based on the LLM reply to this prompt."
                                }
                            ]
                        }
                    ],
                    "index": 55
                },
                {
                    "type": "image",
                    "bbox": [
                        214,
                        361,
                        378,
                        647
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                214,
                                361,
                                378,
                                647
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        214,
                                        361,
                                        378,
                                        647
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                214,
                                                361,
                                                378,
                                                647
                                            ],
                                            "type": "image",
                                            "image_path": "fbf750350bb2714d65e630b25dff2cab4f8165bcf492ba42718364d922b9acf1.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 56,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                50,
                                674,
                                560,
                                718
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        50,
                                        674,
                                        560,
                                        718
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                50,
                                                674,
                                                560,
                                                718
                                            ],
                                            "type": "text",
                                            "content": "Figure 3: The system architecture of GoT, and the APIs of respective modules. The user can straightforwardly extend the design towards new prompting schemes, experiment with novel thought transformations, and plug in different LLMs. The blue part of the figure contains the architecture overview, the green part lists the API, and the red part contains example prompts together with a GRS and operations involved."
                                        }
                                    ]
                                }
                            ],
                            "index": 57,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 56
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 4
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        51,
                        54,
                        114,
                        66
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                54,
                                114,
                                66
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        54,
                                        114,
                                        66
                                    ],
                                    "type": "text",
                                    "content": "5.1 Sorting"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        50,
                        68,
                        292,
                        145
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                68,
                                292,
                                145
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        68,
                                        292,
                                        145
                                    ],
                                    "type": "text",
                                    "content": "Due to space constraints, we detail one use case (sorting). We focus on its decomposition and Graph of Operations, which are central for implementing and executing any workload within GoT. We consider sorting numbers 0-9 with duplicates. The considered LLMs are unable to sort a sequence of such numbers correctly beyond a certain length consistently because duplicate counts do not match."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        50,
                        145,
                        292,
                        211
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                145,
                                292,
                                211
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        145,
                                        292,
                                        211
                                    ],
                                    "type": "text",
                                    "content": "In GoT, we employ merge-based sorting: First, one decomposes the input sequence of numbers into subarrays. Then, one sorts these subarrays individually, and then respectively merges them into a final solution. Figure 4 illustrates this use case together with its graph decomposition. Here, an LLM thought is a sequence of sorted numbers."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        51,
                        212,
                        293,
                        255
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                212,
                                293,
                                255
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        212,
                                        293,
                                        255
                                    ],
                                    "type": "text",
                                    "content": "To score an outcome, denote an input sequence with "
                                },
                                {
                                    "bbox": [
                                        51,
                                        212,
                                        293,
                                        255
                                    ],
                                    "type": "inline_equation",
                                    "content": "[a_1, a_2, \\dots, a_n]"
                                },
                                {
                                    "bbox": [
                                        51,
                                        212,
                                        293,
                                        255
                                    ],
                                    "type": "text",
                                    "content": " and an output one with "
                                },
                                {
                                    "bbox": [
                                        51,
                                        212,
                                        293,
                                        255
                                    ],
                                    "type": "inline_equation",
                                    "content": "[b_1, b_2, \\dots, b_m]"
                                },
                                {
                                    "bbox": [
                                        51,
                                        212,
                                        293,
                                        255
                                    ],
                                    "type": "text",
                                    "content": ". We use the following score that determines \"the scope\" of errors:"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        126,
                        266,
                        217,
                        277
                    ],
                    "type": "interline_equation",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                126,
                                266,
                                217,
                                277
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        126,
                                        266,
                                        217,
                                        277
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\text {e r r o r - s c o p e} = X + Y",
                                    "image_path": "3ffed8461582ce5a9e3d25ec5d72c83142ea601c985c79be4aae250ee245b3b2.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        51,
                        281,
                        219,
                        293
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                281,
                                219,
                                293
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        281,
                                        219,
                                        293
                                    ],
                                    "type": "text",
                                    "content": "where "
                                },
                                {
                                    "bbox": [
                                        51,
                                        281,
                                        219,
                                        293
                                    ],
                                    "type": "inline_equation",
                                    "content": "p\\in \\{1,\\dots,m\\}"
                                },
                                {
                                    "bbox": [
                                        51,
                                        281,
                                        219,
                                        293
                                    ],
                                    "type": "inline_equation",
                                    "content": "q\\in \\{1,\\dots,n\\}"
                                },
                                {
                                    "bbox": [
                                        51,
                                        281,
                                        219,
                                        293
                                    ],
                                    "type": "text",
                                    "content": " , and"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        80,
                        300,
                        223,
                        332
                    ],
                    "type": "interline_equation",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                80,
                                300,
                                223,
                                332
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        80,
                                        300,
                                        223,
                                        332
                                    ],
                                    "type": "interline_equation",
                                    "content": "X = \\sum_ {i = 1} ^ {m - 1} \\operatorname {s g n} \\left(\\max  \\left(b _ {i} - b _ {i + 1}, 0\\right)\\right),",
                                    "image_path": "04ffdcdae83591729c801c9c9f02566aa3aca48a72fb6cedfd887f35b97487bb.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        82,
                        335,
                        263,
                        366
                    ],
                    "type": "interline_equation",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                82,
                                335,
                                263,
                                366
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        82,
                                        335,
                                        263,
                                        366
                                    ],
                                    "type": "interline_equation",
                                    "content": "Y = \\sum_ {i = 0} ^ {9} | \\left| \\{b _ {p}: b _ {p} = i \\} \\right| - \\left| \\{a _ {q}: a _ {q} = i \\} \\right| |",
                                    "image_path": "9ff90834375d0b7d3a1cb4569ff36534aa10bcd0ba270acae1ec733bec6bb2bd.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        50,
                        372,
                        293,
                        593
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                372,
                                293,
                                593
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": "Here, "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "X"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": " indicates how many consecutive pairs of numbers are incorrectly sorted. If two numbers "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "i"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "i + 1"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": " are incorrectly sorted (i.e., "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "b_{i} > b_{i + 1}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": "), then the expression within the summation returns 1, increasing the error score by one. For two numbers correctly sorted, this expression amounts to 0. Then, "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "Y"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": " determines how well a given output sequence preserves the frequency of output numbers. Specifically, for each considered number "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": " ("
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "x \\in \\{0, \\dots, 9\\}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": "), we obtain the difference between the count of input elements being equal to "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": ", vs. the count of output elements equal to "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": ". For an output sequence perfectly preserving the frequency of "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": ", this would amount to 0. Any single \"deviation\" in this count, increases the \"error scope\" by 1). We then sum this over all considered values of "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": ". When plotting this score, to improve the clarity of plots, we additionally apply clipping min(error-scope, "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "n"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": "), as some baselines (IO, CoT) result in large numbers of outliers with high error scope. Finally, to use a \"positive score\" describing \"the scope of correctly sorted\" elements, one can use the value "
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\max(n - \\text{error-scope}, 0)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        372,
                                        293,
                                        593
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        51,
                        601,
                        148,
                        613
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                601,
                                148,
                                613
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        601,
                                        148,
                                        613
                                    ],
                                    "type": "text",
                                    "content": "5.2 Set Operations"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        50,
                        616,
                        293,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                616,
                                293,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        293,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "Moreover, we also consider set operations, focusing on set intersection. They have numerous applications (particularly set intersection) in problems ranging from genome or document comparisons to pattern matching [20, 57, 38, 1, 27, 49, 10, 9]. Set intersection of two sets is implemented similarly as the sorting. The second input set is split into subsets and the intersection of those subsets with the first input set is determined with the help of the LLM. Afterwards the resulting"
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "type": "image",
                    "bbox": [
                        320,
                        59,
                        557,
                        247
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                320,
                                59,
                                557,
                                247
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        320,
                                        59,
                                        557,
                                        247
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                320,
                                                59,
                                                557,
                                                247
                                            ],
                                            "type": "image",
                                            "image_path": "c07483a5aa5119c1d616670914d57592fb0357ee9bab2b8fb468e2dba842d5c6.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 11,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 11
                },
                {
                    "type": "image",
                    "bbox": [
                        318,
                        261,
                        558,
                        651
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                318,
                                261,
                                558,
                                651
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        261,
                                        558,
                                        651
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                261,
                                                558,
                                                651
                                            ],
                                            "type": "image",
                                            "image_path": "1ffc3dbc32e8e98bbaada629b35a654c8375e20e43a8891e8702c7c4cdfd0def.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 13,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                318,
                                251,
                                484,
                                261
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        251,
                                        484,
                                        261
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                251,
                                                484,
                                                261
                                            ],
                                            "type": "text",
                                            "content": "Details of the highlighted part of GoO from above"
                                        }
                                    ]
                                }
                            ],
                            "index": 12,
                            "angle": 0,
                            "type": "image_caption"
                        },
                        {
                            "bbox": [
                                315,
                                660,
                                559,
                                694
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        315,
                                        660,
                                        559,
                                        694
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                315,
                                                660,
                                                559,
                                                694
                                            ],
                                            "type": "text",
                                            "content": "Figure 4: An example graph decomposition of the sorting use case in GoT. All the used operations (Generate, Aggregate, Score, KeepBest) are described in Figure 3."
                                        }
                                    ]
                                }
                            ],
                            "index": 14,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 13
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 5
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        50,
                        54,
                        294,
                        99
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                54,
                                294,
                                99
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        99
                                    ],
                                    "type": "text",
                                    "content": "intersection sets are aggregated for the final results. For the evaluation we use different set sizes of 32, 64 and 128 elements and we vary the number of elements found in both sets to be between "
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        99
                                    ],
                                    "type": "inline_equation",
                                    "content": "25\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        99
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        99
                                    ],
                                    "type": "inline_equation",
                                    "content": "75\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        99
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        50,
                        99,
                        294,
                        156
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                99,
                                294,
                                156
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        99,
                                        294,
                                        156
                                    ],
                                    "type": "text",
                                    "content": "Our score indicates the total number of missing or incorrectly included elements in the final intersection. Specifically, denote two input sets with "
                                },
                                {
                                    "bbox": [
                                        50,
                                        99,
                                        294,
                                        156
                                    ],
                                    "type": "inline_equation",
                                    "content": "A = [a_{1}, a_{2}, \\ldots, a_{n}]"
                                },
                                {
                                    "bbox": [
                                        50,
                                        99,
                                        294,
                                        156
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        99,
                                        294,
                                        156
                                    ],
                                    "type": "inline_equation",
                                    "content": "B = [b_{1}, b_{2}, \\ldots, b_{n}]"
                                },
                                {
                                    "bbox": [
                                        50,
                                        99,
                                        294,
                                        156
                                    ],
                                    "type": "text",
                                    "content": ", and the output set with "
                                },
                                {
                                    "bbox": [
                                        50,
                                        99,
                                        294,
                                        156
                                    ],
                                    "type": "inline_equation",
                                    "content": "C = [c_{1}, c_{2}, \\ldots, c_{m}]"
                                },
                                {
                                    "bbox": [
                                        50,
                                        99,
                                        294,
                                        156
                                    ],
                                    "type": "text",
                                    "content": ". Then,"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        109,
                        164,
                        235,
                        176
                    ],
                    "type": "interline_equation",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                109,
                                164,
                                235,
                                176
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        109,
                                        164,
                                        235,
                                        176
                                    ],
                                    "type": "interline_equation",
                                    "content": "\\text {e r r o r - s c o p e} = X _ {1} + X _ {2} + X _ {d}",
                                    "image_path": "5429f6d940e1e52a696742833705176df44265a1e4b5155d127ff8c42328df7b.jpg"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        50,
                        178,
                        294,
                        258
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                178,
                                294,
                                258
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "text",
                                    "content": "where "
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "inline_equation",
                                    "content": "X_{1} = |C \\setminus (A \\cap B)|"
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "text",
                                    "content": " are the number of elements in "
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "inline_equation",
                                    "content": "C"
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "text",
                                    "content": " that are not supposed to be there, "
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "inline_equation",
                                    "content": "X_{2} = |(A \\cap B) \\setminus C|"
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "text",
                                    "content": " are the number of elements missing from "
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "inline_equation",
                                    "content": "C"
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "text",
                                    "content": ", and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "inline_equation",
                                    "content": "X_{d}"
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "text",
                                    "content": " is the number of duplicates in "
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "inline_equation",
                                    "content": "C"
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "text",
                                    "content": " (because the LLM expresses the set as a list in natural language). Finally, to use a \"positive score\" describing \"the scope of correctly computed\" elements, one can use the value "
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\max(n - \\text{error-scope}, 0)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        178,
                                        294,
                                        258
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        51,
                        266,
                        168,
                        278
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                266,
                                168,
                                278
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        266,
                                        168,
                                        278
                                    ],
                                    "type": "text",
                                    "content": "5.3 Keyword Counting"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        50,
                        280,
                        293,
                        390
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                280,
                                293,
                                390
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        280,
                                        293,
                                        390
                                    ],
                                    "type": "text",
                                    "content": "Keyword counting finds the frequency of keywords in a given category (countries in our example implementation) within the input text. GoT splits the input text into multiple passages, counts the keywords in each passage and aggregates the sub-results. The number of passages is configurable and can also be left to the LLM, making it possible to treat each sentence as a separate passage. Here, to score a thought, we first ‚Äì for each keyword ‚Äì derive the absolute difference between the computed count and the correct one. We then sum all these differences to get the final score."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        51,
                        399,
                        170,
                        412
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                399,
                                170,
                                412
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        399,
                                        170,
                                        412
                                    ],
                                    "type": "text",
                                    "content": "5.4 Document Merging"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        50,
                        414,
                        294,
                        579
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                414,
                                294,
                                579
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        414,
                                        294,
                                        579
                                    ],
                                    "type": "text",
                                    "content": "Finally, we also provide document merging. Here, the goal is to generate a new Non-Disclosure Agreement (NDA) document based on several input ones that partially overlap in terms of their contents. The goal is to ensure minimal amount of duplication, while maximizing information retention. Document merging is broadly applicable in, e.g., legal procedures, where multiple sources of information have to be combined into a single document or article. To score a solution, we query the LLM for two values (3 times for each value, and take the average). The first value corresponds to the solution redundancy (10 indicates no redundancy, 0 implies at least half the information is redundant), the second value stands for information retention (10 indicates all information is retained, 0 says that none is retained). We compute the harmonic mean of these values."
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        84,
                        589,
                        261,
                        602
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                84,
                                589,
                                261,
                                602
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        84,
                                        589,
                                        261,
                                        602
                                    ],
                                    "type": "text",
                                    "content": "6 The Latency-Volume Tradeoff"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        50,
                        604,
                        294,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                604,
                                294,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "We now show that GoT improves upon previous prompting schemes in terms of the tradeoff between latency (number of hops in the graph of thoughts to reach a given final thought) and volume. We define volume - for a given thought "
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "t"
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " - as the number of preceding LLM thoughts that could have impacted "
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "t"
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ". Formally, the volume of "
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "t"
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " is the number of thoughts from which there exists a path to "
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "t"
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " in the graph of thoughts. We assume that outputting a single thought costs "
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "O(1)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " time and fix the total cost to "
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\Theta(n)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        604,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " for each prompting scheme."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        315,
                        54,
                        558,
                        110
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                54,
                                558,
                                110
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "text",
                                    "content": "The structure of the schemes is as follows. CoT-SC consists of "
                                },
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "text",
                                    "content": " independent chains originating from a single starting thought. ToT is a complete "
                                },
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "text",
                                    "content": "-ary tree. Finally, in GoT, a complete "
                                },
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "text",
                                    "content": "-ary tree is joined at its leaves with a \"mirrored\" "
                                },
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        54,
                                        558,
                                        110
                                    ],
                                    "type": "text",
                                    "content": "-ary tree of the same size but with its edges reversed."
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        315,
                        110,
                        559,
                        221
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                110,
                                559,
                                221
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "text",
                                    "content": "The analysis is detailed in Table 2. CoT offers a large volume of up to "
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "N"
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "text",
                                    "content": ", but at the cost of a high latency of "
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "N"
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "text",
                                    "content": ". CoTSC reduces the latency by a factor of "
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "text",
                                    "content": " (which corresponds to its branching factor), but it simultaneously decreases the volume by "
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "text",
                                    "content": " as well. ToT offers a latency of "
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\log_k N"
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "text",
                                    "content": " but also has low volume. GoT is the only scheme to come with both a low latency of "
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\log_k N"
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "text",
                                    "content": " and a high volume "
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "inline_equation",
                                    "content": "N"
                                },
                                {
                                    "bbox": [
                                        315,
                                        110,
                                        559,
                                        221
                                    ],
                                    "type": "text",
                                    "content": ". This is enabled by the fact that GoT harnesses aggregations of thoughts, making it possible to reach the final thought from any other intermediate thought in the graph decomposition."
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "type": "table",
                    "bbox": [
                        322,
                        232,
                        551,
                        299
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                322,
                                232,
                                551,
                                299
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        322,
                                        232,
                                        551,
                                        299
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                322,
                                                232,
                                                551,
                                                299
                                            ],
                                            "type": "table",
                                            "html": "<table><tr><td>Scheme</td><td>Latency</td><td>Volume</td></tr><tr><td>Chain-of-Thought (CoT)</td><td>N</td><td>N</td></tr><tr><td>Self-Consistency with CoT (CoT-SC)</td><td>N/k</td><td>N/k</td></tr><tr><td>Tree of Thoughts (ToT)</td><td>logkN</td><td>O(logkN)</td></tr><tr><td>Graph of Thoughts (GoT)</td><td>logkN</td><td>N</td></tr></table>",
                                            "image_path": "5e2bae484fd96a97f739d9085629b9609fa2c90bf0873dfbb0e59f4be7814b27.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 12,
                            "angle": 0,
                            "type": "table_body"
                        },
                        {
                            "bbox": [
                                316,
                                300,
                                558,
                                332
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        316,
                                        300,
                                        558,
                                        332
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                316,
                                                300,
                                                558,
                                                332
                                            ],
                                            "type": "text",
                                            "content": "Table 2: Comparison of prompting schemes, with respect to their fundamental tradeoff between latency and volume. GoT offers the best tradeoff."
                                        }
                                    ]
                                }
                            ],
                            "index": 13,
                            "angle": 0,
                            "type": "table_caption"
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        399,
                        359,
                        477,
                        371
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                399,
                                359,
                                477,
                                371
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        399,
                                        359,
                                        477,
                                        371
                                    ],
                                    "type": "text",
                                    "content": "7 Evaluation"
                                }
                            ]
                        }
                    ],
                    "index": 14
                },
                {
                    "bbox": [
                        315,
                        376,
                        559,
                        455
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                376,
                                559,
                                455
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        376,
                                        559,
                                        455
                                    ],
                                    "type": "text",
                                    "content": "We show the advantages of GoT over the state of the art. We focus on comparing GoT to ToT, as it was shown to consistently outperform other schemes. Still, for a broad comparison, we also experiment with IO, CoT, and CoT-SC. As our analysis results in a large evaluation space, we present representative results and omit data that does not bring relevant insights (e.g., CoT-SC)."
                                }
                            ]
                        }
                    ],
                    "index": 15
                },
                {
                    "bbox": [
                        316,
                        465,
                        459,
                        478
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                465,
                                459,
                                478
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        465,
                                        459,
                                        478
                                    ],
                                    "type": "text",
                                    "content": "7.1 Evaluation Methodology"
                                }
                            ]
                        }
                    ],
                    "index": 16
                },
                {
                    "bbox": [
                        315,
                        482,
                        558,
                        538
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                482,
                                558,
                                538
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        482,
                                        558,
                                        538
                                    ],
                                    "type": "text",
                                    "content": "We use 100 input samples for each task and comparison baseline. We set temperature to be 1.0 and we use 4k context unless stated otherwise. For each experiment, we fix the numbers of thoughts in respective schemes to achieve similar costs in each experiment."
                                }
                            ]
                        }
                    ],
                    "index": 17
                },
                {
                    "bbox": [
                        315,
                        538,
                        559,
                        659
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                538,
                                559,
                                659
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": "Parameters We experiment extensively with the branching factor "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": " and the number of levels "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "L"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": " to ensure that we compare GoT to cost-effective and advantageous configurations. We plot two variants of ToT: one with higher "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": " and lower depth (ToT), the other with lower "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": " but higher "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "L"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": " (ToT2). We usually aim to achieve a sweetspot in the tradeoff between sparser generation rounds (lower "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": ") vs. more rounds (larger "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "L"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": "). Usually more responses per round is more expensive (e.g., 80 vs. 60 total responses for Figure 7 but "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "6 vs."
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": "3 costs). We also try different problem sizes "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "P"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": " (e.g., in sorting, "
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "inline_equation",
                                    "content": "P"
                                },
                                {
                                    "bbox": [
                                        315,
                                        538,
                                        559,
                                        659
                                    ],
                                    "type": "text",
                                    "content": " states how many numbers are to be sorted)."
                                }
                            ]
                        }
                    ],
                    "index": 18
                },
                {
                    "bbox": [
                        315,
                        659,
                        559,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                659,
                                559,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        659,
                                        559,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "Used LLMs Due to budget restrictions, we focus on GPT-3.5, using GPT-4. We also experimented with Llama-2, but it was usually worse than GPT-3.5 and also much slower to run, making it infeasible to obtain enough samples."
                                }
                            ]
                        }
                    ],
                    "index": 19
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 6
        },
        {
            "para_blocks": [
                {
                    "type": "image",
                    "bbox": [
                        125,
                        50,
                        244,
                        229
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                125,
                                50,
                                244,
                                229
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        125,
                                        50,
                                        244,
                                        229
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                125,
                                                50,
                                                244,
                                                229
                                            ],
                                            "type": "image",
                                            "image_path": "b589448a083ff7154d09f9461610539b5efb53abcb43509192649bb02060dd68.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                50,
                                236,
                                560,
                                258
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        50,
                                        236,
                                        560,
                                        258
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                50,
                                                236,
                                                560,
                                                258
                                            ],
                                            "type": "text",
                                            "content": "Figure 5: Number of errors and cost in sorting tasks with ChatGPT-3.5. "
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                236,
                                                560,
                                                258
                                            ],
                                            "type": "inline_equation",
                                            "content": "L"
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                236,
                                                560,
                                                258
                                            ],
                                            "type": "text",
                                            "content": " and "
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                236,
                                                560,
                                                258
                                            ],
                                            "type": "inline_equation",
                                            "content": "k"
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                236,
                                                560,
                                                258
                                            ],
                                            "type": "text",
                                            "content": " indicate the structure of ToT (see Sections 3.2 and 6)."
                                        }
                                    ]
                                }
                            ],
                            "index": 3,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 0
                },
                {
                    "type": "image",
                    "bbox": [
                        246,
                        50,
                        358,
                        229
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                246,
                                50,
                                358,
                                229
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        246,
                                        50,
                                        358,
                                        229
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                246,
                                                50,
                                                358,
                                                229
                                            ],
                                            "type": "image",
                                            "image_path": "9faae84c3cdb7837e5ff3ed0fad17518da168c4e596ee640c87812d37c28787e.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 1
                },
                {
                    "type": "image",
                    "bbox": [
                        361,
                        50,
                        482,
                        229
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                361,
                                50,
                                482,
                                229
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        361,
                                        50,
                                        482,
                                        229
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                361,
                                                50,
                                                482,
                                                229
                                            ],
                                            "type": "image",
                                            "image_path": "afbedf3e8f1dd90120e01620d14d2068088b1b7cbeef67c51597dad267a8b299.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 2,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        51,
                        279,
                        219,
                        292
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                279,
                                219,
                                292
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        279,
                                        219,
                                        292
                                    ],
                                    "type": "text",
                                    "content": "7.2 Analysis of GoT's Advantages"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        50,
                        295,
                        293,
                        361
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                295,
                                293,
                                361
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        295,
                                        293,
                                        361
                                    ],
                                    "type": "text",
                                    "content": "The results of analysis are in Figure 5 (sorting), 6 (set intersection), 7 (keyword counting), and 8 (document merging); see Section 5 for the description of specific use cases. Overall, GoT improves the quality of outcomes over all the considered baselines and it reduces inference costs compared to ToT."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        50,
                        361,
                        293,
                        493
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                361,
                                293,
                                493
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        361,
                                        293,
                                        493
                                    ],
                                    "type": "text",
                                    "content": "GoT vs. ToT GoT improves upon ToT and ToT2 by a large margin over all the considered problem instances. ToT usually comes with somewhat higher quality than ToT2, but simultaneously much higher costs. GoT's costs are always lower than ToT, and comparable (in some cases lower, in others higher) than ToT2. For example, it reduces median error by "
                                },
                                {
                                    "bbox": [
                                        50,
                                        361,
                                        293,
                                        493
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\approx 62\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        361,
                                        293,
                                        493
                                    ],
                                    "type": "text",
                                    "content": ", thereby achieving a higher quality of sorting, for "
                                },
                                {
                                    "bbox": [
                                        50,
                                        361,
                                        293,
                                        493
                                    ],
                                    "type": "inline_equation",
                                    "content": "P = 128"
                                },
                                {
                                    "bbox": [
                                        50,
                                        361,
                                        293,
                                        493
                                    ],
                                    "type": "text",
                                    "content": " in comparison to ToT while ensuring "
                                },
                                {
                                    "bbox": [
                                        50,
                                        361,
                                        293,
                                        493
                                    ],
                                    "type": "inline_equation",
                                    "content": ">31\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        361,
                                        293,
                                        493
                                    ],
                                    "type": "text",
                                    "content": " cost reductions. These advantages are due to GoT's ability to decompose complex tasks into simpler sub-tasks, solve these sub-tasks independently, and then incrementally merge these outcomes into the final result."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        50,
                        495,
                        293,
                        616
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                495,
                                293,
                                616
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "text",
                                    "content": "GoT vs. IO and CoT GoT consistently delivers much higher quality of outcomes than IO/CoT. For example, for sorting "
                                },
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "inline_equation",
                                    "content": "(P = 64)"
                                },
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "text",
                                    "content": ", GoT's median error is "
                                },
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\approx 65\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\approx 83\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "text",
                                    "content": " lower than, respectively, CoT and IO. Yet, the costs of GoT - and ToT - are much higher than in IO and CoT. This is mostly due to our configuration of CoT, where we do not artificially inflate the lengths of the chains of reasoning if this does not improve the outcomes. The higher costs of GoT and ToT are driven by "
                                },
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        50,
                                        495,
                                        293,
                                        616
                                    ],
                                    "type": "text",
                                    "content": " new thoughts built for each Generate operation; these multiple thoughts are one of the reasons for GoT's superiority in quality."
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        50,
                        616,
                        294,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                616,
                                294,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "Increasing Complexity of Tackled Problems Most importantly, the advantages of GoT in the quality increase for all the baselines with the growing size of the problem "
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "P"
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ". For example, in sorting, while for "
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "P = 32"
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " GoT only negligibly improves upon ToT2, its median error count becomes lower by "
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\approx 61\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " for "
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "P = 64"
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\approx 69\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": " for "
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "inline_equation",
                                    "content": "P = 128"
                                },
                                {
                                    "bbox": [
                                        50,
                                        616,
                                        294,
                                        704
                                    ],
                                    "type": "text",
                                    "content": ". The quartiles also become respectively better. The results for other schemes also follow the intuition; for example, IO becomes"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        315,
                        279,
                        559,
                        346
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                279,
                                559,
                                346
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        279,
                                        559,
                                        346
                                    ],
                                    "type": "text",
                                    "content": "consistently worse with the increasing "
                                },
                                {
                                    "bbox": [
                                        315,
                                        279,
                                        559,
                                        346
                                    ],
                                    "type": "inline_equation",
                                    "content": "P"
                                },
                                {
                                    "bbox": [
                                        315,
                                        279,
                                        559,
                                        346
                                    ],
                                    "type": "text",
                                    "content": ", which is expected as a single thought is unlikely to solve a large problem instance. Overall, this analysis illustrates that GoT is indeed well-suited for elaborate problem cases, as the execution schedules usually become more complex with the growing problem sizes."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        316,
                        357,
                        504,
                        369
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                357,
                                504,
                                369
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        357,
                                        504,
                                        369
                                    ],
                                    "type": "text",
                                    "content": "7.3 Discussion on Task Decomposition"
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        315,
                        372,
                        558,
                        494
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                372,
                                558,
                                494
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        372,
                                        558,
                                        494
                                    ],
                                    "type": "text",
                                    "content": "When splitting a task into subtasks and then solving these subtasks, the size of responses and the input (in tokens) are reduced proportionally to the degree of task decomposition. However, the \"static\" part of the prompt (i.e., few-shot examples) may become a significant overhead (see GoT4 to GoT8 in Figure 7). Here, we observe that these few-shot examples can usually also be reduced in size (e.g., the passages used to demonstrate keyword counting can also be made smaller and still be indicative of the actual input size), thus actively working towards decreasing the cost (e.g., see the difference between GoT8 and GoTx in Figure 7)."
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        315,
                        494,
                        559,
                        604
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                494,
                                559,
                                604
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        494,
                                        559,
                                        604
                                    ],
                                    "type": "text",
                                    "content": "The overall goal when conducting graph decomposition is to break down a task to the point, where the LLM can solve it correctly for the majority of time using a single prompt (or with a few additional improvement steps). This significantly lowers the number of improvement/refinement steps needed during the later stages of the graph exploration. Furthermore, as indicated by our results, combining or concatenating sub-results is usually an easier task than solving large task instances from scratch. Hence, the LLM is often successful when aggregating the final solution."
                                }
                            ]
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        391,
                        616,
                        484,
                        628
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                391,
                                616,
                                484,
                                628
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        391,
                                        616,
                                        484,
                                        628
                                    ],
                                    "type": "text",
                                    "content": "8 Related Work"
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "bbox": [
                        316,
                        632,
                        544,
                        643
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                316,
                                632,
                                544,
                                643
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        316,
                                        632,
                                        544,
                                        643
                                    ],
                                    "type": "text",
                                    "content": "We summarize relations between GoT and related work."
                                }
                            ]
                        }
                    ],
                    "index": 14
                },
                {
                    "bbox": [
                        315,
                        654,
                        517,
                        667
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                654,
                                517,
                                667
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        654,
                                        517,
                                        667
                                    ],
                                    "type": "text",
                                    "content": "8.1 Prompting Paradigms & Approaches"
                                }
                            ]
                        }
                    ],
                    "index": 15
                },
                {
                    "bbox": [
                        315,
                        670,
                        558,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                670,
                                558,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        670,
                                        558,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "We detail different prompting paradigms in Section 1 and Table 1. There are numerous other work related to prompting. We now briefly summarize selected most related ones;"
                                }
                            ]
                        }
                    ],
                    "index": 16
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 7
        },
        {
            "para_blocks": [
                {
                    "type": "image",
                    "bbox": [
                        125,
                        51,
                        483,
                        233
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                125,
                                51,
                                483,
                                233
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        125,
                                        51,
                                        483,
                                        233
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                125,
                                                51,
                                                483,
                                                233
                                            ],
                                            "type": "image",
                                            "image_path": "eb206320805b12c6193d8b8a7e455f2227c3b615b961d63a1a4ee7d347a8ef93.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                50,
                                239,
                                560,
                                264
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        50,
                                        239,
                                        560,
                                        264
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                50,
                                                239,
                                                560,
                                                264
                                            ],
                                            "type": "text",
                                            "content": "Figure 6: Number of errors and cost in set intersection with ChatGPT-3.5. "
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                239,
                                                560,
                                                264
                                            ],
                                            "type": "inline_equation",
                                            "content": "L"
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                239,
                                                560,
                                                264
                                            ],
                                            "type": "text",
                                            "content": " and "
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                239,
                                                560,
                                                264
                                            ],
                                            "type": "inline_equation",
                                            "content": "k"
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                239,
                                                560,
                                                264
                                            ],
                                            "type": "text",
                                            "content": " indicate the structure of ToT (see Sections 3.2 and 6)."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 0
                },
                {
                    "type": "image",
                    "bbox": [
                        87,
                        280,
                        258,
                        467
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                87,
                                280,
                                258,
                                467
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        87,
                                        280,
                                        258,
                                        467
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                87,
                                                280,
                                                258,
                                                467
                                            ],
                                            "type": "image",
                                            "image_path": "40f257d3aa4c7e9207aaf0ddf45e09816f59ad44c65e85927dfde31e327c8820.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 2,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                50,
                                474,
                                294,
                                509
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        50,
                                        474,
                                        294,
                                        509
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                50,
                                                474,
                                                294,
                                                509
                                            ],
                                            "type": "text",
                                            "content": "Figure 7: Number of errors and cost in keyword counting with ChatGPT-3.5. "
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                474,
                                                294,
                                                509
                                            ],
                                            "type": "inline_equation",
                                            "content": "L"
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                474,
                                                294,
                                                509
                                            ],
                                            "type": "text",
                                            "content": " and "
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                474,
                                                294,
                                                509
                                            ],
                                            "type": "inline_equation",
                                            "content": "k"
                                        },
                                        {
                                            "bbox": [
                                                50,
                                                474,
                                                294,
                                                509
                                            ],
                                            "type": "text",
                                            "content": " indicate the structure of ToT (see Sections 3.2 and 6)."
                                        }
                                    ]
                                }
                            ],
                            "index": 3,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        50,
                        536,
                        293,
                        679
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                536,
                                293,
                                679
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        536,
                                        293,
                                        679
                                    ],
                                    "type": "text",
                                    "content": "more extensive descriptions can be found in dedicated surveys [68, 40, 69, 34]. Wang et al. proposed Plan-and-Solve, an approach to enhance CoT with an explicit planning stage [65]. Using complexity-based criteria to enhance prompting within a CoT was designed by Fu et al. [66, 29]. The self-taught reasoner (STaR) [79] generates several chain of thoughts, and selects the ones that are valid. Similarly, a scheme by Shum et al. [60] generates a pool of CoT candidates, and selects the best candidate based on whether the candidates match the ground truth and on a policy gradient-based method. Automatic prompt generation overcomes the issues of scaling in CoT [58, 42, 41]. Zhou et al. proposes to harness selecting the best prompt out of a candidate set [83]."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        51,
                        681,
                        293,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                681,
                                293,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        681,
                                        293,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "Finally, in prompt chaining, one cascades different LLMs. This enables prompting different LLMs via different con"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "type": "image",
                    "bbox": [
                        353,
                        280,
                        523,
                        458
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                353,
                                280,
                                523,
                                458
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        353,
                                        280,
                                        523,
                                        458
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                353,
                                                280,
                                                523,
                                                458
                                            ],
                                            "type": "image",
                                            "image_path": "fc04f946acc775908c6668282e795df77c437be845ff7566ee480ff3c20fd7a2.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 6,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                315,
                                464,
                                559,
                                510
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        315,
                                        464,
                                        559,
                                        510
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                315,
                                                464,
                                                559,
                                                510
                                            ],
                                            "type": "text",
                                            "content": "Figure 8: Score and cost in document merging with ChatGPT-3.5. "
                                        },
                                        {
                                            "bbox": [
                                                315,
                                                464,
                                                559,
                                                510
                                            ],
                                            "type": "inline_equation",
                                            "content": "L"
                                        },
                                        {
                                            "bbox": [
                                                315,
                                                464,
                                                559,
                                                510
                                            ],
                                            "type": "text",
                                            "content": " and "
                                        },
                                        {
                                            "bbox": [
                                                315,
                                                464,
                                                559,
                                                510
                                            ],
                                            "type": "inline_equation",
                                            "content": "k"
                                        },
                                        {
                                            "bbox": [
                                                315,
                                                464,
                                                559,
                                                510
                                            ],
                                            "type": "text",
                                            "content": " indicate the structure of ToT (see Sections 3.2 and 6). Number of samples: 50; context size: 16k tokens."
                                        }
                                    ]
                                }
                            ],
                            "index": 7,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        315,
                        531,
                        559,
                        566
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                531,
                                559,
                                566
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        531,
                                        559,
                                        566
                                    ],
                                    "type": "text",
                                    "content": "texts, enabling more powerful reasoning [21, 47, 72, 23, 50, 71, 72]. GoT is orthogonal to this class of schemes, as it focuses on a single context capabilities."
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        315,
                        574,
                        499,
                        586
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                574,
                                499,
                                586
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        574,
                                        499,
                                        586
                                    ],
                                    "type": "text",
                                    "content": "8.2 Self-Reflection & Self-Evaluation"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        315,
                        590,
                        558,
                        657
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                590,
                                558,
                                657
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        590,
                                        558,
                                        657
                                    ],
                                    "type": "text",
                                    "content": "Self-reflection and self-evaluation were introduced recently [59, 48, 45, 74]. They are used to enhance different tasks, for example for code generation [17] or computer operation tasks [39]. In GoT, we partially rely on self-evaluation when taking decisions on how to expand the graph of thoughts within a prompt."
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        315,
                        666,
                        430,
                        679
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                666,
                                430,
                                679
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        666,
                                        430,
                                        679
                                    ],
                                    "type": "text",
                                    "content": "8.3 LLMs & Planning"
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        315,
                        681,
                        558,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                681,
                                558,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        681,
                                        558,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "There are many works recently on how to plan complex tasks with LLMs [36, 80, 77, 75, 67, 37]. GoT could be seen"
                                }
                            ]
                        }
                    ],
                    "index": 12
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 8
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        50,
                        54,
                        294,
                        89
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                54,
                                294,
                                89
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        54,
                                        294,
                                        89
                                    ],
                                    "type": "text",
                                    "content": "as a generic framework that could potentially be used to enhance such schemes, by offering a paradigm for generating complex graph-based plans."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        51,
                        97,
                        224,
                        110
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                51,
                                97,
                                224,
                                110
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        51,
                                        97,
                                        224,
                                        110
                                    ],
                                    "type": "text",
                                    "content": "8.4 Graphs and Graph Computing"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        50,
                        113,
                        293,
                        354
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                113,
                                293,
                                354
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        113,
                                        293,
                                        354
                                    ],
                                    "type": "text",
                                    "content": "Graphs have become an immensely popular and important part of the general computing landscape [44, 46, 32, 31, 55]. Recently, there has been a growing interest in domains such as graph databases [53, 54, 11, 4, 5, 8], graph pattern matching [25, 18, 61, 10, 2, 1], graph streaming [26, 22, 3], and graph machine learning as well as graph neural networks [33, 73, 82, 81, 16, 33, 12, 6, 30, 56, 7]. The graph abstraction has been fruitful for many modern research domains, such as social sciences (e.g., studying human interactions), bioinformatics (e.g., analyzing protein structures), chemistry (e.g., designing chemical compounds), medicine (e.g., drug discovery), cybersecurity (e.g., identifying intruder machines), healthcare (e.g., exposing groups of people who submit fraudulent claims), web graph analysis (e.g., providing accurate search services), entertainment services (e.g., predicting movie popularity), linguistics (e.g., modeling relationships between words), transportation (e.g., finding efficient routes), physics (e.g., understanding phase transitions and critical phenomena), and many others [44, 20, 38, 35, 15]. In this work, we harness the graph abstraction as a key mechanism that enhances prompting capabilities in LLMs."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        132,
                        365,
                        212,
                        378
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                132,
                                365,
                                212,
                                378
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        132,
                                        365,
                                        212,
                                        378
                                    ],
                                    "type": "text",
                                    "content": "9 Conclusion"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        50,
                        381,
                        293,
                        426
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                381,
                                293,
                                426
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        381,
                                        293,
                                        426
                                    ],
                                    "type": "text",
                                    "content": "Prompt engineering is one of the central new domains of the large language model (LLM) research. It enables using LLMs efficiently, without any model updates. However, designing effective prompts is a challenging task."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        50,
                        426,
                        293,
                        536
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                426,
                                293,
                                536
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        426,
                                        293,
                                        536
                                    ],
                                    "type": "text",
                                    "content": "In this work, we propose Graph of Thoughts (GoT), a new paradigm that enables the LLM to solve different tasks effectively without any model updates. The key idea is to model the LLM reasoning as an arbitrary graph, where thoughts are vertices and dependencies between thoughts are edges. This enables novel transformations of thoughts, such as aggregation. Human's task solving is often non-linear, and it involves combining intermediate solutions into final ones, or changing the flow of reasoning upon discovering new insights. GoT reflects this with its graph structure."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        50,
                        536,
                        293,
                        613
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                536,
                                293,
                                613
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        536,
                                        293,
                                        613
                                    ],
                                    "type": "text",
                                    "content": "GoT outperforms other prompting schemes, for example ensuring "
                                },
                                {
                                    "bbox": [
                                        50,
                                        536,
                                        293,
                                        613
                                    ],
                                    "type": "inline_equation",
                                    "content": "62\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        536,
                                        293,
                                        613
                                    ],
                                    "type": "text",
                                    "content": " increase in the quality of sorting over ToT, while simultaneously reducing costs by "
                                },
                                {
                                    "bbox": [
                                        50,
                                        536,
                                        293,
                                        613
                                    ],
                                    "type": "inline_equation",
                                    "content": ">31\\%"
                                },
                                {
                                    "bbox": [
                                        50,
                                        536,
                                        293,
                                        613
                                    ],
                                    "type": "text",
                                    "content": ". We also propose a novel metric for a prompting scheme, the volume of a thought, to indicate the scope of information that a given LLM output could carry with it, where GoT also excels. This provides a step towards more principled prompt engineering."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        50,
                        613,
                        293,
                        658
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                613,
                                293,
                                658
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        613,
                                        293,
                                        658
                                    ],
                                    "type": "text",
                                    "content": "The graph abstraction has been the foundation of several successful designs in computing and AI over last decades, for example AlphaFold for protein predictions. Our work harnesses it within the realm of prompt engineering."
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        121,
                        668,
                        223,
                        681
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                121,
                                668,
                                223,
                                681
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        121,
                                        668,
                                        223,
                                        681
                                    ],
                                    "type": "text",
                                    "content": "Acknowledgements"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        50,
                        683,
                        293,
                        704
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                50,
                                683,
                                293,
                                704
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        50,
                                        683,
                                        293,
                                        704
                                    ],
                                    "type": "text",
                                    "content": "We thank Hussein Harake, Colin McMurtrie, Mark Klein, Angelo Mangili, and the whole CSCS team granting access to the"
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        315,
                        55,
                        558,
                        165
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                315,
                                55,
                                558,
                                165
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        315,
                                        55,
                                        558,
                                        165
                                    ],
                                    "type": "text",
                                    "content": "Ault and Daint machines, and for their excellent technical support. We thank Timo Schneider for help with infrastructure at SPCL. This project received funding from the European Research Council (Project PSAP, No. 101002047), and the European High-Performance Computing Joint Undertaking (JU) under grant agreement No. 955513 (MAELSTROM). This project was supported by the ETH Future Computing Laboratory (EFCL), financed by a donation from Huawei Technologies. This project received funding from the European Union's HE research and innovation programme under the grant agreement No. 101070141 (Project GLACIATION)."
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        408,
                        178,
                        468,
                        190
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                408,
                                178,
                                468,
                                190
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        408,
                                        178,
                                        468,
                                        190
                                    ],
                                    "type": "text",
                                    "content": "References"
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        318,
                        194,
                        559,
                        704
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 23,
                    "blocks": [
                        {
                            "bbox": [
                                322,
                                194,
                                558,
                                239
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        322,
                                        194,
                                        558,
                                        239
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                322,
                                                194,
                                                558,
                                                239
                                            ],
                                            "type": "text",
                                            "content": "[1] M. Besta et al. Graphminesuite: Enabling high-performance and programmable graph mining algorithms with set algebra. arXiv preprint arXiv:2103.03653, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 12
                        },
                        {
                            "bbox": [
                                322,
                                241,
                                559,
                                277
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        322,
                                        241,
                                        559,
                                        277
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                322,
                                                241,
                                                559,
                                                277
                                            ],
                                            "type": "text",
                                            "content": "[2] M. Besta et al. Sisa: Set-centric instruction set architecture for graph mining on processing-in-memory systems. arXiv preprint arXiv:2104.07582, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 13
                        },
                        {
                            "bbox": [
                                323,
                                278,
                                559,
                                312
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        323,
                                        278,
                                        559,
                                        312
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                323,
                                                278,
                                                559,
                                                312
                                            ],
                                            "type": "text",
                                            "content": "[3] M. Besta et al. Practice of streaming processing of dynamic graphs: Concepts, models, and systems. IEEE TPDS, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 14
                        },
                        {
                            "bbox": [
                                323,
                                315,
                                559,
                                360
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        323,
                                        315,
                                        559,
                                        360
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                323,
                                                315,
                                                559,
                                                360
                                            ],
                                            "type": "text",
                                            "content": "[4] M. Besta et al. High-performance graph databases that are portable, programmable, and scale to hundreds of thousands of cores. arXiv preprint arXiv:2305.11162, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 15
                        },
                        {
                            "bbox": [
                                323,
                                361,
                                558,
                                408
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        323,
                                        361,
                                        558,
                                        408
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                323,
                                                361,
                                                558,
                                                408
                                            ],
                                            "type": "text",
                                            "content": "[5] M. Besta, R. Gerstenberger, N. Blach, M. Fischer, and T. Hoefler. Gdi: A graph database interface standard. Technical report, 2023. Available at https://spcl.inf.ethz.ch/Research/Parallel_Programming/GDI/."
                                        }
                                    ]
                                }
                            ],
                            "index": 16
                        },
                        {
                            "bbox": [
                                323,
                                410,
                                558,
                                455
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        323,
                                        410,
                                        558,
                                        455
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                323,
                                                410,
                                                558,
                                                455
                                            ],
                                            "type": "text",
                                            "content": "[6] M. Besta, R. Grob, C. Miglioli, N. Bernold, G. Kwasniewski, G. Gjini, R. Kanakagiri, S. Ashkboos, L. Gianinazzi, N. Dryden, et al. Motif prediction with graph neural networks. In ACM KDD, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 17
                        },
                        {
                            "bbox": [
                                323,
                                457,
                                558,
                                492
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        323,
                                        457,
                                        558,
                                        492
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                323,
                                                457,
                                                558,
                                                492
                                            ],
                                            "type": "text",
                                            "content": "[7] M. Besta and T. Hoefler. Parallel and distributed graph neural networks: An in-depth concurrency analysis. arXiv preprint arXiv:2205.09702, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 18
                        },
                        {
                            "bbox": [
                                323,
                                494,
                                558,
                                529
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        323,
                                        494,
                                        558,
                                        529
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                323,
                                                494,
                                                558,
                                                529
                                            ],
                                            "type": "text",
                                            "content": "[8] M. Besta, P. Iff, F. Scheidl, K. Osawa, N. Dryden, M. Podstawski, T. Chen, and T. Hoefler. Neural graph databases. In "
                                        },
                                        {
                                            "bbox": [
                                                323,
                                                494,
                                                558,
                                                529
                                            ],
                                            "type": "inline_equation",
                                            "content": "LOG"
                                        },
                                        {
                                            "bbox": [
                                                323,
                                                494,
                                                558,
                                                529
                                            ],
                                            "type": "text",
                                            "content": ", 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 19
                        },
                        {
                            "bbox": [
                                323,
                                531,
                                559,
                                586
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        323,
                                        531,
                                        559,
                                        586
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                323,
                                                531,
                                                559,
                                                586
                                            ],
                                            "type": "text",
                                            "content": "[9] M. Besta, R. Kanakagiri, H. Mustafa, M. Karasikov, G. Ratsch, T. Hoefer, and E. Solomonik. Communication-efficient jaccard similarity for high-performance distributed genome comparisons. arXiv preprint arXiv:1911.04200, 2019."
                                        }
                                    ]
                                }
                            ],
                            "index": 20
                        },
                        {
                            "bbox": [
                                318,
                                589,
                                559,
                                647
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        589,
                                        559,
                                        647
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                589,
                                                559,
                                                647
                                            ],
                                            "type": "text",
                                            "content": "[10] M. Besta, C. Miglioli, P. S. Labini, J. Tƒõtek, P. Iff, R. Kanakagiri, S. Ashkboos, K. Janda, M. Podstawski, G. Kwasniewski, et al. Probgraph: High-performance and high-accuracy graph mining with probabilistic set representations. In ACM/IEEE Supercomputing, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 21
                        },
                        {
                            "bbox": [
                                318,
                                647,
                                559,
                                704
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        647,
                                        559,
                                        704
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                647,
                                                559,
                                                704
                                            ],
                                            "type": "text",
                                            "content": "[11] M. Besta, E. Peter, R. Gerstenberger, M. Fischer, M. Podstawski, C. Barthels, G. Alonso, and T. Hoeffer. Demystifying graph databases: Analysis and taxonomy of data organization, system designs, and graph queries. arXiv preprint arXiv:1910.09017, 2019."
                                        }
                                    ]
                                }
                            ],
                            "index": 22
                        }
                    ],
                    "sub_type": "ref_text"
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 9
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        52,
                        54,
                        294,
                        704
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 14,
                    "blocks": [
                        {
                            "bbox": [
                                52,
                                54,
                                293,
                                99
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        54,
                                        293,
                                        99
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                54,
                                                293,
                                                99
                                            ],
                                            "type": "text",
                                            "content": "[12] M. M. Bronstein, J. Bruna, Y. LeCun, A. Szlam, and P. Vandergheynst. Geometric deep learning: going beyond euclidean data. IEEE Signal Processing Magazine, 34(4):18-42, 2017."
                                        }
                                    ]
                                }
                            ],
                            "index": 0
                        },
                        {
                            "bbox": [
                                52,
                                100,
                                294,
                                157
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        100,
                                        294,
                                        157
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                100,
                                                294,
                                                157
                                            ],
                                            "type": "text",
                                            "content": "[13] T. Brown, B. Mann, N. Ryder, M. Subbiah, J. D. Kaplan, P. Dhariwal, A. Neelakantan, P. Shyam, G. Sastry, A. Askell, et al. Language models are few-shot learners. Advances in neural information processing systems, 33:1877-1901, 2020."
                                        }
                                    ]
                                }
                            ],
                            "index": 1
                        },
                        {
                            "bbox": [
                                52,
                                159,
                                293,
                                213
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        159,
                                        293,
                                        213
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                159,
                                                293,
                                                213
                                            ],
                                            "type": "text",
                                            "content": "[14] S. Bubeck, V. Chandrasekaran, R. Eldan, J. Gehrke, E. Horvitz, E. Kamar, P. Lee, Y. T. Lee, Y. Li, S. Lundberg, et al. Sparks of artificial general intelligence: Early experiments with GPT-4. arXiv preprint arXiv:2303.12712, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 2
                        },
                        {
                            "bbox": [
                                52,
                                216,
                                293,
                                250
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        216,
                                        293,
                                        250
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                216,
                                                293,
                                                250
                                            ],
                                            "type": "text",
                                            "content": "[15] D. Chakrabarti and C. Faloutsos. Graph mining: Laws, generators, and algorithms. ACM computing surveys (CSUR), 38(1):2, 2006."
                                        }
                                    ]
                                }
                            ],
                            "index": 3
                        },
                        {
                            "bbox": [
                                52,
                                251,
                                293,
                                296
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        251,
                                        293,
                                        296
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                251,
                                                293,
                                                296
                                            ],
                                            "type": "text",
                                            "content": "[16] I. Chami, S. Abu-El-Haija, B. Perozzi, C. R√©, and K. Murphy. Machine learning on graphs: A model and comprehensive taxonomy. arXiv preprint arXiv:2005.03675, 2020."
                                        }
                                    ]
                                }
                            ],
                            "index": 4
                        },
                        {
                            "bbox": [
                                52,
                                298,
                                293,
                                331
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        298,
                                        293,
                                        331
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                298,
                                                293,
                                                331
                                            ],
                                            "type": "text",
                                            "content": "[17] X. Chen, M. Lin, N. Scharli, and D. Zhou. Teaching large language models to self-debug. arXiv preprint arXiv:2304.05128, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 5
                        },
                        {
                            "bbox": [
                                52,
                                334,
                                293,
                                378
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        334,
                                        293,
                                        378
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                334,
                                                293,
                                                378
                                            ],
                                            "type": "text",
                                            "content": "[18] J. Cheng, J. X. Yu, B. Ding, S. Y. Philip, and H. Wang. Fast graph pattern matching. In 2008 IEEE 24th International Conference on Data Engineering, pages 913-922. IEEE, 2008."
                                        }
                                    ]
                                }
                            ],
                            "index": 6
                        },
                        {
                            "bbox": [
                                52,
                                380,
                                293,
                                435
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        380,
                                        293,
                                        435
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                380,
                                                293,
                                                435
                                            ],
                                            "type": "text",
                                            "content": "[19] A. Chowdhery, S. Narang, J. Devlin, M. Bosma, G. Mishra, A. Roberts, P. Barham, H. W. Chung, C. Sutton, S. Gehrmann, et al. Palm: Scaling language modeling with pathways. arXiv preprint arXiv:2204.02311, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 7
                        },
                        {
                            "bbox": [
                                52,
                                437,
                                293,
                                460
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        437,
                                        293,
                                        460
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                437,
                                                293,
                                                460
                                            ],
                                            "type": "text",
                                            "content": "[20] D. J. Cook and L. B. Holder. Mining graph data. John Wiley & Sons, 2006."
                                        }
                                    ]
                                }
                            ],
                            "index": 8
                        },
                        {
                            "bbox": [
                                52,
                                462,
                                293,
                                506
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        462,
                                        293,
                                        506
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                462,
                                                293,
                                                506
                                            ],
                                            "type": "text",
                                            "content": "[21] A. Creswell, M. Shanahan, and I. Higgins. Selection-inference: Exploiting large language models for interpretable logical reasoning. arXiv preprint arXiv:2205.09712, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 9
                        },
                        {
                            "bbox": [
                                52,
                                509,
                                293,
                                542
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        509,
                                        293,
                                        542
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                509,
                                                293,
                                                542
                                            ],
                                            "type": "text",
                                            "content": "[22] L. Dhulipala et al. Low-latency graph streaming using compressed purely-functional trees. arXiv:1904.08380, 2019."
                                        }
                                    ]
                                }
                            ],
                            "index": 10
                        },
                        {
                            "bbox": [
                                52,
                                544,
                                293,
                                590
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        544,
                                        293,
                                        590
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                544,
                                                293,
                                                590
                                            ],
                                            "type": "text",
                                            "content": "[23] D. Dohan, W. Xu, A. Lewkowycz, J. Austin, D. Bieber, R. G. Lopes, Y. Wu, H. Michalewski, R. A. Saurous, J. Sohl-Dickstein, et al. Language model cascades. arXiv preprint arXiv:2207.10342, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 11
                        },
                        {
                            "bbox": [
                                52,
                                591,
                                293,
                                658
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        591,
                                        293,
                                        658
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                591,
                                                293,
                                                658
                                            ],
                                            "type": "text",
                                            "content": "[24] I. Drori, S. Zhang, R. Shuttleworth, L. Tang, A. Lu, E. Ke, K. Liu, L. Chen, S. Tran, N. Cheng, et al. A neural network solves, explains, and generates university math problems by program synthesis and few-shot learning at human level. Proceedings of the National Academy of Sciences, 119(32):e2123433119, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 12
                        },
                        {
                            "bbox": [
                                52,
                                659,
                                293,
                                704
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        659,
                                        293,
                                        704
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                659,
                                                293,
                                                704
                                            ],
                                            "type": "text",
                                            "content": "[25] W. Fan, J. Li, S. Ma, N. Tang, Y. Wu, and Y. Wu. Graph pattern matching: from intractable to polynomial time. Proceedings of the VLDB Endowment, 3(1-2):264-275, 2010."
                                        }
                                    ]
                                }
                            ],
                            "index": 13
                        }
                    ],
                    "sub_type": "ref_text"
                },
                {
                    "bbox": [
                        318,
                        54,
                        559,
                        704
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 31,
                    "blocks": [
                        {
                            "bbox": [
                                318,
                                54,
                                558,
                                88
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        54,
                                        558,
                                        88
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                54,
                                                558,
                                                88
                                            ],
                                            "type": "text",
                                            "content": "[26] G. Feng et al. Distinguish: A distributed graph data structure for massive dynamic graph processing. In IEEE Big Data, pages 1814-1822, 2015."
                                        }
                                    ]
                                }
                            ],
                            "index": 15
                        },
                        {
                            "bbox": [
                                318,
                                91,
                                559,
                                147
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        91,
                                        559,
                                        147
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                91,
                                                559,
                                                147
                                            ],
                                            "type": "text",
                                            "content": "[27] A. Friggeri, G. Chelius, and E. Fleury. Triangles to capture social cohesion. In 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and 2011 IEEE Third International Conference on Social Computing, pages 258-265. IEEE, 2011."
                                        }
                                    ]
                                }
                            ],
                            "index": 16
                        },
                        {
                            "bbox": [
                                318,
                                149,
                                559,
                                173
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        149,
                                        559,
                                        173
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                149,
                                                559,
                                                173
                                            ],
                                            "type": "text",
                                            "content": "[28] K. Friston. Hierarchical models in the brain. PLoS computational biology, 4(11):e1000211, 2008."
                                        }
                                    ]
                                }
                            ],
                            "index": 17
                        },
                        {
                            "bbox": [
                                318,
                                175,
                                558,
                                209
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        175,
                                        558,
                                        209
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                175,
                                                558,
                                                209
                                            ],
                                            "type": "text",
                                            "content": "[29] Y. Fu, H. Peng, A. Sabharwal, P. Clark, and T. Khot. Complexity-based prompting for multi-step reasoning. arXiv preprint arXiv:2210.00720, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 18
                        },
                        {
                            "bbox": [
                                318,
                                212,
                                559,
                                246
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        212,
                                        559,
                                        246
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                212,
                                                559,
                                                246
                                            ],
                                            "type": "text",
                                            "content": "[30] L. Gianinazzi, M. Fries, N. Dryden, T. Ben-Nun, and T. Hoefler. Learning combinatorial node labeling algorithms. arXiv preprint arXiv:2106.03594, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 19
                        },
                        {
                            "bbox": [
                                318,
                                248,
                                558,
                                282
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        248,
                                        558,
                                        282
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                248,
                                                558,
                                                282
                                            ],
                                            "type": "text",
                                            "content": "[31] D. Gregor and A. Lumsdaine. Lifting sequential graph algorithms for distributed-memory parallel computation. ACM SIGPLAN Notices, 40(10):423-437, 2005."
                                        }
                                    ]
                                }
                            ],
                            "index": 20
                        },
                        {
                            "bbox": [
                                318,
                                285,
                                558,
                                319
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        285,
                                        558,
                                        319
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                285,
                                                558,
                                                319
                                            ],
                                            "type": "text",
                                            "content": "[32] D. Gregor and A. Lumsdaine. The parallel bg1: A generic library for distributed graph computations. POOSC, 2005."
                                        }
                                    ]
                                }
                            ],
                            "index": 21
                        },
                        {
                            "bbox": [
                                318,
                                322,
                                558,
                                355
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        322,
                                        558,
                                        355
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                322,
                                                558,
                                                355
                                            ],
                                            "type": "text",
                                            "content": "[33] W. L. Hamilton et al. Representation learning on graphs: Methods and applications. arXiv preprint arXiv:1709.05584, 2017."
                                        }
                                    ]
                                }
                            ],
                            "index": 22
                        },
                        {
                            "bbox": [
                                318,
                                358,
                                558,
                                392
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        358,
                                        558,
                                        392
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                358,
                                                558,
                                                392
                                            ],
                                            "type": "text",
                                            "content": "[34] M. Hartmann and D. Sonntag. A survey on improving nlp models with human explanations. arXiv preprint arXiv:2204.08892, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 23
                        },
                        {
                            "bbox": [
                                318,
                                395,
                                558,
                                428
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        395,
                                        558,
                                        428
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                395,
                                                558,
                                                428
                                            ],
                                            "type": "text",
                                            "content": "[35] T. Horv√°th, T. Gartner, and S. Wrobel. Cyclic pattern kernels for predictive graph mining. In KDD, pages 158-167. ACM, 2004."
                                        }
                                    ]
                                }
                            ],
                            "index": 24
                        },
                        {
                            "bbox": [
                                318,
                                432,
                                559,
                                487
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        432,
                                        559,
                                        487
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                432,
                                                559,
                                                487
                                            ],
                                            "type": "text",
                                            "content": "[36] W. Huang, P. Abbeel, D. Pathak, and I. Mordatch. Language models as zero-shot planners: Extracting actionable knowledge for embodied agents. In International Conference on Machine Learning, pages 9118-9147. PMLR, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 25
                        },
                        {
                            "bbox": [
                                318,
                                491,
                                559,
                                547
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        491,
                                        559,
                                        547
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                491,
                                                559,
                                                547
                                            ],
                                            "type": "text",
                                            "content": "[37] W. Huang, F. Xia, T. Xiao, H. Chan, J. Liang, P. Florence, A. Zeng, J. Tompson, I. Mordatch, Y. Chebotar, et al. Inner monologue: Embodied reasoning through planning with language models. arXiv preprint arXiv:2207.05608, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 26
                        },
                        {
                            "bbox": [
                                318,
                                549,
                                559,
                                584
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        549,
                                        559,
                                        584
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                549,
                                                559,
                                                584
                                            ],
                                            "type": "text",
                                            "content": "[38] C. Jiang, F. Coenen, and M. Zito. A survey of frequent subgraph mining algorithms. The Knowledge Engineering Review, 28(1):75-105, 2013."
                                        }
                                    ]
                                }
                            ],
                            "index": 27
                        },
                        {
                            "bbox": [
                                318,
                                586,
                                559,
                                620
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        586,
                                        559,
                                        620
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                586,
                                                559,
                                                620
                                            ],
                                            "type": "text",
                                            "content": "[39] G. Kim, P. Baldi, and S. McAleer. Language models can solve computer tasks. arXiv preprint arXiv:2303.17491, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 28
                        },
                        {
                            "bbox": [
                                318,
                                623,
                                559,
                                667
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        623,
                                        559,
                                        667
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                623,
                                                559,
                                                667
                                            ],
                                            "type": "text",
                                            "content": "[40] P. Lertvittayakumjorn and F. Toni. Explanation-based human debugging of nlp models: A survey. Transactions of the Association for Computational Linguistics, 9:1508-1528, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 29
                        },
                        {
                            "bbox": [
                                318,
                                670,
                                559,
                                704
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        670,
                                        559,
                                        704
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                670,
                                                559,
                                                704
                                            ],
                                            "type": "text",
                                            "content": "[41] B. Lester, R. Al-Rfou, and N. Constant. The power of scale for parameter-efficient prompt tuning. arXiv preprint arXiv:2104.08691, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 30
                        }
                    ],
                    "sub_type": "ref_text"
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 10
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        52,
                        54,
                        293,
                        704
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 16,
                    "blocks": [
                        {
                            "bbox": [
                                52,
                                54,
                                293,
                                87
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        54,
                                        293,
                                        87
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                54,
                                                293,
                                                87
                                            ],
                                            "type": "text",
                                            "content": "[42] X. L. Li and P. Liang. Prefix-tuning: Optimizing continuous prompts for generation. arXiv preprint arXiv:2101.00190, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 0
                        },
                        {
                            "bbox": [
                                52,
                                90,
                                292,
                                112
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        90,
                                        292,
                                        112
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                90,
                                                292,
                                                112
                                            ],
                                            "type": "text",
                                            "content": "[43] J. Long. Large language model guided tree-of-thought. arXiv preprint arXiv:2305.08291, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 1
                        },
                        {
                            "bbox": [
                                52,
                                115,
                                293,
                                148
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        115,
                                        293,
                                        148
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                115,
                                                293,
                                                148
                                            ],
                                            "type": "text",
                                            "content": "[44] A. Lumsdaine, D. Gregor, B. Hendrickson, and J. Berry. Challenges in parallel graph processing. Parallel Processing Letters, 17(01):5-20, 2007."
                                        }
                                    ]
                                }
                            ],
                            "index": 2
                        },
                        {
                            "bbox": [
                                52,
                                151,
                                293,
                                196
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        151,
                                        293,
                                        196
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                151,
                                                293,
                                                196
                                            ],
                                            "type": "text",
                                            "content": "[45] A. Madaan, N. Tandon, P. Gupta, S. Hallinan, L. Gao, S. Wiegreff, U. Alon, N. Dziri, S. Prabhumoye, Y. Yang, et al. Self-refine: Iterative refinement with self-feedback. arXiv preprint arXiv:2303.17651, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 3
                        },
                        {
                            "bbox": [
                                52,
                                198,
                                293,
                                243
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        198,
                                        293,
                                        243
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                198,
                                                293,
                                                243
                                            ],
                                            "type": "text",
                                            "content": "[46] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn, N. Leiser, and G. Czajkowski. Pregel: a system for large-scale graph processing. In ACM SIGMOD, pages 135-146. ACM, 2010."
                                        }
                                    ]
                                }
                            ],
                            "index": 4
                        },
                        {
                            "bbox": [
                                52,
                                245,
                                293,
                                311
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        245,
                                        293,
                                        311
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                245,
                                                293,
                                                311
                                            ],
                                            "type": "text",
                                            "content": "[47] M. Nye, A. J. Andreassen, G. Gur-Ari, H. Michalewski, J. Austin, D. Bieber, D. Dohan, A. Lewkowycz, M. Bosma, D. Luan, et al. Show your work: Scratchpads for intermediate computation with language models. arXiv preprint arXiv:2112.00114, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 5
                        },
                        {
                            "bbox": [
                                52,
                                314,
                                293,
                                358
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        314,
                                        293,
                                        358
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                314,
                                                293,
                                                358
                                            ],
                                            "type": "text",
                                            "content": "[48] D. Paul, M. Ismayilzada, M. Peyrard, B. Borges, A. Bosselut, R. West, and B. Faltings. Refiner: Reasoning feedback on intermediate representations. arXiv preprint arXiv:2304.01904, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 6
                        },
                        {
                            "bbox": [
                                52,
                                361,
                                293,
                                416
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        361,
                                        293,
                                        416
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                361,
                                                293,
                                                416
                                            ],
                                            "type": "text",
                                            "content": "[49] A. Prat-P√©rez, D. Dominguez-Sal, J. M. Brunat, and J.-L. Larriba-Pey. Shaping communities out of triangles. In Proceedings of the 21st ACM international conference on Information and knowledge management, pages 1677-1681, 2012."
                                        }
                                    ]
                                }
                            ],
                            "index": 7
                        },
                        {
                            "bbox": [
                                52,
                                418,
                                293,
                                462
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        418,
                                        293,
                                        462
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                418,
                                                293,
                                                462
                                            ],
                                            "type": "text",
                                            "content": "[50] S. Qiao, Y. Ou, N. Zhang, X. Chen, Y. Yao, S. Deng, C. Tan, F. Huang, and H. Chen. Reasoning with language model prompting: A survey. arXiv preprint arXiv:2212.09597, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 8
                        },
                        {
                            "bbox": [
                                52,
                                465,
                                293,
                                499
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        465,
                                        293,
                                        499
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                465,
                                                293,
                                                499
                                            ],
                                            "type": "text",
                                            "content": "[51] A. Radford, K. Narasimhan, T. Salimans, and I. Sutskever. Improving language understanding by generative pre-training, 2018."
                                        }
                                    ]
                                }
                            ],
                            "index": 9
                        },
                        {
                            "bbox": [
                                52,
                                502,
                                293,
                                536
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        502,
                                        293,
                                        536
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                502,
                                                293,
                                                536
                                            ],
                                            "type": "text",
                                            "content": "[52] A. Radford, J. Wu, R. Child, D. Luan, D. Amodei, I. Sutskever, et al. Language models are unsupervised multitask learners. OpenAI blog, 1(8):9, 2019."
                                        }
                                    ]
                                }
                            ],
                            "index": 10
                        },
                        {
                            "bbox": [
                                52,
                                537,
                                293,
                                559
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        537,
                                        293,
                                        559
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                537,
                                                293,
                                                559
                                            ],
                                            "type": "text",
                                            "content": "[53] I. Robinson, J. Webber, and E. Eifrem. Graph databases. \"O'Reilly Media, Inc.\", 2013."
                                        }
                                    ]
                                }
                            ],
                            "index": 11
                        },
                        {
                            "bbox": [
                                52,
                                563,
                                293,
                                596
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        563,
                                        293,
                                        596
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                563,
                                                293,
                                                596
                                            ],
                                            "type": "text",
                                            "content": "[54] I. Robinson, J. Webber, and E. Eifrem. Graph databases: new opportunities for connected data. O'Reilly Media, Inc.\", 2015."
                                        }
                                    ]
                                }
                            ],
                            "index": 12
                        },
                        {
                            "bbox": [
                                52,
                                598,
                                293,
                                632
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        598,
                                        293,
                                        632
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                598,
                                                293,
                                                632
                                            ],
                                            "type": "text",
                                            "content": "[55] S. Sakr et al. The future is big graphs! a community view on graph processing systems. arXiv preprint arXiv:2012.06171, 2020."
                                        }
                                    ]
                                }
                            ],
                            "index": 13
                        },
                        {
                            "bbox": [
                                52,
                                635,
                                293,
                                678
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        635,
                                        293,
                                        678
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                635,
                                                293,
                                                678
                                            ],
                                            "type": "text",
                                            "content": "[56] F. Scarselli, M. Gori, A. C. Tsoi, M. Hagenbuchner, and G. Monfardini. The graph neural network model. IEEE transactions on neural networks, 20(1):61-80, 2008."
                                        }
                                    ]
                                }
                            ],
                            "index": 14
                        },
                        {
                            "bbox": [
                                52,
                                681,
                                293,
                                704
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        52,
                                        681,
                                        293,
                                        704
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                52,
                                                681,
                                                293,
                                                704
                                            ],
                                            "type": "text",
                                            "content": "[57] S. E. Schaeffer. Graph clustering. Computer science review, 1(1):27-64, 2007."
                                        }
                                    ]
                                }
                            ],
                            "index": 15
                        }
                    ],
                    "sub_type": "ref_text"
                },
                {
                    "bbox": [
                        318,
                        54,
                        559,
                        704
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 31,
                    "blocks": [
                        {
                            "bbox": [
                                318,
                                54,
                                558,
                                99
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        54,
                                        558,
                                        99
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                54,
                                                558,
                                                99
                                            ],
                                            "type": "text",
                                            "content": "[58] T. Shin, Y. Razeghi, R. L. Logan IV, E. Wallace, and S. Singh. Autoprompt: Eliciting knowledge from language models with automatically generated prompts. arXiv preprint arXiv:2010.15980, 2020."
                                        }
                                    ]
                                }
                            ],
                            "index": 17
                        },
                        {
                            "bbox": [
                                318,
                                101,
                                558,
                                134
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        101,
                                        558,
                                        134
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                101,
                                                558,
                                                134
                                            ],
                                            "type": "text",
                                            "content": "[59] N. Shinn, B. Labash, and A. Gopinath. Reflection: an autonomous agent with dynamic memory and self-reflection. arXiv preprint arXiv:2303.11366, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 18
                        },
                        {
                            "bbox": [
                                318,
                                137,
                                558,
                                180
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        137,
                                        558,
                                        180
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                137,
                                                558,
                                                180
                                            ],
                                            "type": "text",
                                            "content": "[60] K. Shum, S. Diao, and T. Zhang. Automatic prompt augmentation and selection with chain-of-thought from labeled data. arXiv preprint arXiv:2302.12822, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 19
                        },
                        {
                            "bbox": [
                                318,
                                183,
                                559,
                                239
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        183,
                                        559,
                                        239
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                183,
                                                559,
                                                239
                                            ],
                                            "type": "text",
                                            "content": "[61] C. H. Teixeira, A. J. Fonseca, M. Serafini, G. Siganos, M. J. Zaki, and A. Aboulnaga. Arabesque: a system for distributed graph mining. In Proceedings of the 25th Symposium on Operating Systems Principles, pages 425-440. ACM, 2015."
                                        }
                                    ]
                                }
                            ],
                            "index": 20
                        },
                        {
                            "bbox": [
                                318,
                                240,
                                558,
                                295
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        240,
                                        558,
                                        295
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                240,
                                                558,
                                                295
                                            ],
                                            "type": "text",
                                            "content": "[62] H. Touvron, T. Lavril, G. Izacard, X. Martinet, M.-A. Lachaux, T. Lacroix, B. Rozi√®re, N. Goyal, E. Hambro, F. Azhar, et al. Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 21
                        },
                        {
                            "bbox": [
                                318,
                                298,
                                558,
                                352
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        298,
                                        558,
                                        352
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                298,
                                                558,
                                                352
                                            ],
                                            "type": "text",
                                            "content": "[63] H. Touvron, L. Martin, K. Stone, P. Albert, A. Alma-hairi, Y. Babaei, N. Bashlykov, S. Batra, P. Bhargava, S. Bhosale, et al. Llama 2: Open foundation and finetuned chat models. arXiv preprint arXiv:2307.09288, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 22
                        },
                        {
                            "bbox": [
                                318,
                                355,
                                558,
                                388
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        355,
                                        558,
                                        388
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                355,
                                                558,
                                                388
                                            ],
                                            "type": "text",
                                            "content": "[64] A. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez, L. Kaiser, and I. Polosukhin. Attention is all you need. In NeurIPS, 2017."
                                        }
                                    ]
                                }
                            ],
                            "index": 23
                        },
                        {
                            "bbox": [
                                318,
                                391,
                                558,
                                445
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        391,
                                        558,
                                        445
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                391,
                                                558,
                                                445
                                            ],
                                            "type": "text",
                                            "content": "[65] L. Wang, W. Xu, Y. Lan, Z. Hu, Y. Lan, R. K.-W. Lee, and E.-P. Lim. Plan-and-solve prompting: Improving zero-shot chain-of-thought reasoning by large language models. arXiv preprint arXiv:2305.04091, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 24
                        },
                        {
                            "bbox": [
                                318,
                                449,
                                558,
                                492
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        449,
                                        558,
                                        492
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                449,
                                                558,
                                                492
                                            ],
                                            "type": "text",
                                            "content": "[66] X. Wang, J. Wei, D. Schuurmans, Q. Le, E. Chi, and D. Zhou. Self-consistency improves chain of thought reasoning in language models. arXiv preprint arXiv:2203.11171, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 25
                        },
                        {
                            "bbox": [
                                318,
                                495,
                                558,
                                540
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        495,
                                        558,
                                        540
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                495,
                                                558,
                                                540
                                            ],
                                            "type": "text",
                                            "content": "[67] Z. Wang, S. Cai, A. Liu, X. Ma, and Y. Liang. Describe, explain, plan and select: Interactive planning with large language models enables open-world multitask agents. arXiv preprint arXiv:2302.01560, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 26
                        },
                        {
                            "bbox": [
                                318,
                                542,
                                558,
                                586
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        542,
                                        558,
                                        586
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                542,
                                                558,
                                                586
                                            ],
                                            "type": "text",
                                            "content": "[68] Z. Wang, G. Zhang, K. Yang, N. Shi, W. Zhou, S. Hao, G. Xiong, Y. Li, M. Y. Sim, X. Chen, et al. Interactive natural language processing. arXiv preprint arXiv:2305.13246, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 27
                        },
                        {
                            "bbox": [
                                318,
                                589,
                                558,
                                622
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        589,
                                        558,
                                        622
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                589,
                                                558,
                                                622
                                            ],
                                            "type": "text",
                                            "content": "[69] Z. J. Wang, D. Choi, S. Xu, and D. Yang. Putting humans in the natural language processing loop: A survey. arXiv preprint arXiv:2103.04044, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 28
                        },
                        {
                            "bbox": [
                                318,
                                624,
                                558,
                                668
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        624,
                                        558,
                                        668
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                624,
                                                558,
                                                668
                                            ],
                                            "type": "text",
                                            "content": "[70] J. Wei, X. Wang, D. Schuurmans, M. Bosma, E. Chi, Q. Le, and D. Zhou. Chain of thought prompting elicits reasoning in large language models. arXiv preprint arXiv:2201.11903, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 29
                        },
                        {
                            "bbox": [
                                318,
                                670,
                                558,
                                704
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        318,
                                        670,
                                        558,
                                        704
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                318,
                                                670,
                                                558,
                                                704
                                            ],
                                            "type": "text",
                                            "content": "[71] T. Wu, E. Jiang, A. Donsbach, J. Gray, A. Molina, M. Terry, and C. J. Cai. Promptchainer: Chaining large language model prompts through visual programming."
                                        }
                                    ]
                                }
                            ],
                            "index": 30
                        }
                    ],
                    "sub_type": "ref_text"
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 11
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        53,
                        54,
                        293,
                        589
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 13,
                    "blocks": [
                        {
                            "bbox": [
                                72,
                                54,
                                292,
                                77
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        72,
                                        54,
                                        292,
                                        77
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                72,
                                                54,
                                                292,
                                                77
                                            ],
                                            "type": "text",
                                            "content": "In CHI Conference on Human Factors in Computing Systems Extended Abstracts, pages 1-10, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 0
                        },
                        {
                            "bbox": [
                                53,
                                79,
                                293,
                                134
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        79,
                                        293,
                                        134
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                79,
                                                293,
                                                134
                                            ],
                                            "type": "text",
                                            "content": "[72] T. Wu, M. Terry, and C. J. Cai. AI chains: Transparent and controllable human-AI interaction by chaining large language model prompts. In Proceedings of the 2022 CHI Conference on Human Factors in Computing Systems, pages 1-22, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 1
                        },
                        {
                            "bbox": [
                                53,
                                136,
                                293,
                                170
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        136,
                                        293,
                                        170
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                136,
                                                293,
                                                170
                                            ],
                                            "type": "text",
                                            "content": "[73] Z. Wu et al. A comprehensive survey on graph neural networks. IEEE Transactions on Neural Networks and Learning Systems, 2020."
                                        }
                                    ]
                                }
                            ],
                            "index": 2
                        },
                        {
                            "bbox": [
                                53,
                                171,
                                293,
                                216
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        171,
                                        293,
                                        216
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                171,
                                                293,
                                                216
                                            ],
                                            "type": "text",
                                            "content": "[74] Y. Xie, K. Kawaguchi, Y. Zhao, X. Zhao, M.-Y. Kan, J. He, and Q. Xie. Decomposition enhances reasoning via self-evaluation guided decoding. arXiv preprint arXiv:2305.00633, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 3
                        },
                        {
                            "bbox": [
                                53,
                                217,
                                293,
                                262
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        217,
                                        293,
                                        262
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                217,
                                                293,
                                                262
                                            ],
                                            "type": "text",
                                            "content": "[75] S. Yang, O. Nachum, Y. Du, J. Wei, P. Abbeel, and D. Schuurmans. Foundation models for decision making: Problems, methods, and opportunities. arXiv preprint arXiv:2303.04129, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 4
                        },
                        {
                            "bbox": [
                                53,
                                264,
                                293,
                                308
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        264,
                                        293,
                                        308
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                264,
                                                293,
                                                308
                                            ],
                                            "type": "text",
                                            "content": "[76] S. Yao, D. Yu, J. Zhao, I. Shafran, T. L. Griffiths, Y. Cao, and K. Narasimhan. Tree of thoughts: Deliberate problem solving with large language models. arXiv preprint arXiv:2305.10601, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 5
                        },
                        {
                            "bbox": [
                                53,
                                310,
                                293,
                                354
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        310,
                                        293,
                                        354
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                310,
                                                293,
                                                354
                                            ],
                                            "type": "text",
                                            "content": "[77] S. Yao, J. Zhao, D. Yu, N. Du, I. Shafran, K. Narasimhan, and Y. Cao. React: Synergizing reasoning and acting in language models. arXiv preprint arXiv:2210.03629, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 6
                        },
                        {
                            "bbox": [
                                53,
                                357,
                                293,
                                390
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        357,
                                        293,
                                        390
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                357,
                                                293,
                                                390
                                            ],
                                            "type": "text",
                                            "content": "[78] Y. Yao, Z. Li, and H. Zhao. Beyond chain-of-thought, effective graph-of-thought reasoning in large language models. arXiv preprint arXiv:2305.16582, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 7
                        },
                        {
                            "bbox": [
                                53,
                                392,
                                293,
                                436
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        392,
                                        293,
                                        436
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                392,
                                                293,
                                                436
                                            ],
                                            "type": "text",
                                            "content": "[79] E. Zelikman, Y. Wu, J. Mu, and N. Goodman. Star: Bootstrapping reasoning with reasoning. Advances in Neural Information Processing Systems, 35:15476-15488, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 8
                        },
                        {
                            "bbox": [
                                53,
                                438,
                                293,
                                482
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        438,
                                        293,
                                        482
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                438,
                                                293,
                                                482
                                            ],
                                            "type": "text",
                                            "content": "[80] S. Zhang, Z. Chen, Y. Shen, M. Ding, J. B. Tenenbaum, and C. Gan. Planning with large language models for code generation. arXiv preprint arXiv:2303.05510, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 9
                        },
                        {
                            "bbox": [
                                53,
                                484,
                                293,
                                518
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        484,
                                        293,
                                        518
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                484,
                                                293,
                                                518
                                            ],
                                            "type": "text",
                                            "content": "[81] Z. Zhang, P. Cui, and W. Zhu. Deep learning on graphs: A survey. IEEE Transactions on Knowledge and Data Engineering, 2020."
                                        }
                                    ]
                                }
                            ],
                            "index": 10
                        },
                        {
                            "bbox": [
                                53,
                                520,
                                293,
                                543
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        520,
                                        293,
                                        543
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                520,
                                                293,
                                                543
                                            ],
                                            "type": "text",
                                            "content": "[82] J. Zhou et al. Graph neural networks: A review of methods and applications. AI Open, 1:57-81, 2020."
                                        }
                                    ]
                                }
                            ],
                            "index": 11
                        },
                        {
                            "bbox": [
                                53,
                                544,
                                293,
                                589
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        53,
                                        544,
                                        293,
                                        589
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                53,
                                                544,
                                                293,
                                                589
                                            ],
                                            "type": "text",
                                            "content": "[83] Y. Zhou, A. I. Muresanu, Z. Han, K. Paster, S. Pitis, H. Chan, and J. Ba. Large language models are human-level prompt engineers. arXiv preprint arXiv:2211.01910, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 12
                        }
                    ],
                    "sub_type": "ref_text"
                },
                {
                    "bbox": [
                        361,
                        53,
                        515,
                        65
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                361,
                                53,
                                515,
                                65
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        361,
                                        53,
                                        515,
                                        65
                                    ],
                                    "type": "text",
                                    "content": "A Positive Score Evaluation"
                                }
                            ]
                        }
                    ],
                    "index": 14
                },
                {
                    "bbox": [
                        317,
                        68,
                        559,
                        102
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                317,
                                68,
                                559,
                                102
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        317,
                                        68,
                                        559,
                                        102
                                    ],
                                    "type": "text",
                                    "content": "The following figures plot the same data as Figures 5 and 6 respectively, however use the \"positive score\" described in Sections 5.1 and 5.2."
                                }
                            ]
                        }
                    ],
                    "index": 15
                },
                {
                    "type": "image",
                    "bbox": [
                        320,
                        109,
                        555,
                        228
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                320,
                                109,
                                555,
                                228
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        320,
                                        109,
                                        555,
                                        228
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                320,
                                                109,
                                                555,
                                                228
                                            ],
                                            "type": "image",
                                            "image_path": "447753d757d1746c3199aad5ecfc2ff3e6c2a90b467f25f10e93814f26b66739.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 16,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                317,
                                234,
                                558,
                                268
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        317,
                                        234,
                                        558,
                                        268
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                317,
                                                234,
                                                558,
                                                268
                                            ],
                                            "type": "text",
                                            "content": "Figure 9: Accuracy and cost in sorting tasks with ChatGPT-3.5. "
                                        },
                                        {
                                            "bbox": [
                                                317,
                                                234,
                                                558,
                                                268
                                            ],
                                            "type": "inline_equation",
                                            "content": "L"
                                        },
                                        {
                                            "bbox": [
                                                317,
                                                234,
                                                558,
                                                268
                                            ],
                                            "type": "text",
                                            "content": " and "
                                        },
                                        {
                                            "bbox": [
                                                317,
                                                234,
                                                558,
                                                268
                                            ],
                                            "type": "inline_equation",
                                            "content": "k"
                                        },
                                        {
                                            "bbox": [
                                                317,
                                                234,
                                                558,
                                                268
                                            ],
                                            "type": "text",
                                            "content": " indicate the structure of ToT (see Sections 3.2 and 6)."
                                        }
                                    ]
                                }
                            ],
                            "index": 17,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 16
                },
                {
                    "type": "image",
                    "bbox": [
                        320,
                        290,
                        555,
                        409
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                320,
                                290,
                                555,
                                409
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        320,
                                        290,
                                        555,
                                        409
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                320,
                                                290,
                                                555,
                                                409
                                            ],
                                            "type": "image",
                                            "image_path": "08c8fc98c24ce45345122b7bb73f07e0c8901ad96fb74e949168bda972bf0d95.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 18,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                317,
                                415,
                                558,
                                449
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        317,
                                        415,
                                        558,
                                        449
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                317,
                                                415,
                                                558,
                                                449
                                            ],
                                            "type": "text",
                                            "content": "Figure 10: Accuracy and cost in set intersection with ChatGPT-3.5. "
                                        },
                                        {
                                            "bbox": [
                                                317,
                                                415,
                                                558,
                                                449
                                            ],
                                            "type": "inline_equation",
                                            "content": "L"
                                        },
                                        {
                                            "bbox": [
                                                317,
                                                415,
                                                558,
                                                449
                                            ],
                                            "type": "text",
                                            "content": " and "
                                        },
                                        {
                                            "bbox": [
                                                317,
                                                415,
                                                558,
                                                449
                                            ],
                                            "type": "inline_equation",
                                            "content": "k"
                                        },
                                        {
                                            "bbox": [
                                                317,
                                                415,
                                                558,
                                                449
                                            ],
                                            "type": "text",
                                            "content": " indicate the structure of ToT (see Sections 3.2 and 6)."
                                        }
                                    ]
                                }
                            ],
                            "index": 19,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 18
                }
            ],
            "discarded_blocks": [],
            "page_size": [
                612,
                792
            ],
            "page_idx": 12
        }
    ],
    "_backend": "vlm",
    "_version_name": "2.5.4"
}