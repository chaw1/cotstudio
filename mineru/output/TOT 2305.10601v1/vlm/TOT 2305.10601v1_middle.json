{
    "pdf_info": [
        {
            "para_blocks": [
                {
                    "bbox": [
                        134,
                        97,
                        477,
                        138
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                134,
                                97,
                                477,
                                138
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        134,
                                        97,
                                        477,
                                        138
                                    ],
                                    "type": "text",
                                    "content": "Tree of Thoughts: Deliberate Problem Solving with Large Language Models"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        135,
                        178,
                        190,
                        201
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                135,
                                178,
                                190,
                                201
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        135,
                                        178,
                                        190,
                                        201
                                    ],
                                    "type": "text",
                                    "content": "Shunyu Yao  \nCenceton University"
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        223,
                        178,
                        301,
                        202
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                223,
                                178,
                                301,
                                202
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        223,
                                        178,
                                        301,
                                        202
                                    ],
                                    "type": "text",
                                    "content": "Dian Yu Google DeepMind"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        318,
                        178,
                        395,
                        202
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                318,
                                178,
                                395,
                                202
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        318,
                                        178,
                                        395,
                                        202
                                    ],
                                    "type": "text",
                                    "content": "Jeffrey Zhao Google DeepMind"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        413,
                        178,
                        490,
                        202
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                413,
                                178,
                                490,
                                202
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        413,
                                        178,
                                        490,
                                        202
                                    ],
                                    "type": "text",
                                    "content": "Izhak Shafran Google DeepMind"
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        140,
                        218,
                        227,
                        241
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                140,
                                218,
                                227,
                                241
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        140,
                                        218,
                                        227,
                                        241
                                    ],
                                    "type": "text",
                                    "content": "Thomas L. Griffiths  \nPrinceton University"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        264,
                        218,
                        342,
                        241
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                264,
                                218,
                                342,
                                241
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        264,
                                        218,
                                        342,
                                        241
                                    ],
                                    "type": "text",
                                    "content": "Yuan Cao Google DeepMind"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        379,
                        218,
                        471,
                        241
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                379,
                                218,
                                471,
                                241
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        379,
                                        218,
                                        471,
                                        241
                                    ],
                                    "type": "text",
                                    "content": "Karthik Narasimhan  \nPrinceton University"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        281,
                        269,
                        329,
                        282
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                281,
                                269,
                                329,
                                282
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        281,
                                        269,
                                        329,
                                        282
                                    ],
                                    "type": "text",
                                    "content": "Abstract"
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        140,
                        295,
                        470,
                        483
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                140,
                                295,
                                470,
                                483
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        140,
                                        295,
                                        470,
                                        483
                                    ],
                                    "type": "text",
                                    "content": "Language models are increasingly being deployed for general problem solving across a wide range of tasks, but are still confined to token-level, left-to-right decision-making processes during inference. This means they can fall short in tasks that require exploration, strategic lookahead, or where initial decisions play a pivotal role. To surmount these challenges, we introduce a new framework for language model inference, \"Tree of Thoughts\" (ToT), which generalizes over the popular \"Chain of Thought\" approach to prompting language models, and enables exploration over coherent units of text (\"thoughts\") that serve as intermediate steps toward problem solving. ToT allows LMs to perform deliberate decision making by considering multiple different reasoning paths and self-evaluating choices to decide the next course of action, as well as looking ahead or backtracking when necessary to make global choices. Our experiments show that ToT significantly enhances language models' problem-solving abilities on three novel tasks requiring non-trivial planning or search: Game of 24, Creative Writing, and Mini Crosswords. For instance, in Game of 24, while GPT-4 with chain-of-thought prompting only solved "
                                },
                                {
                                    "bbox": [
                                        140,
                                        295,
                                        470,
                                        483
                                    ],
                                    "type": "inline_equation",
                                    "content": "4\\%"
                                },
                                {
                                    "bbox": [
                                        140,
                                        295,
                                        470,
                                        483
                                    ],
                                    "type": "text",
                                    "content": " of tasks, our method achieved a success rate of "
                                },
                                {
                                    "bbox": [
                                        140,
                                        295,
                                        470,
                                        483
                                    ],
                                    "type": "inline_equation",
                                    "content": "74\\%"
                                },
                                {
                                    "bbox": [
                                        140,
                                        295,
                                        470,
                                        483
                                    ],
                                    "type": "text",
                                    "content": ". Code repo with all prompts: https://github.com/ysymyth/tree-of-thought-11m."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        105,
                        505,
                        192,
                        517
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                505,
                                192,
                                517
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        505,
                                        192,
                                        517
                                    ],
                                    "type": "text",
                                    "content": "1 Introduction"
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        104,
                        531,
                        506,
                        609
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                531,
                                506,
                                609
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        531,
                                        506,
                                        609
                                    ],
                                    "type": "text",
                                    "content": "Originally designed to generate text, scaled-up versions of language models (LMs) such as GPT [22, 23, 1, 20] and PaLM [5] have been shown to be increasingly capable of performing an ever wider range of tasks requiring mathematical, symbolic, commonsense, and knowledge reasoning. It is perhaps surprising that underlying all this progress is still the original autoregressive mechanism for generating text, which makes token-level decisions one by one and in a left-to-right fashion. Is such a simple mechanism sufficient for a LM to be built toward a general problem solver? If not, what problems would challenge the current paradigm, and what should be alternative mechanisms?"
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        104,
                        613,
                        506,
                        713
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                613,
                                506,
                                713
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        613,
                                        506,
                                        713
                                    ],
                                    "type": "text",
                                    "content": "The literature on human cognition provides some clues to answer these questions. Research on \"dual process\" models suggests that people have two modes in which they engage with decisions – a fast, automatic, unconscious mode (\"System 1\") and a slow, deliberate, conscious mode (\"System 2\") [27, 28, 13, 12]. These two modes have previously been connected to a variety of mathematical models used in machine learning. For example, research on reinforcement learning in humans and other animals has explored the circumstances under which they engage in associative \"model free\" learning or more deliberative \"model based\" planning [6]. The simple associative token-level choices of LMs are also reminiscent of \"System 1\", and thus might benefit from augmentation by a more deliberate \"System 2\" planning process that (1) maintains and explores diverse alternatives for current"
                                }
                            ]
                        }
                    ],
                    "index": 12
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        14,
                        205,
                        37,
                        560
                    ],
                    "type": "aside_text",
                    "angle": 270,
                    "lines": [
                        {
                            "bbox": [
                                14,
                                205,
                                37,
                                560
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        14,
                                        205,
                                        37,
                                        560
                                    ],
                                    "type": "text",
                                    "content": "arXiv:2305.10601v1 [cs.CL] 17 May 2023"
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "bbox": [
                        105,
                        731,
                        193,
                        742
                    ],
                    "type": "footer",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                731,
                                193,
                                742
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        731,
                                        193,
                                        742
                                    ],
                                    "type": "text",
                                    "content": "Preprint. Under review."
                                }
                            ]
                        }
                    ],
                    "index": 14
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 0
        },
        {
            "para_blocks": [
                {
                    "type": "image",
                    "bbox": [
                        147,
                        73,
                        465,
                        228
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                147,
                                73,
                                465,
                                228
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        147,
                                        73,
                                        465,
                                        228
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                147,
                                                73,
                                                465,
                                                228
                                            ],
                                            "type": "image",
                                            "image_path": "8bb89f52c915c7a7c6ef51c22c4a626cb432bee287ff46ae51755ed243b14b64.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                104,
                                236,
                                504,
                                281
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        104,
                                        236,
                                        504,
                                        281
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                104,
                                                236,
                                                504,
                                                281
                                            ],
                                            "type": "text",
                                            "content": "Figure 1: Schematic illustrating various approaches to problem solving with LLMs. Each rectangle box represents a thought, which is a coherent language sequence that serves as an intermediate step toward problem solving. See concrete examples of how thoughts are generated, evaluated, and searched in Figures 2,4,6."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        104,
                        287,
                        504,
                        310
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                287,
                                504,
                                310
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        287,
                                        504,
                                        310
                                    ],
                                    "type": "text",
                                    "content": "choices instead of just picking one, and (2) evaluates its current status and actively looks ahead or backtracks to make more global decisions."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        104,
                        315,
                        506,
                        479
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                315,
                                506,
                                479
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        315,
                                        506,
                                        479
                                    ],
                                    "type": "text",
                                    "content": "To design such a planning process, we return to the origins of artificial intelligence (and cognitive science), drawing inspiration from the planning processes explored by Newell, Shaw, and Simon starting in the 1950s [18, 19]. Newell and colleagues characterized problem solving [18] as search through a combinatorial problem space, represented as a tree. We thus propose the Tree of Thoughts (ToT) framework for general problem solving with language models. As Figure 1 illustrates, while existing methods (detailed below) sample continuous language sequences for problem solving, ToT actively maintains a tree of thoughts, where each thought is a coherent language sequence that serves as an intermediate step toward problem solving (Table 1). Such a high-level semantic unit allows the LM to self-evaluate the progress different intermediate thoughts make towards solving the problem through a deliberate reasoning process that is also instantiated in language (Figures 2,4,6). This implementation of search heuristics via LM self-evaluation and deliberation is novel, as previous search heuristics are either programmed or learned. Finally, we combine this language-based capability to generate and evaluate diverse thoughts with search algorithms, such as breadth-first search (BFS) or depth-first search (DFS), which allow systematic exploration of the tree of thoughts with lookahead and backtracking."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        483,
                        504,
                        571
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                483,
                                504,
                                571
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        483,
                                        504,
                                        571
                                    ],
                                    "type": "text",
                                    "content": "Empirically, we propose three new problems that challenge existing LM inference methods even with the state-of-the-art language model, GPT-4 [20]: Game of 24, Creative Writing, and Crosswords (Table 1). These tasks require deductive, mathematical, commonsense, lexical reasoning abilities, and a way to incorporate systematic planning or search. We show ToT obtains superior results on all three tasks by being general and flexible enough to support different levels of thoughts, different ways to generate and evaluate thoughts, and different search algorithms that adapt to the nature of different problems. We also analyze how such choices affect model performances via systematic ablations and discuss future directions to better train and use LMs."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        105,
                        589,
                        189,
                        602
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                589,
                                189,
                                602
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        589,
                                        189,
                                        602
                                    ],
                                    "type": "text",
                                    "content": "2 Background"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        614,
                        504,
                        670
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                614,
                                504,
                                670
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "text",
                                    "content": "We first formalize some existing methods that use large language models for problem-solving, which our approach is inspired by and later compared with. We use "
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{\\theta}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "text",
                                    "content": " to denote a pre-trained LM with parameters "
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\theta"
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "text",
                                    "content": ", and lowercase letters "
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "inline_equation",
                                    "content": "x, y, z, s, \\dots"
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "text",
                                    "content": " to denote a language sequence, i.e. "
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "inline_equation",
                                    "content": "x = (x[1], \\dots, x[n])"
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "text",
                                    "content": " where each "
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "inline_equation",
                                    "content": "x[i]"
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "text",
                                    "content": " is a token, so that "
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{\\theta}(x) = \\prod_{i=1}^{n} p_{\\theta}(x[i] | x[1 \\dots i])"
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "text",
                                    "content": ". We use uppercase letters "
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "inline_equation",
                                    "content": "S, \\dots"
                                },
                                {
                                    "bbox": [
                                        104,
                                        614,
                                        504,
                                        670
                                    ],
                                    "type": "text",
                                    "content": " to denote a collection of language sequences."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        104,
                        674,
                        506,
                        723
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                674,
                                506,
                                723
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": "Input-output (IO) prompting is the most common way to turn a problem input "
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": " into output "
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "inline_equation",
                                    "content": "y"
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": " with LM: "
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "inline_equation",
                                    "content": "y \\sim p_{\\theta}(y|\\mathrm{prompt}_{IO}(x))"
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": ", where "
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\mathrm{prompt}_{IO}(x)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": " wraps input "
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": " with task instructions and/or few-shot input-output examples. For simplicity, let us denote "
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "inline_equation",
                                    "content": "p_{\\theta}^{\\mathrm{prompt}}(\\mathrm{output} \\mid \\mathrm{input}) = p_{\\theta}(\\mathrm{output} \\mid \\mathrm{prompt}(\\mathrm{input}))"
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": ", so that IO prompting can be formulated as "
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "inline_equation",
                                    "content": "y \\sim p_{\\theta}^{IO}(y|x)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        674,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 7
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        302,
                        741,
                        308,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                302,
                                741,
                                308,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        302,
                                        741,
                                        308,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "2"
                                }
                            ]
                        }
                    ],
                    "index": 8
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 1
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        72,
                        506,
                        162
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                72,
                                506,
                                162
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": "Chain-of-thought (CoT) prompting [35] was proposed to address cases where the mapping of input "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " to output "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "y"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " is non-trivial (e.g. when "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " is a math question and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "y"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " is the final numerical answer). The key idea is to introduce a chain of thoughts "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "z_{1}, \\dots, z_{n}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " to bridge "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "x"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "y"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": ", where each "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "z_{i}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " is a coherent language sequence that serves as a meaningful intermediate step toward problem solving (e.g. "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "z_{i}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " could be an intermediate equation for math QA). To solve problems with CoT, each thought "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "z_{i} \\sim p_{\\theta}^{CoT}(z_{i} \\mid x, z_{1\\dots i-1})"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " is sampled sequentially, then the output "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "y \\sim p_{\\theta}^{CoT}(y|x, z_{1\\dots n})"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": ". In practice, "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "[z_{1\\dots n}, y] \\sim p_{\\theta}^{CoT}(z_{1\\dots n}, y|x)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " is sampled as a continuous language sequence, and the decomposition of thoughts (e.g. is each "
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "inline_equation",
                                    "content": "z_{i}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        162
                                    ],
                                    "type": "text",
                                    "content": " a phrase, a sentence, or a paragraph) is left ambiguous."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        104,
                        166,
                        506,
                        248
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                166,
                                506,
                                248
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        166,
                                        506,
                                        248
                                    ],
                                    "type": "text",
                                    "content": "Self-consistency with CoT (CoT-SC) [33] is an ensemble approach that samples "
                                },
                                {
                                    "bbox": [
                                        104,
                                        166,
                                        506,
                                        248
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        166,
                                        506,
                                        248
                                    ],
                                    "type": "text",
                                    "content": " i.i.d. chains of thought: "
                                },
                                {
                                    "bbox": [
                                        104,
                                        166,
                                        506,
                                        248
                                    ],
                                    "type": "inline_equation",
                                    "content": "[z_{1\\dots n}^{(i)},y^{(i)}]\\sim p_{\\theta}^{CoT}(z_{1\\dots n},y|x)(i = 1\\dots k)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        166,
                                        506,
                                        248
                                    ],
                                    "type": "text",
                                    "content": ", then returns the most frequent output: "
                                },
                                {
                                    "bbox": [
                                        104,
                                        166,
                                        506,
                                        248
                                    ],
                                    "type": "inline_equation",
                                    "content": "\\arg \\max_y\\# \\{i\\mid y^{(i)} = y\\}"
                                },
                                {
                                    "bbox": [
                                        104,
                                        166,
                                        506,
                                        248
                                    ],
                                    "type": "text",
                                    "content": ". CoT-SC improves upon CoT, because there are generally different thought processes for the same problem (e.g. different ways to prove the same theorem), and the output decision can be more faithful by exploring a richer set of thoughts. However, within each chain there is no local exploration of different thought steps, and the \"most frequent\" heuristic only applies when the output space is limited (e.g. multi-choice QA)."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        104,
                        262,
                        411,
                        277
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                262,
                                411,
                                277
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        262,
                                        411,
                                        277
                                    ],
                                    "type": "text",
                                    "content": "3 Tree of Thoughts: Deliberate Problem Solving with LM"
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        140,
                        284,
                        470,
                        317
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                140,
                                284,
                                470,
                                317
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        140,
                                        284,
                                        470,
                                        317
                                    ],
                                    "type": "text",
                                    "content": "A genuine problem-solving process involves the repeated use of available information to initiate exploration, which discloses, in turn, more information until a way to attain the solution is finally discovered. — Newell et al. [18]"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        321,
                        506,
                        410
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                321,
                                506,
                                410
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        321,
                                        506,
                                        410
                                    ],
                                    "type": "text",
                                    "content": "Research on human problem-solving suggests that people search through a combinatorial problem-space – a tree where the nodes represent partial solutions, and the branches correspond to operators that modify them [18, 19]. Which branch to take is determined by heuristics that help to navigate the problem-space and guide the problem-solver towards a solution. This perspective highlights two key shortcomings of existing approaches that use LMs to solve general problems: 1) Locally, they do not explore different continuations within a thought process – the branches of the tree. 2) Globally, they do not incorporate any type of planning, lookahead, or backtracking to help evaluate these different options – the kind of heuristic-guided search that seems characteristic of human problem-solving."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        104,
                        414,
                        506,
                        480
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                414,
                                506,
                                480
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        414,
                                        506,
                                        480
                                    ],
                                    "type": "text",
                                    "content": "To address these shortcomings, we introduce Tree of Thoughts (ToT), a paradigm that allows LMs to explore multiple reasoning paths over thoughts (Figure 1(c)). ToT frames any problem as a search over a tree, where each node is a state "
                                },
                                {
                                    "bbox": [
                                        104,
                                        414,
                                        506,
                                        480
                                    ],
                                    "type": "inline_equation",
                                    "content": "s = [x, z_1 \\dots i]"
                                },
                                {
                                    "bbox": [
                                        104,
                                        414,
                                        506,
                                        480
                                    ],
                                    "type": "text",
                                    "content": " representing a partial solution with the input and the sequence of thoughts so far. A specific instantiation of ToT involves answering four questions: 1. How to decompose the intermediate process into thought steps; 2. How to generate potential thoughts from each state; 3. How to heuristically evaluate states; 4. What search algorithm to use."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        485,
                        506,
                        562
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                485,
                                506,
                                562
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        485,
                                        506,
                                        562
                                    ],
                                    "type": "text",
                                    "content": "1. Thought decomposition. While CoT samples thoughts coherently without explicit decomposition, ToT leverages problem properties to design and decompose intermediate thought steps. As Table 1 shows, depending on different problems, a thought could be a couple of words (Crosswords), a line of equation (Game of 24), or a whole paragraph of writing plan (Creative Writing). In general, a thought should be \"small\" enough so that LMs can generate promising and diverse samples (e.g. generating a whole book is usually too \"big\" to be coherent), yet \"big\" enough so that LMs can evaluate its prospect toward problem solving (e.g. generating one token is usually too \"small\" to evaluate)."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        104,
                        567,
                        504,
                        590
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                567,
                                504,
                                590
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        567,
                                        504,
                                        590
                                    ],
                                    "type": "text",
                                    "content": "2. Thought generator "
                                },
                                {
                                    "bbox": [
                                        104,
                                        567,
                                        504,
                                        590
                                    ],
                                    "type": "inline_equation",
                                    "content": "G(p_{\\theta}, s, k)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        567,
                                        504,
                                        590
                                    ],
                                    "type": "text",
                                    "content": ". Given a tree state "
                                },
                                {
                                    "bbox": [
                                        104,
                                        567,
                                        504,
                                        590
                                    ],
                                    "type": "inline_equation",
                                    "content": "s = [x, z_{1\\dots i}]"
                                },
                                {
                                    "bbox": [
                                        104,
                                        567,
                                        504,
                                        590
                                    ],
                                    "type": "text",
                                    "content": ", we consider two strategies to generate "
                                },
                                {
                                    "bbox": [
                                        104,
                                        567,
                                        504,
                                        590
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        567,
                                        504,
                                        590
                                    ],
                                    "type": "text",
                                    "content": " candidates for the next thought step:"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        124,
                        592,
                        504,
                        675
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 10,
                    "blocks": [
                        {
                            "bbox": [
                                124,
                                592,
                                504,
                                625
                            ],
                            "type": "text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        124,
                                        592,
                                        504,
                                        625
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                124,
                                                592,
                                                504,
                                                625
                                            ],
                                            "type": "text",
                                            "content": "(a) Sample i.i.d. thoughts from a CoT prompt (Creative Writing, Figure 4): "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                592,
                                                504,
                                                625
                                            ],
                                            "type": "inline_equation",
                                            "content": "z^{(j)} \\sim p_{\\theta}^{CoT}(z_{i+1}|s) = p_{\\theta}^{CoT}(z_{i+1}|x, z_{1\\dots i})"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                592,
                                                504,
                                                625
                                            ],
                                            "type": "text",
                                            "content": " ("
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                592,
                                                504,
                                                625
                                            ],
                                            "type": "inline_equation",
                                            "content": "j = 1\\dots k"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                592,
                                                504,
                                                625
                                            ],
                                            "type": "text",
                                            "content": "). This works better when the thought space is rich (e.g. each thought is a paragraph), and i.i.d. samples lead to diversity;"
                                        }
                                    ]
                                }
                            ],
                            "index": 8
                        },
                        {
                            "bbox": [
                                124,
                                628,
                                504,
                                675
                            ],
                            "type": "text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        124,
                                        628,
                                        504,
                                        675
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                124,
                                                628,
                                                504,
                                                675
                                            ],
                                            "type": "text",
                                            "content": "(b) Propose thoughts sequentially using a \"propose prompt\" (Game of 24, Figure 2; Crosswords, Figure 6): "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                628,
                                                504,
                                                675
                                            ],
                                            "type": "inline_equation",
                                            "content": "[z^{(1)},\\dots ,z^{(k)}]\\sim p_{\\theta}^{propose}(z_{i + 1}^{(1\\dots k)}\\mid s)"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                628,
                                                504,
                                                675
                                            ],
                                            "type": "text",
                                            "content": ". This works better when the thought space is more constrained (e.g. each thought is just a word or a line), so proposing different thoughts in the same context avoids duplication."
                                        }
                                    ]
                                }
                            ],
                            "index": 9
                        }
                    ],
                    "sub_type": "text"
                },
                {
                    "bbox": [
                        104,
                        677,
                        506,
                        723
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                677,
                                506,
                                723
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        677,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": "3. State evaluator "
                                },
                                {
                                    "bbox": [
                                        104,
                                        677,
                                        506,
                                        723
                                    ],
                                    "type": "inline_equation",
                                    "content": "V(p_{\\theta}, S)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        677,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": ". Given a frontier of different states, the state evaluator evaluates the progress they make towards solving the problem, serving as a heuristic for the search algorithm to determine which states to keep exploring and in which order. While heuristics are a standard approach to solving search problems, they are typically either programmed (e.g. DeepBlue [3]) or"
                                }
                            ]
                        }
                    ],
                    "index": 11
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        302,
                        741,
                        309,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                302,
                                741,
                                309,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        302,
                                        741,
                                        309,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "3"
                                }
                            ]
                        }
                    ],
                    "index": 12
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 2
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        72,
                        504,
                        117
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                72,
                                504,
                                117
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        504,
                                        117
                                    ],
                                    "type": "text",
                                    "content": "learned (e.g. AlphaGo [26]). We propose a third alternative, by using the LM to deliberately reason about states. When applicable, such a deliberate heuristic can be more flexible than programmed rules, and more sample-efficient than learned models. Similar to the thought generator, we consider two strategies to evaluate states either independently or together:"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        124,
                        120,
                        505,
                        289
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 3,
                    "blocks": [
                        {
                            "bbox": [
                                124,
                                120,
                                505,
                                220
                            ],
                            "type": "text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        124,
                                        120,
                                        505,
                                        220
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "text",
                                            "content": "(a) Value each state independently: "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "inline_equation",
                                            "content": "V(p_{\\theta}, S)(s) \\sim p_{\\theta}^{value}(v|s) \\forall s \\in S"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "text",
                                            "content": ", where a value prompt reasons about the state "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "inline_equation",
                                            "content": "s"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "text",
                                            "content": " to generate a scalar value "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "inline_equation",
                                            "content": "v"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "text",
                                            "content": " (e.g. 1-10) or a classification (e.g. sure/likely/impossible) that could be heuristically turned into a value. The basis of such evaluative reasoning can vary across problems and thought steps. In this work, we explore evaluation via few lookahead simulations (e.g. quickly confirm that 5, 5, 14 can reach 24 via "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "inline_equation",
                                            "content": "5 + 5 + 14"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                120,
                                                505,
                                                220
                                            ],
                                            "type": "text",
                                            "content": ", or \"hot_1\" can mean \"inn\" via filling \"e\" in \"_-\") plus commonsense (e.g. 1 2 3 are too small to reach 24, or no word can start with \"tzxc\"). While the former might promote \"good\" states, the latter could help eliminate \"bad\" states. Such valuations do not need to be perfect, and only need to be approximately"
                                        }
                                    ]
                                }
                            ],
                            "index": 1
                        },
                        {
                            "bbox": [
                                124,
                                222,
                                504,
                                289
                            ],
                            "type": "text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        124,
                                        222,
                                        504,
                                        289
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                124,
                                                222,
                                                504,
                                                289
                                            ],
                                            "type": "text",
                                            "content": "(b) Vote across states: "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                222,
                                                504,
                                                289
                                            ],
                                            "type": "inline_equation",
                                            "content": "V(p_{\\theta}, S)(s) = \\mathbb{1}[s = s^{*}]"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                222,
                                                504,
                                                289
                                            ],
                                            "type": "text",
                                            "content": ", where a \"good\" state "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                222,
                                                504,
                                                289
                                            ],
                                            "type": "inline_equation",
                                            "content": "s^{*} \\sim p_{\\theta}^{vote}(s^{*} | S)"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                222,
                                                504,
                                                289
                                            ],
                                            "type": "text",
                                            "content": " is voted out based on deliberately comparing different states in "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                222,
                                                504,
                                                289
                                            ],
                                            "type": "inline_equation",
                                            "content": "S"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                222,
                                                504,
                                                289
                                            ],
                                            "type": "text",
                                            "content": " in a vote prompt. When problem success is harder to directly value (e.g. passage coherency), it is natural to to instead compare different partial solutions and vote for the most promising one. This is similar in spirit to a \"step-wise\" self-consistency strategy, i.e. cast \"which state to explore\" as a multi-choice QA, and use LM samples to vote for it."
                                        }
                                    ]
                                }
                            ],
                            "index": 2
                        }
                    ],
                    "sub_type": "text"
                },
                {
                    "bbox": [
                        104,
                        291,
                        504,
                        314
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                291,
                                504,
                                314
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        291,
                                        504,
                                        314
                                    ],
                                    "type": "text",
                                    "content": "For both strategies, we could prompt the LM multiple times to aggregate the value or vote results to trade time/resource/cost for more faithful/robust heuristics."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "type": "table",
                    "bbox": [
                        106,
                        321,
                        503,
                        448
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                106,
                                321,
                                503,
                                448
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        106,
                                        321,
                                        503,
                                        448
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                106,
                                                321,
                                                503,
                                                448
                                            ],
                                            "type": "table",
                                            "html": "<table><tr><td>Algorithm 1 ToT-BFS(x,pθ,G,k,V,T,b)</td><td>Algorithm 2 ToT-DFS(s,t,pθ,G,k,V,T,vth)</td></tr><tr><td>Require: Input x, LM pθ, thought generator G() &amp; size limit k, states evaluator V(), step limit T, breadth limit b. S0←{x} for t=1,...,T do S′t←{[s,z] | s∈St-1,zt∈G(pθ,s,k)} Vt←V(pθ,S′t) St←arg maxS⊂St′,|S|=b ∑s∈S Vt(s) end for return G(pθ, arg maxs∈ST Vt(s),1)</td><td>Require: Current state s, step t, LM pθ, thought generator G() and size limit k, states evaluator V(), step limit T, threshold vth if t&gt;T then record output G(pθ,s,1) end if for s′∈G(pθ,s,k) do ▷ sorted candidates if V(pθ,{s′})(s)&gt;vthres then ▷ pruning DFS(s′,t+1) end if end for</td></tr></table>",
                                            "image_path": "7b57303f69454eba5baf4bd7b3dee12b71ff4db591609e2f85744b9d9a199806.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 5,
                            "angle": 0,
                            "type": "table_body"
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        453,
                        504,
                        487
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                453,
                                504,
                                487
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        453,
                                        504,
                                        487
                                    ],
                                    "type": "text",
                                    "content": "4. Search algorithm. Finally, within the ToT framework, one can plug and play different search algorithms depending on the tree structure. We explore two relatively simple search algorithms and leave more advanced ones (e.g. A* [9], MCTS [2]) for future work:"
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        124,
                        489,
                        504,
                        582
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 9,
                    "blocks": [
                        {
                            "bbox": [
                                124,
                                489,
                                504,
                                522
                            ],
                            "type": "text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        124,
                                        489,
                                        504,
                                        522
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                124,
                                                489,
                                                504,
                                                522
                                            ],
                                            "type": "text",
                                            "content": "(a) Breadth-first search (BFS) (Algorithm 1) maintains a set of the "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                489,
                                                504,
                                                522
                                            ],
                                            "type": "inline_equation",
                                            "content": "b"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                489,
                                                504,
                                                522
                                            ],
                                            "type": "text",
                                            "content": " most promising states per step. This is used for Game of 24 and Creative Writing where the tree depth is limit "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                489,
                                                504,
                                                522
                                            ],
                                            "type": "inline_equation",
                                            "content": "(T \\leq 3)"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                489,
                                                504,
                                                522
                                            ],
                                            "type": "text",
                                            "content": ", and initial thought steps can be evaluated and pruned to a small set "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                489,
                                                504,
                                                522
                                            ],
                                            "type": "inline_equation",
                                            "content": "(b \\leq 5)"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                489,
                                                504,
                                                522
                                            ],
                                            "type": "text",
                                            "content": "."
                                        }
                                    ]
                                }
                            ],
                            "index": 7
                        },
                        {
                            "bbox": [
                                124,
                                525,
                                504,
                                582
                            ],
                            "type": "text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        124,
                                        525,
                                        504,
                                        582
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "text",
                                            "content": "(b) Depth-first search (DFS) (Algorithm 2) explores the most promising state first, until the final output is reached ("
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "inline_equation",
                                            "content": "t > T"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "text",
                                            "content": "), or the state evaluator deems it impossible to solve the problem from the current "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "inline_equation",
                                            "content": "s"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "text",
                                            "content": " ("
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "inline_equation",
                                            "content": "V(p_{\\theta}, \\{s\\})(s) \\leq v_{th}"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "text",
                                            "content": " for a value threshold "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "inline_equation",
                                            "content": "v_{th}"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "text",
                                            "content": "). In the latter case, the subtree from "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "inline_equation",
                                            "content": "s"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "text",
                                            "content": " is pruned to trade exploration for exploitation. In both cases, DFS backtracks to the parent state of "
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "inline_equation",
                                            "content": "s"
                                        },
                                        {
                                            "bbox": [
                                                124,
                                                525,
                                                504,
                                                582
                                            ],
                                            "type": "text",
                                            "content": " to continue exploration."
                                        }
                                    ]
                                }
                            ],
                            "index": 8
                        }
                    ],
                    "sub_type": "text"
                },
                {
                    "bbox": [
                        104,
                        582,
                        506,
                        661
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                582,
                                506,
                                661
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        582,
                                        506,
                                        661
                                    ],
                                    "type": "text",
                                    "content": "Conceptually, ToT has several benefits as a method for general problem-solving with LMs: (1) Generality. IO, CoT, CoT-SC, and self-refinement can be seen as special cases of ToT (i.e. trees of limited depth and breadth; Figure 1). (2) Modularity. The base LM, as well as the thought decomposition, generation, evaluation, and search procedures can all be varied independently. (3) Adaptability. Different problem properties, LM capabilities, and resource constraints can be accommodated. (4) Convenience. No extra training is needed, just a pre-trained LM is sufficient. The next section will show how these conceptual benefits translate to strong empirical performance in different problems."
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        105,
                        675,
                        192,
                        689
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                675,
                                192,
                                689
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        675,
                                        192,
                                        689
                                    ],
                                    "type": "text",
                                    "content": "4 Experiments"
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        104,
                        700,
                        505,
                        723
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                700,
                                505,
                                723
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        700,
                                        505,
                                        723
                                    ],
                                    "type": "text",
                                    "content": "We propose three tasks that are hard even when sampling from the state-of-the-art language model, GPT-4 [20], using standard IO prompting or chain-of-thought (CoT) prompting. We show how"
                                }
                            ]
                        }
                    ],
                    "index": 12
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        302,
                        741,
                        309,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                302,
                                741,
                                309,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        302,
                                        741,
                                        309,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "4"
                                }
                            ]
                        }
                    ],
                    "index": 13
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 3
        },
        {
            "para_blocks": [
                {
                    "type": "table",
                    "bbox": [
                        106,
                        70,
                        504,
                        184
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                106,
                                70,
                                504,
                                184
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        106,
                                        70,
                                        504,
                                        184
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                106,
                                                70,
                                                504,
                                                184
                                            ],
                                            "type": "table",
                                            "html": "<table><tr><td></td><td>Game of 24</td><td>Creative Writing</td><td>5x5 Crosswords</td></tr><tr><td>Input</td><td>4 numbers (4 9 10 13)</td><td>4 random sentences</td><td>10 clues (h1. presented;..)</td></tr><tr><td>Output</td><td>An equation to reach 24 (13-9)*(10-4)=24</td><td>A passage of 4 paragraphs ending in the 4 sentences</td><td>5x5 letters: SHOWN; WIRRA; AVAIL; ...</td></tr><tr><td>Thoughts</td><td>3 intermediate equations (13-9=4 (left 4,4,10); 10-4=6 (left 4,6); 4*6=24)</td><td>A short writing plan (1. Introduce a book that connects...)</td><td>Words to fill in for clues: (h1. shown; v5. naled; ...)</td></tr><tr><td>#ToT steps</td><td>3</td><td>1</td><td>5-10 (variable)</td></tr></table>",
                                            "image_path": "675c7262eaac09542e1643ef0141475f85cb37fa62fd45ea546cafff41248f1e.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "angle": 0,
                            "type": "table_body"
                        },
                        {
                            "bbox": [
                                165,
                                185,
                                441,
                                195
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        165,
                                        185,
                                        441,
                                        195
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                165,
                                                185,
                                                441,
                                                195
                                            ],
                                            "type": "text",
                                            "content": "Table 1: Task overview. Input, output, thought examples are in blue."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "angle": 0,
                            "type": "table_footnote"
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        104,
                        205,
                        506,
                        251
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                205,
                                506,
                                251
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        205,
                                        506,
                                        251
                                    ],
                                    "type": "text",
                                    "content": "deliberate search in trees of thoughts (ToT) produces better results, and more importantly, interesting and promising new ways to use language models to solve problems requiring search or planning. Unless otherwise stated, we perform experiments using a Chat Completion mode GPT-4<sup>1</sup> with a sampling temperature of 0.7."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        105,
                        262,
                        180,
                        273
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                262,
                                180,
                                273
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        262,
                                        180,
                                        273
                                    ],
                                    "type": "text",
                                    "content": "4.1 Game of 24"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        282,
                        504,
                        316
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                282,
                                504,
                                316
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        282,
                                        504,
                                        316
                                    ],
                                    "type": "text",
                                    "content": "Game of 24 is a mathematical reasoning challenge, where the goal is to use 4 numbers and basic arithmetic operations "
                                },
                                {
                                    "bbox": [
                                        104,
                                        282,
                                        504,
                                        316
                                    ],
                                    "type": "inline_equation",
                                    "content": "(+ - * /)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        282,
                                        504,
                                        316
                                    ],
                                    "type": "text",
                                    "content": " to obtain 24. For example, given input \"4 9 10 13\", a solution output could be "
                                },
                                {
                                    "bbox": [
                                        104,
                                        282,
                                        504,
                                        316
                                    ],
                                    "type": "inline_equation",
                                    "content": "(10 - 4) * (13 - 9) = 24"
                                },
                                {
                                    "bbox": [
                                        104,
                                        282,
                                        504,
                                        316
                                    ],
                                    "type": "text",
                                    "content": "."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "type": "image",
                    "bbox": [
                        126,
                        326,
                        485,
                        425
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                126,
                                326,
                                485,
                                425
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        126,
                                        326,
                                        485,
                                        425
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                126,
                                                326,
                                                485,
                                                425
                                            ],
                                            "type": "image",
                                            "image_path": "f309f3865d07626098f40ee99a2b0df818c94c6a54beb89e22a045ac2a90e756.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 5,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                107,
                                433,
                                499,
                                445
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        433,
                                        499,
                                        445
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                433,
                                                499,
                                                445
                                            ],
                                            "type": "text",
                                            "content": "Figure 2: ToT in a game of 24. The LM is prompted for (a) thought generation and (b) valuation."
                                        }
                                    ]
                                }
                            ],
                            "index": 6,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        451,
                        504,
                        496
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                451,
                                504,
                                496
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        451,
                                        504,
                                        496
                                    ],
                                    "type": "text",
                                    "content": "Task Setup. We scrape data from 4nums.com, which has 1,362 games that are sorted from easy to hard by human solving time, and use a subset of relatively hard games indexed 901-1,000 for testing. For each task, we consider the output as success if it is a valid equation that equals 24 and uses the input numbers each exactly once. We report the success rate across 100 games as the metric."
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        104,
                        500,
                        506,
                        599
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                500,
                                506,
                                599
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        500,
                                        506,
                                        599
                                    ],
                                    "type": "text",
                                    "content": "Baselines. We use a standard input-output (IO) prompt with 5 in-context examples. For chain-of-thought (CoT) prompting, we augment each input-output pair with 3 intermediate equations, each operating on two remaining numbers. For example, given input \"4 9 10 13\", the thoughts could be \"13 - 9 = 4 (left: 4 4 10); 10 - 4 = 6 (left: 4 6); 4 * 6 = 24 (left: 24)\". For each game, we sample IO and CoT prompting for 100 times for average performance. We also consider a CoT self-consistency baseline, which takes the majority output from 100 CoT samples, and an iterative-refine approach on top of an IO sample for at most 10 iterations. At each iteration, the LM is conditioned on all previous history to \"reflect on your mistakes and generate a refined answer\" if the output is incorrect. Note that it uses groundtruth feedback signals about equation correctness."
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        104,
                        604,
                        506,
                        703
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                604,
                                506,
                                703
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        604,
                                        506,
                                        703
                                    ],
                                    "type": "text",
                                    "content": "ToT Setup. To frame Game of 24 into ToT, it is natural to decompose the thoughts into 3 steps, each an intermediate equation. As shown in Figure 2(a), at each tree node, we exact the \"left\" numbers and prompt the LM to propose some possible next steps. The same \"propose prompt\" is used for all 3 thought steps, though it only has one example with 4 input numbers. We perform a breadth-first search (BFS) in ToT, where at each step we keep the best "
                                },
                                {
                                    "bbox": [
                                        104,
                                        604,
                                        506,
                                        703
                                    ],
                                    "type": "inline_equation",
                                    "content": "b = 5"
                                },
                                {
                                    "bbox": [
                                        104,
                                        604,
                                        506,
                                        703
                                    ],
                                    "type": "text",
                                    "content": " candidates. To perform deliberate BFS in ToT, as shown in Figure 2(b), we prompt LM to evaluate each thought candidate as \"sure/maybe/impossible\" with regard to reaching 24. The aim is to promote correct partial solutions that can be verdicted within few lookahead trials, and eliminate impossible partial solutions based on \"too big/small\" commonsense, and keep the rest \"maybe\". We sample values 3 times for each thought."
                                }
                            ]
                        }
                    ],
                    "index": 9
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        118,
                        711,
                        303,
                        722
                    ],
                    "type": "page_footnote",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                118,
                                711,
                                303,
                                722
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        118,
                                        711,
                                        303,
                                        722
                                    ],
                                    "type": "text",
                                    "content": "<sup>1</sup>Experiments were done between May 5-16, 2023."
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        302,
                        741,
                        308,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                302,
                                741,
                                308,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        302,
                                        741,
                                        308,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "5"
                                }
                            ]
                        }
                    ],
                    "index": 11
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 4
        },
        {
            "para_blocks": [
                {
                    "type": "table",
                    "bbox": [
                        106,
                        72,
                        233,
                        190
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                106,
                                72,
                                233,
                                190
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        106,
                                        72,
                                        233,
                                        190
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                106,
                                                72,
                                                233,
                                                190
                                            ],
                                            "type": "table",
                                            "html": "<table><tr><td>Method</td><td>Success</td></tr><tr><td>IO prompt</td><td>7.3%</td></tr><tr><td>CoT prompt</td><td>4.0%</td></tr><tr><td>CoT-SC (k=100)</td><td>9.0%</td></tr><tr><td>ToT (ours) (b=1)</td><td>45%</td></tr><tr><td>ToT (ours) (b=5)</td><td>74%</td></tr><tr><td>IO + Refine (k=10)</td><td>27%</td></tr><tr><td>IO (best of 100)</td><td>33%</td></tr><tr><td>CoT (best of 100)</td><td>49%</td></tr></table>",
                                            "image_path": "c40bc74c310d833468725bd12e4d35b82099a8847cc47836ea6a045fd6436c27.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "angle": 0,
                            "type": "table_body"
                        },
                        {
                            "bbox": [
                                105,
                                194,
                                225,
                                205
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        194,
                                        225,
                                        205
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                194,
                                                225,
                                                205
                                            ],
                                            "type": "text",
                                            "content": "Table 2: Game of 24 Results."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "angle": 0,
                            "type": "table_caption"
                        }
                    ],
                    "index": 0
                },
                {
                    "type": "image",
                    "bbox": [
                        242,
                        76,
                        358,
                        190
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                242,
                                76,
                                358,
                                190
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        242,
                                        76,
                                        358,
                                        190
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                242,
                                                76,
                                                358,
                                                190
                                            ],
                                            "type": "image",
                                            "image_path": "f38d9bcff4a23647baab12eb0ab85164c6421a9ca258931dac5e5df918c3aab3.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 2,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                241,
                                194,
                                484,
                                206
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        241,
                                        194,
                                        484,
                                        206
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                241,
                                                194,
                                                484,
                                                206
                                            ],
                                            "type": "text",
                                            "content": "Figure 3: Game of 24 (a) scale analysis & (b) error analysis."
                                        }
                                    ]
                                }
                            ],
                            "index": 4,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 2
                },
                {
                    "type": "image",
                    "bbox": [
                        369,
                        76,
                        484,
                        189
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                369,
                                76,
                                484,
                                189
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        369,
                                        76,
                                        484,
                                        189
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                369,
                                                76,
                                                484,
                                                189
                                            ],
                                            "type": "image",
                                            "image_path": "e83efa9d7d3fd21a606f95a47940fd951c576cb5049d53072c9099802e4bd0f9.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 3,
                            "angle": 0,
                            "type": "image_body"
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        211,
                        506,
                        300
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                211,
                                506,
                                300
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": "Results. As shown in Table 2, IO, CoT, and CoT-SC prompting methods perform badly on the task, achieving only "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "7.3\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ", "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "4.0\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ", and "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "9.0\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": " success rates. In contrast, ToT with a breadth of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "b = 1"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": " already achieves a success rate of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "45\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ", while "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "b = 5"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": " achieves "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "74\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ". We also consider an oracle setup for IO/CoT, by calculating the success rate using best of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": " samples ("
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "1 \\leq k \\leq 100"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": "). To compare IO/CoT (best of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ") with ToT, we consider calculating the tree nodes visited per task in ToT across "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "b = 1 \\cdots 5"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ", and map the 5 success rates in Figure 3(a), treating IO/CoT (best of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ") as visiting "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "k"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": " nodes in a bandit. Not surprisingly, CoT scales better than IO, and best of 100 CoT samples achieve a success rate of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "49\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ", but still much worse than exploring more nodes in ToT ("
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "inline_equation",
                                    "content": "b > 1"
                                },
                                {
                                    "bbox": [
                                        104,
                                        211,
                                        506,
                                        300
                                    ],
                                    "type": "text",
                                    "content": ")."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        304,
                        504,
                        350
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                304,
                                504,
                                350
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        304,
                                        504,
                                        350
                                    ],
                                    "type": "text",
                                    "content": "Error Analysis. Figure 3(b) breaks down at which step CoT and ToT samples fail the task, i.e. the thought (in CoT) or all "
                                },
                                {
                                    "bbox": [
                                        104,
                                        304,
                                        504,
                                        350
                                    ],
                                    "type": "inline_equation",
                                    "content": "b"
                                },
                                {
                                    "bbox": [
                                        104,
                                        304,
                                        504,
                                        350
                                    ],
                                    "type": "text",
                                    "content": " thoughts (in ToT) are invalid or impossible to reach 24. Notably, around "
                                },
                                {
                                    "bbox": [
                                        104,
                                        304,
                                        504,
                                        350
                                    ],
                                    "type": "inline_equation",
                                    "content": "60\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        304,
                                        504,
                                        350
                                    ],
                                    "type": "text",
                                    "content": " of CoT samples already failed the task after generating the first step, or equivalently, the first three words (e.g. "
                                },
                                {
                                    "bbox": [
                                        104,
                                        304,
                                        504,
                                        350
                                    ],
                                    "type": "inline_equation",
                                    "content": "4 + 9"
                                },
                                {
                                    "bbox": [
                                        104,
                                        304,
                                        504,
                                        350
                                    ],
                                    "type": "text",
                                    "content": "). This highlights the issues with direct left-to-right decoding."
                                }
                            ]
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        105,
                        362,
                        201,
                        374
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                362,
                                201,
                                374
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        362,
                                        201,
                                        374
                                    ],
                                    "type": "text",
                                    "content": "4.2 Creative writing"
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        104,
                        383,
                        504,
                        417
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                383,
                                504,
                                417
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        383,
                                        504,
                                        417
                                    ],
                                    "type": "text",
                                    "content": "Next, we invent a creative writing task where the input is 4 random sentences and the output should be a coherent passage with 4 paragraphs that end in the 4 input sentences respectively. Such a task is open-ended and exploratory, and challenges creative thinking as well as high-level planning."
                                }
                            ]
                        }
                    ],
                    "index": 8
                },
                {
                    "bbox": [
                        104,
                        422,
                        505,
                        520
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                422,
                                505,
                                520
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        422,
                                        505,
                                        520
                                    ],
                                    "type": "text",
                                    "content": "Task setup. We sample random sentences from randomwordgenerator.com to form 100 inputs, and there is no groundtruth passage for each input constraint. As we find that GPT-4 can follow the input constraints most of the time, we focus on evaluating passage coherency in two ways: using a GPT-4 zero-shot prompt to provide a 1-10 scalar score, or using human judgments to compare pairs of outputs from different methods. For the former, we sample 5 scores and average them for each task output, and we find these 5 scores usually consistent, with a standard deviation of around 0.56 on average across outputs. For the latter, we employ a subset of the authors in a blind study to compare the coherency of CoT vs. ToT generated passage pairs, where the order of passages is random flipped over 100 inputs."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        104,
                        525,
                        506,
                        602
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                525,
                                506,
                                602
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        506,
                                        602
                                    ],
                                    "type": "text",
                                    "content": "Baselines. Given the creative nature of the task, both IO and CoT prompts are zero-shot. While the former prompts the LM to directly generate a coherent passage given input constraints, the latter prompts the LM to first make a brief plan then write the passage, i.e. the plan serves as the intermediate thought step. We generate 10 IO and CoT samples per task. We also consider an iterative-refine "
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        506,
                                        602
                                    ],
                                    "type": "inline_equation",
                                    "content": "(k \\leq 5)"
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        506,
                                        602
                                    ],
                                    "type": "text",
                                    "content": " method on top of a random IO sample for each task, where the LM is conditioned on input constraints and the last generated passage to decide if the passage is already \"perfectly coherent\", and if not generate a refined one."
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        104,
                        607,
                        504,
                        662
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                607,
                                504,
                                662
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        607,
                                        504,
                                        662
                                    ],
                                    "type": "text",
                                    "content": "ToT setup. We build a ToT with depth 2 (and only 1 intermediate thought step) — the LM first generates "
                                },
                                {
                                    "bbox": [
                                        104,
                                        607,
                                        504,
                                        662
                                    ],
                                    "type": "inline_equation",
                                    "content": "k = 5"
                                },
                                {
                                    "bbox": [
                                        104,
                                        607,
                                        504,
                                        662
                                    ],
                                    "type": "text",
                                    "content": " plans and votes for the best one (Figure 4), then similarly generate "
                                },
                                {
                                    "bbox": [
                                        104,
                                        607,
                                        504,
                                        662
                                    ],
                                    "type": "inline_equation",
                                    "content": "k = 5"
                                },
                                {
                                    "bbox": [
                                        104,
                                        607,
                                        504,
                                        662
                                    ],
                                    "type": "text",
                                    "content": " passages based on the best plan then vote for the best one. Here the breadth limit "
                                },
                                {
                                    "bbox": [
                                        104,
                                        607,
                                        504,
                                        662
                                    ],
                                    "type": "inline_equation",
                                    "content": "b = 1"
                                },
                                {
                                    "bbox": [
                                        104,
                                        607,
                                        504,
                                        662
                                    ],
                                    "type": "text",
                                    "content": ", as only one choice is kept per step. A simple zero-shot vote prompt (\"analyze choices below, then conclude which is most promising for the instruction\") is used to sample 5 votes at both steps."
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        104,
                        666,
                        505,
                        723
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                666,
                                505,
                                723
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        666,
                                        505,
                                        723
                                    ],
                                    "type": "text",
                                    "content": "Results. Figure 5(a) shows average GPT-4 scores across 100 tasks, where ToT (7.56) is deemed to generate more coherent passages than IO (6.19) and CoT (6.93) on average. While such an automatic metric might be noisy, Figure 5(b) confirms the finding by showing that humans prefer ToT over CoT in 41 out of 100 passage pairs, while only prefer CoT over ToT in 21 (other 38 pairs are found \"similarly coherent\"). Lastly, iterative-refine is more effective on this natural language task, where"
                                }
                            ]
                        }
                    ],
                    "index": 12
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        302,
                        742,
                        308,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                302,
                                742,
                                308,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        302,
                                        742,
                                        308,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "6"
                                }
                            ]
                        }
                    ],
                    "index": 13
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 5
        },
        {
            "para_blocks": [
                {
                    "type": "image",
                    "bbox": [
                        127,
                        76,
                        483,
                        209
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                127,
                                76,
                                483,
                                209
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        127,
                                        76,
                                        483,
                                        209
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                127,
                                                76,
                                                483,
                                                209
                                            ],
                                            "type": "image",
                                            "image_path": "f7ae7c06e09a2a0c57550ae1635f5a62fe76098025b96dc6895d4a55e7f1dda0.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                104,
                                219,
                                504,
                                253
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        104,
                                        219,
                                        504,
                                        253
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                104,
                                                219,
                                                504,
                                                253
                                            ],
                                            "type": "text",
                                            "content": "Figure 4: A step of deliberate search in a randomly picked Creative Writing task. Given the input, the LM samples 5 different plans, then votes 5 times to decide which plan is best. The majority choice is used to consequently write the output passage with the same sample-vote procedure."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 0
                },
                {
                    "type": "image",
                    "bbox": [
                        113,
                        268,
                        231,
                        369
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                113,
                                268,
                                231,
                                369
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        113,
                                        268,
                                        231,
                                        369
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                113,
                                                268,
                                                231,
                                                369
                                            ],
                                            "type": "image",
                                            "image_path": "b579e8f7132759f22865ae46bd34fc71a3b580b47b80edc4fb3c9936a55f8451.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 3,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                133,
                                259,
                                220,
                                268
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        133,
                                        259,
                                        220,
                                        268
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                133,
                                                259,
                                                220,
                                                268
                                            ],
                                            "type": "text",
                                            "content": "(a) GPT-4 coherency scores"
                                        }
                                    ]
                                }
                            ],
                            "index": 2,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 3
                },
                {
                    "type": "image",
                    "bbox": [
                        239,
                        268,
                        342,
                        370
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                239,
                                268,
                                342,
                                370
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        239,
                                        268,
                                        342,
                                        370
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                239,
                                                268,
                                                342,
                                                370
                                            ],
                                            "type": "image",
                                            "image_path": "07bc267a25f073b4b0bd9e1d6968798cafa1b5b3be161f83a152124ea977515a.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 5,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                242,
                                258,
                                348,
                                268
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        242,
                                        258,
                                        348,
                                        268
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                242,
                                                258,
                                                348,
                                                268
                                            ],
                                            "type": "text",
                                            "content": "(b) Human coherency comparison"
                                        }
                                    ]
                                }
                            ],
                            "index": 4,
                            "angle": 0,
                            "type": "image_caption"
                        },
                        {
                            "bbox": [
                                168,
                                370,
                                307,
                                381
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        168,
                                        370,
                                        307,
                                        381
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                168,
                                                370,
                                                307,
                                                381
                                            ],
                                            "type": "text",
                                            "content": "Figure 5: Creative Writing results."
                                        }
                                    ]
                                }
                            ],
                            "index": 8,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 5
                },
                {
                    "type": "table",
                    "bbox": [
                        370,
                        259,
                        507,
                        364
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                370,
                                259,
                                507,
                                364
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        370,
                                        259,
                                        507,
                                        364
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                370,
                                                259,
                                                507,
                                                364
                                            ],
                                            "type": "table",
                                            "html": "<table><tr><td rowspan=\"2\">Method</td><td colspan=\"3\">Success Rate (%)</td></tr><tr><td colspan=\"3\">Letter Word Game</td></tr><tr><td>IO</td><td>38.7</td><td>14</td><td>0</td></tr><tr><td>CoT</td><td>40.6</td><td>15.6</td><td>1</td></tr><tr><td>ToT (ours)</td><td>78</td><td>60</td><td>20</td></tr><tr><td>+best state</td><td>82.4</td><td>67.5</td><td>35</td></tr><tr><td>-prune</td><td>65.4</td><td>41.5</td><td>5</td></tr><tr><td>-backtrack</td><td>54.6</td><td>20</td><td>5</td></tr></table>",
                                            "image_path": "642cae3f96aca9a107cb53094a2501194f86bb7412050ca7350cdea2f382fe27.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 6,
                            "angle": 0,
                            "type": "table_body"
                        },
                        {
                            "bbox": [
                                370,
                                365,
                                504,
                                374
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        370,
                                        365,
                                        504,
                                        374
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                370,
                                                365,
                                                504,
                                                374
                                            ],
                                            "type": "text",
                                            "content": "Table 3: Mini Crosswords results."
                                        }
                                    ]
                                }
                            ],
                            "index": 7,
                            "angle": 0,
                            "type": "table_caption"
                        }
                    ],
                    "index": 6
                },
                {
                    "bbox": [
                        104,
                        388,
                        504,
                        422
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                388,
                                504,
                                422
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        388,
                                        504,
                                        422
                                    ],
                                    "type": "text",
                                    "content": "it improves IO coherency score from 6.19 to 7.67, and ToT coherency score from 7.56 to 7.91. We believe it could be thought of as a third approach to thought generation in the ToT framework, where new thoughts can arise from refining old thoughts instead of i.i.d. or sequentially generated."
                                }
                            ]
                        }
                    ],
                    "index": 9
                },
                {
                    "bbox": [
                        105,
                        434,
                        204,
                        445
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                434,
                                204,
                                445
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        434,
                                        204,
                                        445
                                    ],
                                    "type": "text",
                                    "content": "4.3 Mini Crosswords"
                                }
                            ]
                        }
                    ],
                    "index": 10
                },
                {
                    "bbox": [
                        104,
                        454,
                        504,
                        521
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                454,
                                504,
                                521
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        454,
                                        504,
                                        521
                                    ],
                                    "type": "text",
                                    "content": "In Game of 24 and Creative Writing, ToT is relatively shallow — at most 3 thought steps are needed to reach the final output. Here we explore "
                                },
                                {
                                    "bbox": [
                                        104,
                                        454,
                                        504,
                                        521
                                    ],
                                    "type": "inline_equation",
                                    "content": "5 \\times 5"
                                },
                                {
                                    "bbox": [
                                        104,
                                        454,
                                        504,
                                        521
                                    ],
                                    "type": "text",
                                    "content": " mini crosswords as a harder search problem involving natural language. Again, the goal is not just to solve the task, as more general crosswords can be readily solved with specialized NLP pipelines [31] that leverages large-scale retrieval instead of LM. Rather, we aim to explore the limit of LM as a general problem solver that explores its own thoughts and guides its own exploration with deliberate reasoning as heuristics."
                                }
                            ]
                        }
                    ],
                    "index": 11
                },
                {
                    "bbox": [
                        104,
                        525,
                        504,
                        592
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                525,
                                504,
                                592
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "text",
                                    "content": "Task Setup. We scrape data from GooBix, which contains 156 games of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "inline_equation",
                                    "content": "5 \\times 5"
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "text",
                                    "content": " mini crosswords. As we observe adjacent games contain similar clues, we use 20 games with indices "
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "inline_equation",
                                    "content": "1, 6, \\dots, 91, 96"
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "text",
                                    "content": " for testing, and games "
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "inline_equation",
                                    "content": "136, 141, 146, 151, 156"
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "text",
                                    "content": " for prompting. For each task, the input describes the 5 horizontal clues and 5 vertical clues, and the output should be a board of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "inline_equation",
                                    "content": "5 \\times 5 = 25"
                                },
                                {
                                    "bbox": [
                                        104,
                                        525,
                                        504,
                                        592
                                    ],
                                    "type": "text",
                                    "content": " letters to solve the crosswords. For evaluation, we consider three levels of success: the portion of correct letters (25 per game), words (10 per game), and games."
                                }
                            ]
                        }
                    ],
                    "index": 12
                },
                {
                    "bbox": [
                        104,
                        596,
                        504,
                        630
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                596,
                                504,
                                630
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        596,
                                        504,
                                        630
                                    ],
                                    "type": "text",
                                    "content": "Baselines. We provide 5 example input-output pairs in the IO prompt, and in the CoT prompt additionally include intermediate words in the order h1..5 then v1..5. We run each prompt for 10 samples and average the results."
                                }
                            ]
                        }
                    ],
                    "index": 13
                },
                {
                    "bbox": [
                        104,
                        634,
                        506,
                        723
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                634,
                                506,
                                723
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        634,
                                        506,
                                        723
                                    ],
                                    "type": "text",
                                    "content": "ToT Setup. We leverage a depth-first search (Algorithm 2) that keeps exploring the most promising subsequent word clue until the state is no longer promising, then backtrack to the parent state to explore alternative thoughts. To make search tractable, subsequent thoughts are constrained not to change any filled words or letters, so that the ToT has at most 10 intermediate steps. For thought generation, at each state we translate all existing thoughts (e.g. \"h2.motor; h1.tasks\" for the state in Figure 6(a)) into letter constraints for remaining clues (e.g. \"v1.To heap: tm____;...\" and prompt a proposal prompt 5 times to come up with candidates for where and what to fill in the next word. Importantly, we also prompt the LM to give a confidence level for different thoughts, and aggregate"
                                }
                            ]
                        }
                    ],
                    "index": 14
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        302,
                        741,
                        308,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                302,
                                741,
                                308,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        302,
                                        741,
                                        308,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "7"
                                }
                            ]
                        }
                    ],
                    "index": 15
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 6
        },
        {
            "para_blocks": [
                {
                    "type": "image",
                    "bbox": [
                        149,
                        76,
                        462,
                        203
                    ],
                    "blocks": [
                        {
                            "bbox": [
                                149,
                                76,
                                462,
                                203
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        149,
                                        76,
                                        462,
                                        203
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                149,
                                                76,
                                                462,
                                                203
                                            ],
                                            "type": "image",
                                            "image_path": "e5054d0e3bd353ad66ec6e627ccf56635972bf0e4296d055df984ecaa3974196.jpg"
                                        }
                                    ]
                                }
                            ],
                            "index": 0,
                            "angle": 0,
                            "type": "image_body"
                        },
                        {
                            "bbox": [
                                104,
                                213,
                                506,
                                259
                            ],
                            "lines": [
                                {
                                    "bbox": [
                                        104,
                                        213,
                                        506,
                                        259
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                104,
                                                213,
                                                506,
                                                259
                                            ],
                                            "type": "text",
                                            "content": "Figure 6: In Mini Crosswords, (a) how thoughts are proposed and aggregated in a priority queue for depth-first search (DFS), and (b) how a state is evaluated based on the possibility of filling in each remaining word clue, and pruned if any remaining clue is deemed not possible to fill by the LM. Then DFS backtracks to the parent state and explore the next promising thought for clue."
                                        }
                                    ]
                                }
                            ],
                            "index": 1,
                            "angle": 0,
                            "type": "image_caption"
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        104,
                        265,
                        506,
                        332
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                265,
                                506,
                                332
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        265,
                                        506,
                                        332
                                    ],
                                    "type": "text",
                                    "content": "these across proposals to obtain a sorted list of next thoughts to explore (Figure 6(a)). For state evaluations, we similarly translate each state into letter constraints for remaining clues, then evaluate for each clue if it is possible to fill given the constraints. If any remaining clue is deemed \"impossible\" to fill in (e.g. \"v1. To heap: tm_s_\"), then the exploration of the state's subtree is pruned and DFS backtracks to its parent to explore the next promising thought. We limit DFS search steps to 100, and simply render the deepest explored state (the first explored one if multiple) into the final output."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        104,
                        336,
                        505,
                        381
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                336,
                                505,
                                381
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        336,
                                        505,
                                        381
                                    ],
                                    "type": "text",
                                    "content": "Results. As shown in Table 3, IO and CoT prompting methods perform poorly with a word-level success rate less than "
                                },
                                {
                                    "bbox": [
                                        104,
                                        336,
                                        505,
                                        381
                                    ],
                                    "type": "inline_equation",
                                    "content": "16\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        336,
                                        505,
                                        381
                                    ],
                                    "type": "text",
                                    "content": ", while ToT significantly improves all metrics, achieving a word-level success rate of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        336,
                                        505,
                                        381
                                    ],
                                    "type": "inline_equation",
                                    "content": "60\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        336,
                                        505,
                                        381
                                    ],
                                    "type": "text",
                                    "content": " and solving 4 out of 20 games. Such an improvement is not surprising, given IO and CoT lack mechanisms to try different clues, make changes to decisions, or backtrack."
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        385,
                        506,
                        529
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                385,
                                506,
                                529
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "text",
                                    "content": "Oracle and ablation studies. When outputting from the oracle best DFS state (instead of the heuristically determined best state) per task, ToT performance is even higher and actually solves 7/20 games (Table 3, \"+best state\"), indicating our simple output heuristics can be readily improved. Interestingly, sometimes when the crosswords game is actually solved, the state evaluator might still deem some words as \"impossible\" and prune — possibly because "
                                },
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "inline_equation",
                                    "content": "5 \\times 5"
                                },
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "text",
                                    "content": " crosswords by design have some rare or obsolete words that GPT-4 cannot recognize"
                                },
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "inline_equation",
                                    "content": "^2"
                                },
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "text",
                                    "content": ". Given the state evaluation as a pruning heuristic is imperfect, we also explore ablating the pruning, and find the performance generally worse (Table 3, \"prune\"). However, it could actually find the correct solution for 4/20 games (though only outputting 1 via heuristic), 3 of which are games ToT+pruning cannot solve within 100 steps. Thus, better heuristics for DFS pruning are critical for problem solving in this case. Lastly, we confirm the importance of backtracking by running an ablation that keeps filling the most promising clue for at most 20 steps, allowing overwrites. This is similar to a \"greedy\" BFS search with breadth limit of "
                                },
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "inline_equation",
                                    "content": "b = 1"
                                },
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "text",
                                    "content": ", and performs poorly with a word level success of only "
                                },
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "inline_equation",
                                    "content": "20\\%"
                                },
                                {
                                    "bbox": [
                                        104,
                                        385,
                                        506,
                                        529
                                    ],
                                    "type": "text",
                                    "content": " (Table 3, \"backtrack\")."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        105,
                        544,
                        197,
                        558
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                544,
                                197,
                                558
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        544,
                                        197,
                                        558
                                    ],
                                    "type": "text",
                                    "content": "5 Related Work"
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        570,
                        504,
                        691
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                570,
                                504,
                                691
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        570,
                                        504,
                                        691
                                    ],
                                    "type": "text",
                                    "content": "Planning and decision making. Smart planning and decision making are critical to achieving predefined goals. As they are trained on vast amount of world knowledge and human examples, LMs are known to have already absorbed rich commonsense that makes it possible to propose reasonable plans conditioned on problem setting and environmental states [10, 39, 34, 11, 32, 38, 37]. Our proposed Tree-of-Thought approach extends existing planning formulations by considering multiple potentially feasible plans simultaneously at each problem-solving step, and proceeding with the most promising ones. The integration between thought sampling and value feedback organically integrates planning and decision-making mechanisms, enabling effective search inside a solution tree. On the other hand, traditional decision-making procedures usually require training dedicated reward and policy models as in reinforcement learning (for example CHAI [30]), whereas we use the LM itself to provide the value estimates for decision making."
                                }
                            ]
                        }
                    ],
                    "index": 6
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        104,
                        700,
                        504,
                        723
                    ],
                    "type": "page_footnote",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                700,
                                504,
                                723
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        700,
                                        504,
                                        723
                                    ],
                                    "type": "text",
                                    "content": "For example, \"agend\" is an obsolete form of \"agendum\", but GPT-4 deems it a typo for \"agenda\". External retrieval or web interaction could augment LM for problem solving under knowledge uncertainty."
                                }
                            ]
                        }
                    ],
                    "index": 7
                },
                {
                    "bbox": [
                        302,
                        741,
                        308,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                302,
                                741,
                                308,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        302,
                                        741,
                                        308,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "8"
                                }
                            ]
                        }
                    ],
                    "index": 8
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 7
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        104,
                        72,
                        506,
                        216
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                72,
                                506,
                                216
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        72,
                                        506,
                                        216
                                    ],
                                    "type": "text",
                                    "content": "Self-reflection. Using LLMs to assess the viability of their own predictions is becoming an increasingly important procedure in problem solving. [25, 17, 21] introduced the \"self-reflection\" mechanism, in which LMs provide feedback to their generation candidates. [4] improves LMs code generation accuracy by injecting feedback messages generated by the LM itself based on its code execution results. Similarly, [14] also introduces \"critic\" or review steps over the actions and states, deciding the next action to take in solving computer operation tasks. Another recent work very relevant to ours is \"self-eval guided decoding\" [36]. Similar to our method, self-eval decoding also follows a tree-search procedure with leaves sampled from stochastic beam search decoding, which are then evaluated by LLM itself with carefully prepared self-eval prompts. Their approach however, uses the PAL formulation [7] which represents thoughts as codes, which makes it difficult to tackle challenging tasks like creative writing which we consider in this paper. Our Tree-of-Thought formulation is thus more versatile and handles challenging tasks on which GPT-4 only achieves very low accuracy with standard prompts."
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        104,
                        220,
                        504,
                        298
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                220,
                                504,
                                298
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        220,
                                        504,
                                        298
                                    ],
                                    "type": "text",
                                    "content": "Program-guided LLM generation. Our proposal is also related to recent advancements that organize LM's behavior with symbolic program guidance. For example [24] embeds LMs in an algorithmic search procedure to help solve problems like question answering step-by-step, in which the search trees are expanded by relevant paragraphs that might provide answers. This approach however differs from ours in that trees are expanded by sampling external paragraphs instead of the LM's own thoughts, and there is no reflection or voting steps. Another approach, LLM+P [15], goes one step further and delegates the actual planning process to a classical planner."
                                }
                            ]
                        }
                    ],
                    "index": 1
                },
                {
                    "bbox": [
                        104,
                        301,
                        504,
                        389
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                301,
                                504,
                                389
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        301,
                                        504,
                                        389
                                    ],
                                    "type": "text",
                                    "content": "Classical search methods. Last but not least, our approach can be treated as a modern rendition of classical search methods for problem solving. For example it can be considered as a heuristic search algorithm like A* [8], in which the heuristic at each search node is provided by the LM's self-assessment. From this perspective, our method is also related to NeuroLogic A*esque decoding proposed in [16], which is inspired by A* search but introduces look-ahead heuristics that are efficient for LMs to improve the beam-search or top-k sampling decoding. This method however is constrained to sentence generation tasks, whereas our framework are designed for complex, multi-step problem solving guarded by value feedback."
                                }
                            ]
                        }
                    ],
                    "index": 2
                },
                {
                    "bbox": [
                        105,
                        410,
                        180,
                        423
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                105,
                                410,
                                180,
                                423
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        105,
                                        410,
                                        180,
                                        423
                                    ],
                                    "type": "text",
                                    "content": "6 Discussion"
                                }
                            ]
                        }
                    ],
                    "index": 3
                },
                {
                    "bbox": [
                        104,
                        437,
                        504,
                        570
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                437,
                                504,
                                570
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        437,
                                        504,
                                        570
                                    ],
                                    "type": "text",
                                    "content": "Limitations and future directions. Deliberate search such as ToT might not be necessary for many existing tasks that GPT-4 already excels at, and as an initial step this work only explores three relatively simple tasks that challenges GPT-4 and calls of better search and planning abilities incorporated with LMs. However, as we begin to deploy LMs for more real-world decision making applications (e.g. coding, data analysis, robotics, etc.), more complex tasks could emerge and present new opportunities to study these research questions. Also, search methods like ToT requires more resources (e.g. GPT-4 API cost) than sampling methods in order to improve task performances, but the modular flexibility of ToT allows users to customize such performance-cost tradeoffs, and ongoing open-source efforts [29] should readily reduce such costs in the near future. Lastly, this work focuses on using an off-the-shelf LM, and fine-tuning LMs using a ToT-style high-level counterfactual decision making (e.g. deliberating over potential choices for the next paragraph, instead of predicting the next token) might present opportunities to enhance the problem-solving capabilities of LMs."
                                }
                            ]
                        }
                    ],
                    "index": 4
                },
                {
                    "bbox": [
                        104,
                        574,
                        504,
                        641
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                574,
                                504,
                                641
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        574,
                                        504,
                                        641
                                    ],
                                    "type": "text",
                                    "content": "Broader impact. ToT is a framework that empowers LMs to more autonomously and intelligently make decisions and solve problems. While current tasks are limited to reasoning and search problems, future applications involving interaction with external environments or humans could bring potential danger, e.g. facilitating harmful uses of LMs. On the other hand, ToT also improves the interpretability of model decisions and the opportunity for human alignment, as the resulting representations are readable, high-level language reasoning instead of implicit, low-level token values."
                                }
                            ]
                        }
                    ],
                    "index": 5
                },
                {
                    "bbox": [
                        104,
                        644,
                        506,
                        721
                    ],
                    "type": "text",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                104,
                                644,
                                506,
                                721
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        104,
                                        644,
                                        506,
                                        721
                                    ],
                                    "type": "text",
                                    "content": "Conclusion. The associative \"System 1\" of LMs can be beneficially augmented by a \"System 2\" based on searching a tree of possible paths to the solution to a problem. The Tree of Thoughts framework provides a way to translate classical insights about problem-solving into actionable methods for contemporary LMs. At the same time, LMs address a weakness of these classical methods, providing a way to solve complex problems that are not easily formalized, such as creative writing. We see this intersection of LMs with classical approaches to AI as an exciting direction for future work."
                                }
                            ]
                        }
                    ],
                    "index": 6
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        302,
                        741,
                        309,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                302,
                                741,
                                309,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        302,
                                        741,
                                        309,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "9"
                                }
                            ]
                        }
                    ],
                    "index": 7
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 8
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        106,
                        71,
                        165,
                        84
                    ],
                    "type": "title",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                106,
                                71,
                                165,
                                84
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        106,
                                        71,
                                        165,
                                        84
                                    ],
                                    "type": "text",
                                    "content": "References"
                                }
                            ]
                        }
                    ],
                    "index": 0
                },
                {
                    "bbox": [
                        105,
                        90,
                        505,
                        723
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 20,
                    "blocks": [
                        {
                            "bbox": [
                                111,
                                90,
                                505,
                                124
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        90,
                                        505,
                                        124
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                90,
                                                505,
                                                124
                                            ],
                                            "type": "text",
                                            "content": "[1] T. Brown, B. Mann, N. Ryder, M. Subbiah, J. D. Kaplan, P. Dhariwal, A. Neelakantan, P. Shyam, G. Sastry, A. Askell, et al. Language models are few-shot learners. Advances in neural information processing systems, 33:1877-1901, 2020."
                                        }
                                    ]
                                }
                            ],
                            "index": 1
                        },
                        {
                            "bbox": [
                                111,
                                131,
                                505,
                                165
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        131,
                                        505,
                                        165
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                131,
                                                505,
                                                165
                                            ],
                                            "type": "text",
                                            "content": "[2] C. Browne, E. J. Powley, D. Whitehouse, S. M. M. Lucas, P. I. Cowling, P. Rohlfshagen, S. Tavener, D. P. Liebana, S. Samothrakis, and S. Colton. A survey of monte carlo tree search methods. IEEE Transactions on Computational Intelligence and AI in Games, 4:1-43, 2012."
                                        }
                                    ]
                                }
                            ],
                            "index": 2
                        },
                        {
                            "bbox": [
                                111,
                                172,
                                505,
                                195
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        172,
                                        505,
                                        195
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                172,
                                                505,
                                                195
                                            ],
                                            "type": "text",
                                            "content": "[3] M. Campbell, A. J. Hoane Jr, and F.-h. Hsu. Deep blue. Artificial intelligence, 134(1-2):57-83, 2002."
                                        }
                                    ]
                                }
                            ],
                            "index": 3
                        },
                        {
                            "bbox": [
                                111,
                                201,
                                505,
                                215
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        201,
                                        505,
                                        215
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                201,
                                                505,
                                                215
                                            ],
                                            "type": "text",
                                            "content": "[4] X. Chen, M. Lin, N. Scharli, and D. Zhou. Teaching large language models to self-debug, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 4
                        },
                        {
                            "bbox": [
                                111,
                                221,
                                505,
                                256
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        221,
                                        505,
                                        256
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                221,
                                                505,
                                                256
                                            ],
                                            "type": "text",
                                            "content": "[5] A. Chowdhery, S. Narang, J. Devlin, M. Bosma, G. Mishra, A. Roberts, P. Barham, H. W. Chung, C. Sutton, S. Gehrmann, et al. Palm: Scaling language modeling with pathways. arXiv preprint arXiv:2204.02311, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 5
                        },
                        {
                            "bbox": [
                                111,
                                262,
                                505,
                                296
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        262,
                                        505,
                                        296
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                262,
                                                505,
                                                296
                                            ],
                                            "type": "text",
                                            "content": "[6] N. D. Daw, Y. Niv, and P. Dayan. Uncertainty-based competition between prefrontal and dorsolateral striatal systems for behavioral control. Nature neuroscience, 8(12):1704-1711, 2005."
                                        }
                                    ]
                                }
                            ],
                            "index": 6
                        },
                        {
                            "bbox": [
                                111,
                                304,
                                505,
                                327
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        304,
                                        505,
                                        327
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                304,
                                                505,
                                                327
                                            ],
                                            "type": "text",
                                            "content": "[7] L. Gao, A. Madaan, S. Zhou, U. Alon, P. Liu, Y. Yang, J. Callan, and G. Neubig. Pal: Program-aided language models, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 7
                        },
                        {
                            "bbox": [
                                111,
                                334,
                                505,
                                367
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        334,
                                        505,
                                        367
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                334,
                                                505,
                                                367
                                            ],
                                            "type": "text",
                                            "content": "[8] P. E. Hart, N. J. Nilsson, and B. Raphael. A formal basis for the heuristic determination of minimum cost paths. IEEE Transactions on Systems Science and Cybernetics, 4(2):100-107, 1968. doi: 10.1109/TSSC.1968.300136."
                                        }
                                    ]
                                }
                            ],
                            "index": 8
                        },
                        {
                            "bbox": [
                                111,
                                375,
                                505,
                                408
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        111,
                                        375,
                                        505,
                                        408
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                111,
                                                375,
                                                505,
                                                408
                                            ],
                                            "type": "text",
                                            "content": "[9] P. E. Hart, N. J. Nilsson, and B. Raphael. A formal basis for the heuristic determination of minimum cost paths. IEEE transactions on Systems Science and Cybernetics, 4(2):100-107, 1968."
                                        }
                                    ]
                                }
                            ],
                            "index": 9
                        },
                        {
                            "bbox": [
                                105,
                                416,
                                505,
                                440
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        416,
                                        505,
                                        440
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                416,
                                                505,
                                                440
                                            ],
                                            "type": "text",
                                            "content": "[10] W. Huang, P. Abbeel, D. Pathak, and I. Mordatch. Language models as zero-shot planners: Extracting actionable knowledge for embodied agents, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 10
                        },
                        {
                            "bbox": [
                                105,
                                446,
                                505,
                                480
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        446,
                                        505,
                                        480
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                446,
                                                505,
                                                480
                                            ],
                                            "type": "text",
                                            "content": "[11] W. Huang, F. Xia, T. Xiao, H. Chan, J. Liang, P. Florence, A. Zeng, J. Tompson, I. Mordatch, Y. Chebotar, et al. Inner monologue: Embodied reasoning through planning with language models. arXiv preprint arXiv:2207.05608, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 11
                        },
                        {
                            "bbox": [
                                105,
                                487,
                                361,
                                500
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        487,
                                        361,
                                        500
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                487,
                                                361,
                                                500
                                            ],
                                            "type": "text",
                                            "content": "[12] D. Kahneman. Thinking, fast and slow. Macmillan, 2011."
                                        }
                                    ]
                                }
                            ],
                            "index": 12
                        },
                        {
                            "bbox": [
                                105,
                                507,
                                505,
                                531
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        507,
                                        505,
                                        531
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                507,
                                                505,
                                                531
                                            ],
                                            "type": "text",
                                            "content": "[13] D. Kahneman, S. Frederick, et al. Representativeness revisited: Attribute substitution in intuitive judgment. Heuristics and biases: The psychology of intuitive judgment, 49(49-81):74, 2002."
                                        }
                                    ]
                                }
                            ],
                            "index": 13
                        },
                        {
                            "bbox": [
                                105,
                                537,
                                469,
                                550
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        537,
                                        469,
                                        550
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                537,
                                                469,
                                                550
                                            ],
                                            "type": "text",
                                            "content": "[14] G. Kim, P. Baldi, and S. McAleer. Language models can solve computer tasks, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 14
                        },
                        {
                            "bbox": [
                                105,
                                556,
                                505,
                                580
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        556,
                                        505,
                                        580
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                556,
                                                505,
                                                580
                                            ],
                                            "type": "text",
                                            "content": "[15] B. Liu, Y. Jiang, X. Zhang, Q. Liu, S. Zhang, J. Biswas, and P. Stone. Llm+p: Empowering large language models with optimal planning proficiency, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 15
                        },
                        {
                            "bbox": [
                                105,
                                586,
                                505,
                                631
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        586,
                                        505,
                                        631
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                586,
                                                505,
                                                631
                                            ],
                                            "type": "text",
                                            "content": "[16] X. Lu, S. Welleck, P. West, L. Jiang, J. Kasai, D. Khashabi, R. L. Bras, L. Qin, Y. Yu, R. Zellers, N. A. Smith, and Y. Choi. Neurologic a*esque decoding: Constrained text generation with lookahead heuristics. In North American Chapter of the Association for Computational Linguistics, 2021."
                                        }
                                    ]
                                }
                            ],
                            "index": 16
                        },
                        {
                            "bbox": [
                                105,
                                638,
                                505,
                                672
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        638,
                                        505,
                                        672
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                638,
                                                505,
                                                672
                                            ],
                                            "type": "text",
                                            "content": "[17] A. Madaan, N. Tandon, P. Gupta, S. Hallinan, L. Gao, S. Wiegreffe, U. Alon, N. Dziri, S. Prabhumoye, Y. Yang, S. Welleck, B. P. Majumder, S. Gupta, A. Yazdanbakhsh, and P. Clark. Self-refine: Iterative refinement with self-feedback, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 17
                        },
                        {
                            "bbox": [
                                105,
                                680,
                                505,
                                703
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        680,
                                        505,
                                        703
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                680,
                                                505,
                                                703
                                            ],
                                            "type": "text",
                                            "content": "[18] A. Newell, J. C. Shaw, and H. A. Simon. Report on a general problem solving program. In IFIP congress, volume 256, page 64. Pittsburgh, PA, 1959."
                                        }
                                    ]
                                }
                            ],
                            "index": 18
                        },
                        {
                            "bbox": [
                                105,
                                710,
                                436,
                                723
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        105,
                                        710,
                                        436,
                                        723
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                105,
                                                710,
                                                436,
                                                723
                                            ],
                                            "type": "text",
                                            "content": "[19] A. Newell, H. A. Simon, et al. Human problem solving. Prentice-Hall, 1972."
                                        }
                                    ]
                                }
                            ],
                            "index": 19
                        }
                    ],
                    "sub_type": "ref_text"
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        300,
                        741,
                        311,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                300,
                                741,
                                311,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        300,
                                        741,
                                        311,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "10"
                                }
                            ]
                        }
                    ],
                    "index": 21
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 9
        },
        {
            "para_blocks": [
                {
                    "bbox": [
                        106,
                        72,
                        506,
                        704
                    ],
                    "type": "list",
                    "angle": 0,
                    "index": 20,
                    "blocks": [
                        {
                            "bbox": [
                                106,
                                72,
                                381,
                                85
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        106,
                                        72,
                                        381,
                                        85
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                106,
                                                72,
                                                381,
                                                85
                                            ],
                                            "type": "text",
                                            "content": "[20] OpenAI. Gpt-4 technical report. ArXiv, abs/2303.08774, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 0
                        },
                        {
                            "bbox": [
                                106,
                                90,
                                505,
                                114
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        106,
                                        90,
                                        505,
                                        114
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                106,
                                                90,
                                                505,
                                                114
                                            ],
                                            "type": "text",
                                            "content": "[21] D. Paul, M. Ismayilzada, M. Peyrard, B. Borges, A. Bosselut, R. West, and B. Faltings. Refiner: Reasoning feedback on intermediate representations, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 1
                        },
                        {
                            "bbox": [
                                107,
                                121,
                                504,
                                144
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        121,
                                        504,
                                        144
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                121,
                                                504,
                                                144
                                            ],
                                            "type": "text",
                                            "content": "[22] A. Radford, K. Narasimhan, T. Salimans, I. Sutskever, et al. Improving language understanding by generative pre-training. OpenAI blog, 2018."
                                        }
                                    ]
                                }
                            ],
                            "index": 2
                        },
                        {
                            "bbox": [
                                107,
                                150,
                                504,
                                175
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        150,
                                        504,
                                        175
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                150,
                                                504,
                                                175
                                            ],
                                            "type": "text",
                                            "content": "[23] A. Radford, J. Wu, R. Child, D. Luan, D. Amodei, I. Sutskever, et al. Language models are unsupervised multitask learners. OpenAI blog, 1(8):9, 2019."
                                        }
                                    ]
                                }
                            ],
                            "index": 3
                        },
                        {
                            "bbox": [
                                107,
                                179,
                                506,
                                204
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        179,
                                        506,
                                        204
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                179,
                                                506,
                                                204
                                            ],
                                            "type": "text",
                                            "content": "[24] I. Schlag, S. Sukhbaatar, A. Celikyilmaz, W. tau Yih, J. Weston, J. Schmidhuber, and X. Li. Large language model programs, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 4
                        },
                        {
                            "bbox": [
                                107,
                                210,
                                504,
                                233
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        210,
                                        504,
                                        233
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                210,
                                                504,
                                                233
                                            ],
                                            "type": "text",
                                            "content": "[25] N. Shinn, B. Labash, and A. Gopinath. Reflexion: an autonomous agent with dynamic memory and self-reflection, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 5
                        },
                        {
                            "bbox": [
                                107,
                                239,
                                506,
                                274
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        239,
                                        506,
                                        274
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                239,
                                                506,
                                                274
                                            ],
                                            "type": "text",
                                            "content": "[26] D. Silver, J. Schrittwieser, K. Simonyan, I. Antonoglou, A. Huang, A. Guez, T. Hubert, L. Baker, M. Lai, A. Bolton, et al. Mastering the game of go without human knowledge. nature, 550 (7676):354-359, 2017."
                                        }
                                    ]
                                }
                            ],
                            "index": 6
                        },
                        {
                            "bbox": [
                                107,
                                280,
                                506,
                                303
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        280,
                                        506,
                                        303
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                280,
                                                506,
                                                303
                                            ],
                                            "type": "text",
                                            "content": "[27] S. A. Sloman. The empirical case for two systems of reasoning. Psychological bulletin, 119(1): 3, 1996."
                                        }
                                    ]
                                }
                            ],
                            "index": 7
                        },
                        {
                            "bbox": [
                                107,
                                310,
                                504,
                                334
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        310,
                                        504,
                                        334
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                310,
                                                504,
                                                334
                                            ],
                                            "type": "text",
                                            "content": "[28] K. E. Stanovich. Who is rational? Studies of individual differences in reasoning. Psychology Press, 1999."
                                        }
                                    ]
                                }
                            ],
                            "index": 8
                        },
                        {
                            "bbox": [
                                107,
                                340,
                                506,
                                373
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        340,
                                        506,
                                        373
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                340,
                                                506,
                                                373
                                            ],
                                            "type": "text",
                                            "content": "[29] H. Touvron, T. Lavril, G. Izacard, X. Martinet, M.-A. Lachaux, T. Lacroix, B. Rozière, N. Goyal, E. Hambro, F. Azhar, et al. Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 9
                        },
                        {
                            "bbox": [
                                107,
                                380,
                                506,
                                426
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        380,
                                        506,
                                        426
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                380,
                                                506,
                                                426
                                            ],
                                            "type": "text",
                                            "content": "[30] S. Verma, J. Fu, S. Yang, and S. Levine. Chai: A chatbot ai for task-oriented dialogue with offline reinforcement learning. In Proceedings of the 2022 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 4471-4491, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 10
                        },
                        {
                            "bbox": [
                                107,
                                432,
                                504,
                                456
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        432,
                                        504,
                                        456
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                432,
                                                504,
                                                456
                                            ],
                                            "type": "text",
                                            "content": "[31] E. Wallace, N. Tomlin, A. Xu, K. Yang, E. Pathak, M. Ginsberg, and D. Klein. Automated crossword solving. arXiv preprint arXiv:2205.09665, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 11
                        },
                        {
                            "bbox": [
                                107,
                                462,
                                506,
                                486
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        462,
                                        506,
                                        486
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                462,
                                                506,
                                                486
                                            ],
                                            "type": "text",
                                            "content": "[32] L. Wang, W. Xu, Y. Lan, Z. Hu, Y. Lan, R. K.-W. Lee, and E.-P. Lim. Plan-and-solve prompting: Improving zero-shot chain-of-thought reasoning by large language models, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 12
                        },
                        {
                            "bbox": [
                                107,
                                491,
                                504,
                                516
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        491,
                                        504,
                                        516
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                491,
                                                504,
                                                516
                                            ],
                                            "type": "text",
                                            "content": "[33] X. Wang, J. Wei, D. Schuurmans, Q. Le, E. Chi, and D. Zhou. Self-consistency improves chain of thought reasoning in language models. arXiv preprint arXiv:2203.11171, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 13
                        },
                        {
                            "bbox": [
                                107,
                                521,
                                504,
                                545
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        521,
                                        504,
                                        545
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                521,
                                                504,
                                                545
                                            ],
                                            "type": "text",
                                            "content": "[34] Z. Wang, S. Cai, A. Liu, X. Ma, and Y. Liang. Describe, explain, plan and select: Interactive planning with large language models enables open-world multi-task agents, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 14
                        },
                        {
                            "bbox": [
                                107,
                                552,
                                506,
                                575
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        552,
                                        506,
                                        575
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                552,
                                                506,
                                                575
                                            ],
                                            "type": "text",
                                            "content": "[35] J. Wei, X. Wang, D. Schuurmans, M. Bosma, E. Chi, Q. Le, and D. Zhou. Chain of thought prompting elicits reasoning in large language models. arXiv preprint arXiv:2201.11903, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 15
                        },
                        {
                            "bbox": [
                                107,
                                581,
                                504,
                                605
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        581,
                                        504,
                                        605
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                581,
                                                504,
                                                605
                                            ],
                                            "type": "text",
                                            "content": "[36] Y. Xie, K. Kawaguchi, Y. Zhao, X. Zhao, M.-Y. Kan, J. He, and Q. Xie. Decomposition enhances reasoning via self-evaluation guided decoding, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 16
                        },
                        {
                            "bbox": [
                                107,
                                611,
                                504,
                                635
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        611,
                                        504,
                                        635
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                611,
                                                504,
                                                635
                                            ],
                                            "type": "text",
                                            "content": "[37] S. Yang, O. Nachum, Y. Du, J. Wei, P. Abbeel, and D. Schuurmans. Foundation models for decision making: Problems, methods, and opportunities, 2023."
                                        }
                                    ]
                                }
                            ],
                            "index": 17
                        },
                        {
                            "bbox": [
                                107,
                                640,
                                504,
                                665
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        640,
                                        504,
                                        665
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                640,
                                                504,
                                                665
                                            ],
                                            "type": "text",
                                            "content": "[38] S. Yao, J. Zhao, D. Yu, N. Du, I. Shafran, K. Narasimhan, and Y. Cao. ReAct: Synergizing reasoning and acting in language models. arXiv preprint arXiv:2210.03629, 2022."
                                        }
                                    ]
                                }
                            ],
                            "index": 18
                        },
                        {
                            "bbox": [
                                107,
                                670,
                                504,
                                704
                            ],
                            "type": "ref_text",
                            "angle": 0,
                            "lines": [
                                {
                                    "bbox": [
                                        107,
                                        670,
                                        504,
                                        704
                                    ],
                                    "spans": [
                                        {
                                            "bbox": [
                                                107,
                                                670,
                                                504,
                                                704
                                            ],
                                            "type": "text",
                                            "content": "[39] S. Zhang, Z. Chen, Y. Shen, M. Ding, J. B. Tenenbaum, and C. Gan. Planning with large language models for code generation. In The Eleventh International Conference on Learning Representations, 2023. URL https://openreview.net/forum?id=Lr8c00tYbfL."
                                        }
                                    ]
                                }
                            ],
                            "index": 19
                        }
                    ],
                    "sub_type": "ref_text"
                }
            ],
            "discarded_blocks": [
                {
                    "bbox": [
                        300,
                        741,
                        310,
                        750
                    ],
                    "type": "page_number",
                    "angle": 0,
                    "lines": [
                        {
                            "bbox": [
                                300,
                                741,
                                310,
                                750
                            ],
                            "spans": [
                                {
                                    "bbox": [
                                        300,
                                        741,
                                        310,
                                        750
                                    ],
                                    "type": "text",
                                    "content": "11"
                                }
                            ]
                        }
                    ],
                    "index": 21
                }
            ],
            "page_size": [
                612,
                792
            ],
            "page_idx": 10
        }
    ],
    "_backend": "vlm",
    "_version_name": "2.5.4"
}