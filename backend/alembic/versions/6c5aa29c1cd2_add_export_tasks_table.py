"""Add export_tasks table

Revision ID: 6c5aa29c1cd2
Revises: 89001dbad64e
Create Date: 2025-09-16 13:30:53.380870

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6c5aa29c1cd2'
down_revision: Union[str, Sequence[str], None] = '89001dbad64e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('export_tasks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('project_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('export_format', sa.String(length=20), nullable=False),
    sa.Column('export_type', sa.String(length=20), nullable=False),
    sa.Column('export_options', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('download_url', sa.String(length=500), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('validation_result', sa.JSON(), nullable=True),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_export_tasks_project_id'), 'export_tasks', ['project_id'], unique=False)
    op.create_index(op.f('ix_export_tasks_status'), 'export_tasks', ['status'], unique=False)
    op.create_index(op.f('ix_export_tasks_task_id'), 'export_tasks', ['task_id'], unique=True)
    op.create_index(op.f('ix_export_tasks_user_id'), 'export_tasks', ['user_id'], unique=False)
    op.create_table('user_project_permissions',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('project_id', sa.String(length=36), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('granted_by', sa.String(length=36), nullable=True),
    sa.Column('granted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('kg_embeddings', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('kg_embeddings', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('kg_entities', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('kg_entities', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('kg_extractions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('kg_extractions', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('kg_relations', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('kg_relations', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_index(op.f('idx_projects_created_at'), table_name='projects')
    op.drop_index(op.f('idx_projects_name_search'), table_name='projects')
    op.drop_index(op.f('idx_projects_owner_status'), table_name='projects')
    op.drop_index(op.f('idx_slices_file_type'), table_name='slices')
    op.drop_index(op.f('idx_slices_page_number'), table_name='slices')
    op.alter_column('task_monitors', 'id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('users', sa.Column('role', sa.Enum('SUPER_ADMIN', 'ADMIN', 'USER', 'VIEWER', name='userrole'), nullable=False))
    op.add_column('users', sa.Column('department', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('login_count', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'login_count')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'department')
    op.drop_column('users', 'role')
    op.alter_column('task_monitors', 'id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
    op.create_index(op.f('idx_slices_page_number'), 'slices', ['page_number'], unique=False)
    op.create_index(op.f('idx_slices_file_type'), 'slices', ['file_id', 'slice_type'], unique=False)
    op.create_index(op.f('idx_projects_owner_status'), 'projects', ['owner_id', 'status'], unique=False)
    op.create_index(op.f('idx_projects_name_search'), 'projects', ['name'], unique=False)
    op.create_index(op.f('idx_projects_created_at'), 'projects', ['created_at'], unique=False)
    op.alter_column('kg_relations', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('kg_relations', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('kg_extractions', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('kg_extractions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('kg_entities', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('kg_entities', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('kg_embeddings', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('kg_embeddings', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.drop_table('user_project_permissions')
    op.drop_index(op.f('ix_export_tasks_user_id'), table_name='export_tasks')
    op.drop_index(op.f('ix_export_tasks_task_id'), table_name='export_tasks')
    op.drop_index(op.f('ix_export_tasks_status'), table_name='export_tasks')
    op.drop_index(op.f('ix_export_tasks_project_id'), table_name='export_tasks')
    op.drop_table('export_tasks')
    # ### end Alembic commands ###
