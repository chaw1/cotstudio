# 生产环境配置
version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      target: production
    restart: unless-stopped
    environment:
      - NODE_ENV=production

  backend:
    restart: unless-stopped
    environment:
      - DEBUG=false
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4

  celery:
    restart: unless-stopped
    environment:
      - DEBUG=false
    command: celery -A app.worker worker --loglevel=info --concurrency=4 -Q celery,ocr,llm,kg

  # 添加Nginx反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - cot-network

  postgres:
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cotdb}
      POSTGRES_USER: ${POSTGRES_USER:-cotuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  neo4j:
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD}

  redis:
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}

  minio:
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

  rabbitmq:
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}